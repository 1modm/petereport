{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/scripts/BlockDiagram/Utilities/Crypto.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramElement/DiagramObjectMover.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramElement/DiagramDisplaySettings.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramElement/BlockDiagram.ts","webpack:///./src/components/Controls/Fields/NumberField.vue?a065","webpack:///./src/assets/scripts/BlockDiagram/Utilities/MD5.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/Drawing.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/Events.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/Fonts.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/Math.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/String.ts","webpack:///./src/assets/scripts/BlockDiagram/Utilities/WebTypes.ts","webpack:///./src/components/Icons/CollapseArrow.vue?e2ca","webpack:///./src/components/Icons/CollapseArrow.vue?8335","webpack:///./src/components/Icons/CollapseArrow.vue?4a2b","webpack:///./src/assets/scripts/BlockDiagram/Attributes.ts","webpack:///./src/assets/scripts/BlockDiagram/SemanticAnalyzer/SemanticAnalyzer.ts","webpack:///./src/assets/scripts/BlockDiagram/SemanticAnalyzer/GraphExportTypes.ts","webpack:///./src/assets/scripts/BlockDiagram/PageImage.ts","webpack:///./src/components/Controls/TitleBar.vue?db75","webpack:///./src/components/Elements/ValidatorProblems.vue?f918","webpack:///./src/assets/scripts/BlockDiagram/DiagramFactory/DiagramFactoryError.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramFactory/DiagramTemplateTypes.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramFactory/BuiltinTemplates.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramFactory/DiagramFactory.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramElement/ViewportRegion.ts","webpack:///./src/App.vue?de41","webpack:///./src/components/Elements/PropertyEditor.vue?45b0","webpack:///./src/components/Controls/Fields/ListField.vue?f8b3","webpack:///./src/components/Controls/ContextMenuListing.vue?486a","webpack:///./src/components/Containers/ScrollBox.vue?1a07","webpack:///./src/assets/scripts/BlockDiagram/Property/PropertyDescriptorTypes.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/Property.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/DateProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/StringProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/NumberProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/CollectionProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/DictionaryProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/ListProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/EnumProperty.ts","webpack:///./src/assets/scripts/BlockDiagram/Property/RootProperty.ts","webpack:///./src/components/Controls/Fields/DictionaryFieldContents.vue?8734","webpack:///./src/components/Controls/Fields/TextField.vue?2500","webpack:///./src/components/Controls/Fields/TextField.vue?016c","webpack:///./src/components/Controls/Fields/TextField.vue?14c6","webpack:///./src/components/Controls/Fields/ListField.vue?a23c","webpack:///./src/components/Icons/Plus.vue?9a75","webpack:///./src/components/Icons/Plus.vue?e099","webpack:///./src/components/Icons/Plus.vue","webpack:///./src/components/Controls/Fields/EnumField.vue?0a38","webpack:///./src/components/Controls/Fields/EnumField.vue?c8dd","webpack:///./src/components/Controls/Fields/EnumField.vue?34af","webpack:///./src/components/Controls/Fields/NumberField.vue?c4b6","webpack:///./src/components/Controls/Fields/NumberField.vue?8cc3","webpack:///./src/components/Controls/Fields/NumberField.vue?daf6","webpack:///./src/components/Controls/Fields/DateTimeField.vue?f92a","webpack:///./src/components/Controls/Fields/DateTimeField.vue?4076","webpack:///./src/components/Controls/Fields/DateTimeField.vue?2877","webpack:///./src/components/Controls/Fields/ListField.vue?c676","webpack:///./src/components/Controls/Fields/ListField.vue?0b2a","webpack:///./src/components/Controls/Fields/DictionaryFieldContents.vue?ba9e","webpack:///./src/components/Controls/Fields/DictionaryFieldContents.vue?9965","webpack:///./src/components/Containers/ScrollBox.vue?699d","webpack:///./src/components/Containers/ScrollBox.vue?e6d3","webpack:///./src/components/Containers/ScrollBox.vue?8ec8","webpack:///./src/components/Elements/AppTitleBar.vue?0aa8","webpack:///./src/components/Icons/CollapseArrow.vue?501a","webpack:///./src/components/Elements/AppFooterBar.vue?6830","webpack:///./src/assets/scripts/BlockDiagram/DiagramElement/RasterCache.ts","webpack:///./src/components/Controls/Fields/TextField.vue?a406","webpack:///./src/components/Controls/ContextMenu.vue?a994","webpack:///./src/components/Elements/EditorSidebar.vue?0d8f","webpack:///./src/components/Controls/Fields/EnumField.vue?7704","webpack:///./src/components/Containers/AccordionBox.vue?3671","webpack:///./src/components/Controls/Fields/DictionaryFieldContents.vue?4e08","webpack:///./src/assets/scripts/PointerTracker.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramObjectView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramAnchorView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramAnchorableView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramLineEndingView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramLineHandleView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramLineView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BaseTypes/DiagramRootView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineEndingPointView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineHandlePointView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineHorizontalElbowView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/LineVerticalElbowView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/AnchorPointView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/DictionaryBlockView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/BranchBlockView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/TextBlockView.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramViewTypes/PageView.ts","webpack:///./src/components/Controls/Fields/DateTimeField.vue?8609","webpack:///./src/assets/scripts/BlockDiagram/DiagramFactory/Themes.ts","webpack:///./src/components/Containers/AccordionPane.vue?00cf","webpack:///./src/components/Containers/HotkeyBox.vue?9787","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramObjectModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramAnchorModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramAnchorableModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramLineEndingModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramLineHandleModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramLineModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BaseTypes/DiagramRootModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineEndingPointModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineHandlePointModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineHorizontalElbowModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/LineVerticalElbowModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/AnchorPointModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/DictionaryBlockModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/BranchBlockModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/TextBlockModel.ts","webpack:///./src/assets/scripts/BlockDiagram/DiagramModelTypes/PageModel.ts","webpack:///./src/App.vue?8c0c","webpack:///./src/assets/scripts/DiagramValidator/DiagramValidator.ts","webpack:///./src/assets/builder.config.validator.ts","webpack:///./src/assets/scripts/DiagramPublisher/DiagramPublisher.ts","webpack:///./src/assets/builder.config.publisher.ts","webpack:///./src/assets/builder.config.ts","webpack:///./src/store/Commands/AppCommand.ts","webpack:///./src/store/Commands/AppCommands/CopySelectedChildren.ts","webpack:///./src/assets/scripts/Browser.ts","webpack:///./src/store/PageEditor.ts","webpack:///./src/store/Commands/AppCommands/LoadFile.ts","webpack:///./src/store/Commands/AppCommands/LoadSettings.ts","webpack:///./src/store/Commands/AppCommands/OpenHyperlink.ts","webpack:///./src/store/Commands/AppCommands/PublishPageToDevice.ts","webpack:///./src/store/Commands/AppCommands/SavePageImageToDevice.ts","webpack:///./src/store/Commands/AppCommands/SavePageToDevice.ts","webpack:///./src/store/Commands/AppCommands/SaveSelectionImageToDevice.ts","webpack:///./src/store/Commands/AppCommands/SetEditorPointerLocation.ts","webpack:///./src/store/Commands/AppCommands/SetEditorViewParams.ts","webpack:///./src/store/Commands/AppCommands/SetRenderQuality.ts","webpack:///./src/store/Commands/AppCommands/SwitchToFullscreen.ts","webpack:///./src/store/Commands/AppCommands/ToggleDebugDisplay.ts","webpack:///./src/store/Commands/AppCommands/ToggleGridDisplay.ts","webpack:///./src/store/Commands/AppCommands/ToggleShadowDisplay.ts","webpack:///./src/components/Elements/AppTitleBar.vue?f328","webpack:///./src/components/Controls/TitleBar.vue?a66d","webpack:///./src/components/Controls/ContextMenuListing.vue?f3ef","webpack:///./src/assets/scripts/ContextMenuTypes.ts","webpack:///./src/components/Controls/ContextMenuListing.vue?ca06","webpack:///./src/components/Controls/ContextMenuListing.vue?54cb","webpack:///./src/components/Controls/TitleBar.vue?9434","webpack:///./src/components/Controls/TitleBar.vue?5db6","webpack:///./src/components/Elements/AppTitleBar.vue?4475","webpack:///./src/components/Elements/AppTitleBar.vue?cd95","webpack:///./src/components/Elements/AppHotkeyBox.vue?27ab","webpack:///./src/components/Containers/HotkeyBox.vue?054d","webpack:///./src/assets/scripts/HotkeyObserver.ts","webpack:///./src/components/Containers/HotkeyBox.vue?7b2c","webpack:///./src/components/Containers/HotkeyBox.vue?b709","webpack:///./src/components/Elements/AppHotkeyBox.vue?71ce","webpack:///./src/components/Elements/AppHotkeyBox.vue","webpack:///./src/store/Commands/PageCommands/ReorderObject.ts","webpack:///./src/components/Elements/BlockDiagram.vue?cf05","webpack:///./src/store/Commands/PageCommand.ts","webpack:///./src/store/Commands/PageCommands/AddLineObject.ts","webpack:///./src/store/Commands/PageCommands/AddObject.ts","webpack:///./src/store/Commands/PageCommands/AttachObject.ts","webpack:///./src/store/Commands/PageCommands/CreateSubproperty.ts","webpack:///./src/store/Commands/PageCommands/GroupCommand.ts","webpack:///./src/store/Commands/PageCommands/RemoveObjects.ts","webpack:///./src/store/Commands/PageCommands/UnhoverObject.ts","webpack:///./src/store/Commands/PageCommands/UnselectObject.ts","webpack:///./src/store/Commands/PageCommands/RemoveSelectedChildren.ts","webpack:///./src/store/Commands/PageCommands/CutSelectedChildren.ts","webpack:///./src/store/Commands/PageCommands/DeleteSubproperty.ts","webpack:///./src/store/Commands/PageCommands/DetachObject.ts","webpack:///./src/store/Commands/PageCommands/DuplicateSelectedChildren.ts","webpack:///./src/store/Commands/PageCommands/HoverObject.ts","webpack:///./src/store/Commands/PageCommands/SelectObject.ts","webpack:///./src/store/Commands/PageCommands/UnselectDescendants.ts","webpack:///./src/store/Commands/PageCommands/MoveCameraToObjects.ts","webpack:///./src/store/Commands/PageCommands/MoveCameraToChildren.ts","webpack:///./src/store/Commands/PageCommands/MoveCameraToParents.ts","webpack:///./src/store/Commands/PageCommands/MoveCameraToSelection.ts","webpack:///./src/store/Commands/PageCommands/MoveObjectBy.ts","webpack:///./src/store/Commands/PageCommands/MoveObjectTo.ts","webpack:///./src/store/Commands/PageCommands/PasteToObject.ts","webpack:///./src/store/Commands/PageCommands/RedoPageCommand.ts","webpack:///./src/store/Commands/PageCommands/ReorderSelectedChildren.ts","webpack:///./src/store/Commands/PageCommands/ResetCamera.ts","webpack:///./src/store/Commands/PageCommands/SelectChildren.ts","webpack:///./src/store/Commands/PageCommands/SetDateProperty.ts","webpack:///./src/store/Commands/PageCommands/SetEnumProperty.ts","webpack:///./src/store/Commands/PageCommands/SetNumberProperty.ts","webpack:///./src/store/Commands/PageCommands/SetStringProperty.ts","webpack:///./src/store/Commands/PageCommands/SpawnObject.ts","webpack:///./src/store/Commands/PageCommands/UndoPageCommand.ts","webpack:///./src/store/Commands/PageCommands/UnhoverDescendants.ts","webpack:///./src/store/Commands/PageCommands/UserSetObjectPosition.ts","webpack:///./src/store/Commands/PageCommands/ZoomCamera.ts","webpack:///./src/components/Controls/ContextMenu.vue?a59e","webpack:///./src/components/Controls/ContextMenu.vue?9d65","webpack:///./src/components/Controls/ContextMenu.vue?57d5","webpack:///./src/components/Elements/BlockDiagram.vue?cead","webpack:///./src/components/Elements/BlockDiagram.vue?075a","webpack:///./src/components/Elements/AppFooterBar.vue?9c90","webpack:///./src/components/Elements/AppFooterBar.vue?fced","webpack:///./src/components/Elements/AppFooterBar.vue?a743","webpack:///./src/components/Elements/EditorSidebar.vue?dd1d","webpack:///./src/components/Containers/AccordionBox.vue?ab7e","webpack:///./src/components/Containers/AccordionBox.vue?ea08","webpack:///./src/components/Containers/AccordionPane.vue?caa6","webpack:///./src/components/Containers/AccordionPane.vue?fd7f","webpack:///./src/components/Containers/AccordionPane.vue?f9fa","webpack:///./src/components/Elements/PropertyEditor.vue?9e5a","webpack:///./src/components/Elements/PropertyEditor.vue?f845","webpack:///./src/components/Elements/PropertyEditor.vue?4b49","webpack:///./src/components/Elements/ValidatorProblems.vue?f013","webpack:///./src/components/Elements/ValidatorProblems.vue?f557","webpack:///./src/components/Elements/ValidatorProblems.vue?d155","webpack:///./src/components/Elements/EditorSidebar.vue?f9dc","webpack:///./src/components/Elements/EditorSidebar.vue?a5d5","webpack:///./src/App.vue?47b3","webpack:///./src/App.vue?6697","webpack:///./src/store/StoreTypes.ts","webpack:///./src/store/Stores/ApplicationStore.ts","webpack:///./src/store/Stores/ContextMenuStore.ts","webpack:///./src/store/Stores/HotkeyStore.ts","webpack:///./src/store/index.ts","webpack:///./src/main.ts","webpack:///./src/components/Elements/BlockDiagram.vue?09a6","webpack:///./src/components/Containers/FocusBox.vue?c50a","webpack:///./src/components/Containers/FocusBox.vue?92fa","webpack:///./src/components/Containers/FocusBox.vue"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","Crypto","crypto","randomUUID","replace","parseInt","getRandomValues","Uint8Array","toString","gridX","gridY","this","dx","dy","ox","oy","odx","ody","anchor","_cx","_cy","_cdx","_cdy","_alignment","Free","_gridX","_gridY","_anchors","alignment","cx","cy","anchors","ax","ay","bb","cursorX","cursorY","boundingBox","radius","xMid","yMid","Grid","DiagramDisplaySettings","showGrid","showShadows","showDebug","ssaaScale","shadowsDisableAt","DragActionType","super","page","createDummy","cache","RasterCache","_canvas","_context","_display","_elWidth","_elHeight","_mover","grid","_layoutLocked","_page","createView","_rafId","_rasterCache","_resizeObserver","_transform","_viewport","ViewportRegion","_ztoId","_zoom","scaleExtent","on","onCanvasZoom","onCanvasZoomEnd","_hovObj","container","clientWidth","clientHeight","append","attr","onHoverSubject","preventDefault","node","getContext","alpha","ResizeObserver","entries","onCanvasResize","observe","filter","subject","onSelectSubject","onObjectDragStarted","onObjectDragged","onObjectDragEnded","remove","removeAllListeners","disconnect","callback","once","args","emit","display","k","setScale","requestAnimationFrame","executeRenderPipeline","renderPageSurfaceTo","renderTo","renderDebugTo","x","y","cursor","invertX","invertY","hovObj","el","getObjectAt","getCursor","Default","mv","evt","sourceEvent","obj","rc","button","Right","line","makeLine","srcEnding","moveTo","trgEnding","view","updateView","CreateLine","parent","lookup","id","selects","MoveAnchorable","Move","objs","al","an","Math","max","getAlignment","children","anchorCache","reset","attrs","updateDelta","fakePositionSetByUser","True","moveBy","render","tdx","tdy","ids","map","isAttached","par","trg","transform","getScale","RASTER_CACHE_UPDATE_DELAY","updateViewportBounds","setTransform","newWidth","newHeight","padding","VIEWPORT_PADDING","xMin","round","xMax","yMin","yMax","scale","location","animate","transition","duration","translate","hex","toHex","num","str","charAt","stringToBlocks","size","blocks","Array","fill","charCodeAt","add","lsw","msw","rol","cnt","cmn","q","a","b","ff","gg","hh","ii","MD5","old_a","old_b","old_c","old_d","drawArrowHead","ctx","sx","sy","tx","ty","h","angle","atan2","cos","PI","sin","beginPath","lineTo","closePath","drawRect","w","tl","tr","br","bl","quadraticCurveTo","EventEmitter","_listeners","Map","has","set","unshift","actions","indexOf","listeners","delete","clear","_fontList","Font","family","descriptor","getCssFontString","descriptors","req","font","loadFont","results","allSettled","failedFonts","status","fonts","join","fontString","check","timeoutId","start","Date","now","load","res","rej","fetch","fontList","timer","_","race","weight","css","_ctx","_widthIndex","char","DEFAULT_INDEX","measureWidth","text","measureText","width","ascent","actualBoundingBoxAscent","descent","actualBoundingBoxDescent","lines","trim","split","segments","lineWrap","flat","lineWidth","tokens","WHITESPACE","Boolean","whitespaceParity","test","tokenWidth","trimEnd","word","getCharWidth","GlobalFontStore","clamp","min","multiple","sign","abs","generateBitMask","mask","bit","getLineHitbox","x0","y0","x1","y1","vx","vy","acos","sqrt","isInsideRegion","vertices","minX","Infinity","minY","maxX","maxY","v1x0","v1y0","v1x1","v1y1","totalIntersections","len","intersection","doVectorsIntersect","v2x0","v2y0","v2x1","v2y1","a1","b1","c1","a2","b2","c2","d1","d2","computeHash","string","hash","capitalize","toLocaleUpperCase","substring","titleCase","MouseClick","_withScopeId","_hoisted_1","_hoisted_2","_hoisted_3","_cache","$props","$setup","$data","$options","height","color","class","collapsed","version","viewBox","xmlns","props","default","String","__exports__","Alignment","AlignmentMask","Cursor","Pointer","Crosshair","NotAllowed","Grab","Grabbing","N_Resize","E_Resize","S_Resize","W_Resize","EW_Resize","NS_Resize","Col_Resize","Row_Resize","CursorMask","Hover","Off","Direct","Indirect","HoverMask","InheritAlignment","False","InheritAlignmentMask","PositionSetByUser","PositionSetByUserMask","Priority","Normal","High","PriorityMask","Select","SelectMask","SemanticRole","None","Node","Edge","LinkSource","LinkTarget","SemanticRoleMask","CursorCssName","Direction","GraphObjectExport","template","nextLinkMap","prevLinkMap","values","items","edges","nodes","getSubtree","getSemanticRole","next","traverse","Next","prev","Prev","direction","hasRole","stack","pop","child","registerLink","traverseAnchorable","via","source","r1","r2","_padding","_showGrid","_showShadows","_showDebug","can","viewport","attrCache","attrObjs","isHoveredOrSelected","setSelect","setHover","DiagramFactoryError","TemplateType","AnchorAngle","BUILTIN_PREFIX","BuiltinTemplates","Page","role","properties","Property","is_primary","style","AnchorPoint","line_templates","DEG_0","DEG_90","LineHandlePoint","LineHandle","LineEndingPoint","LineEnding","namespace","LineHorizontalElbow","hitbox_width","line_handle_template","line_ending_template","Line","LineVerticalElbow","schema","templates","_namespace","page_template","copy","structuredClone","Set","path","concat","getFontDescriptorsFromTemplate","loadFonts","swapFontDescriptorsWithFonts","param1","vals","temp","BranchBlock","DictionaryBlock","TextBlock","objects","clones","cloneObject","links","link","addChild","clone","createObject","toExport","s1","branch","s2","one_title","title","two_title","subtitle","body","field_name","field_value","s3","getFont","cloneTemplate","JSON","stringify","parse","PropertyType","trigger","_parent","owner","Int","Float","Enum","List","Dictionary","toHashValue","updateProperty","v","_value","setValue","toISOString","keys","toRawValue","primaryKey","form","val","isArray","find","at","prop","index","isDefined","getNextId","options","toReferenceValue","dpd","_notifyPropertyUpdate","listener","fields","getField","onChange","$emit","onCreate","onDelete","disabled","tabindex","tabIndex","onFocus","$event","ref","placeholder","onInput","onKeyup","onKeydown","onBlur","field","required","updateTimeout","Number","sto","activeProperty","onResizeObserver","computed","_property","is_editable","methods","$nextTick","focus","refreshHeight","refreshValue","scrollHeight","emits","watch","_component_Plus","onPointerdown","_hoisted_4","_hoisted_5","_component_ScrollBox","_component_FocusBox","open","showMenu","openMenu","onUnfocus","closeMenu","isNull","propagateScroll","active","hovered","onMouseenter","onClick","maxHeight","components","FocusBox","ScrollBox","onKeyDown","delta","parseFloat","isNaN","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","enterEditMode","prop_M","prop_D","prop_Y","prop_H","prop_m","prop_s","showEditor","maxlength","segment","value_M","value_D","value_Y","value_H","value_m","value_s","Segment","Months","M","D","Y","H","getUTCMonth","getUTCDate","getUTCFullYear","getUTCHours","padStart","getUTCMinutes","getUTCSeconds","$el","contains","relatedTarget","exitEditMode","selectionStart","selectionEnd","shiftFocus","maxLength","activeElement","adj","ISO8601","date","getTime","DictionaryField","Plus","TextField","EnumField","NumberField","DateTimeField","is_visible","ListField","onWheelPassive","moveScrollPosition","scrollTop","deltaY","$slots","scroll","sty","handle","startDrag","onPointerup","stopDrag","showScrollbar","alwaysShowScrollBar","content","resetScrollOnChange","handleColor","scrollColor","borderColor","windowMax","background","trk","PointerTracker","hei","pos","onMutateObserver","capture","onDrag","addEventListener","track","handleTopToTop","movementY","release","resetTop","ratio","recalculateScrollState","position","topToHandleTop","hasMoved","canMove","stopPropagation","top","mutateOptions","childList","characterData","subtree","MutationObserver","_scale","raster","Raster","context","drawImage","canvas","tp","fillStyle","strokeStyle","textBaseline","stroke","fillText","deltaX","movementX","_originX","_originY","_lastX","_lastY","clientX","clientY","setPointerCapture","pointerId","onpointermove","update","releasePointerCapture","rasterCache","match","visited","queue","vr","dsx","dsy","isVisible","hover","inherit","positionSetByUser","priority","select","warn","useSuper","moveChild","_objectCache","save","setLineDash","restore","fill_color","stroke_color","stroke_width","arc","wo","e1","h1","e2","hdx","hdy","hasUserSetPosition","lineColor","cap_size","cs","select_color","eo","isSelected","hitbox","hitboxes","isHovered","tlx","tly","bf","bs","select_outline","so","border_radius","headerHeight","layout","isSplitBlock","shadowOffsetX","shadowOffsetY","anchor_markers","placements","grid_color","gc","background_color","bc","_gridPattern","createGridPattern","fillRect","drop_shadow","offset","shadowColor","fillColor","strokeColor","ptr","createPattern","DOMMatrix","Colors","Blue","Orange","Green","Red","Gray","BlockDiagramTheme","theme","_theme","merge","dictionary","lineEnding","lineHandle","dst","DarkTheme","max_width","line_height","vertical_padding","horizontal_padding","factory","setAlignment","setCursor","setInheritAlignment","setSemanticRole","BoundingBox","DiagramObjectModelError","updateLayout","LayoutUpdateReason","ChildAdded","safely","hasExternalAttachments","ChildDeleted","findIndex","hasHigherPriorityThan","getPriority","updateParent","atBaseOfMovement","Movement","atBaseOfLayout","recalculateLayout","Initialization","reasons","align","floor","isAlignmentInherited","getPositionSetByUser","PropUpdate","lineTemplates","tem","hitboxWidth","le","lh","setPriority","han","isAnchored","e1x","e1y","e2x","e2y","h1x","h2y","anchor_template","onUpdate","contentHash","contentChanged","fullLayoutRequired","fnf","fvf","strokeWidth","titleText","subtitleText","hasSubtitle","hasBody","hasFields","tf","mw","measure","stf","wordWrap","fieldName","fieldValue","xo","yo","branches","bw","branchText","vp","_x","_m","_h","_hh","_hw","hp","DiagramFactory","_component_AppTitleBar","_component_BlockDiagram","_component_EditorSidebar","_component_AppFooterBar","_component_AppHotkeyBox","gridLayout","startResize","Handle","DiagramValidator","_errors","_warnings","validate","diagram","reason","graph","toGraph","validateNode","edge","validateEdge","validateProperty","addError","is_required","addWarning","DiagramPublisher","AttackFlowExtensionId","AttackFlowSchemaUrl","AttackFlowSchemaVersion","AttackFlowExtensionCreatedDate","AttackFlowExtensionModifiedDate","AttackFlowDocsExternalReference","source_name","description","url","AttackFlowGitHubExternalReference","AttackFlowExtensionCreatorName","AttackFlowSdos","AttackFlowTemplatesMap","pageId","stixBundle","createStixBundle","author","createFlowAuthorSdo","flow","createFlowSdo","stixNodes","stixChildren","stixNode","toStixNode","prevNode","nextNode","SROs","tryEmbed","invalidParentType","edgeId","nodeId","stixId","start_refs","createSdo","mergeActionProperty","mergeBasicDictProperty","getSubproperties","mergeBasicListProperty","sro","tryEmbedInAction","tryEmbedInAsset","tryEmbedInCondition","tryEmbedInOperator","tryEmbedInNote","tryEmbedInDefault","command_ref","createSro","asset_refs","effect_refs","object_ref","on_true_refs","on_false_refs","object_refs","extensionAuthor","createExtensionAuthorSdo","extension","createExtensionSdo","creatorId","created","modified","created_by_ref","extension_types","external_references","create_by_ref","identity_class","authorId","fromEntries","toLocaleLowerCase","sdo","spec_version","extensions","extension_type","relationship_type","source_ref","target_ref","subproperties","BoolEnum","config","is_web_hosted","file_type_name","file_type_extension","contact_information","scope","tactic_id","tactic_ref","technique_id","technique_ref","confidence","execution_start","execution_end","pattern","pattern_type","pattern_version","operator","aliases","kill_chain_phases","first_seen","last_seen","objective","action_type","os_execution_envs","action_bin","roles","sectors","indicator_types","patter_version","valid_from","valid_until","infrastructure_types","goals","resource_level","primary_motivation","secondary_motivations","latitude","longitude","precision","region","country","administrative_area","city","street_address","postal_code","malware_types","is_family","architecture_execution_envs","implementation_languages","capabilities","product","configuration_version","analysis_engine_version","analysis_definition_version","submitted","analysis_started","analysis_ended","av_result","abstract","authors","first_observed","last_observed","number_observed","explanation","opinion","report_types","published","threat_actor_types","sophistication","personal_motivations","tool_types","tool_version","mime_type","payload_bin","hashes","encryption_algorithm","decryption_key","number","rir","path_enc","ctime","mtime","atime","display_name","is_multipart","content_type","message_id","received_lines","additional_header_fields","body_multipart","name_enc","magic_number_hex","end","is_active","src_port","dst_port","protocols","src_byte_count","dst_byte_count","src_packets","dst_packets","ipfix","is_hidden","pid","created_time","cwd","command_line","environment_variables","cpe","languages","vendor","user_id","credential","account_login","account_type","is_service_account","is_privileged","can_escalate_privs","is_disabled","account_created","account_expires","credential_last_changed","account_first_login","account_last_login","modified_time","number_of_subkeys","is_self_signed","serial_number","signature_algorithm","issuer","validity_not_before","validity_not_after","subject_public_key_algorithm","subject_public_key_modulus","subject_public_key_exponent","menus","help_menu","help_links","validator","publisher","AppCommand","settings","edit","clone_offset","cloneObjects","_objects","clipboard","Browser","filename","ext","blob","Blob","URL","createObjectURL","_aLink","download","click","revokeObjectURL","toBlob","fileInput","file","files","reader","FileReader","contents","readAsText","cast","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","pointer","_undoStack","_redoStack","_validator","run","command","execute","undo","inValidState","getErrors","getWarnings","pageExp","pageObj","deserialize","exp","expIndex","objIndex","doc","getSchema","_editor","createNew","fromFile","openTextFileDialog","credentials","pages","activePage","_settings","_url","editor","isValid","downloadTextFile","publish","image_export","image","PageImage","display_grid","display_shadows","display_debug_mode","downloadImageFile","toFile","_y","params","_params","highQuality","_highQuality","render_high_quality","_component_TitleBar","onSelect","onItemSelect","icon","_component_ContextMenuListing","menuClose","menu","focused","focusedMenu","menuEnter","menuOpen","sections","menuSelect","onContextmenu","section","item","MenuType","Submenu","submenuEnter","onMouseleave","submenuLeave","focusedSubMenu","onChildItemSelect","onItemClick","formatShortcut","shortcut","KeyToText","Control","Escape","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Delete","forceInsideWindow","xOffset","yOffset","leaveTimeout","leaveTimeoutId","marginTop","marginLeft","keepMenuOpenOnSelect","closeSubmenu","viewWidth","innerWidth","viewHeight","innerHeight","left","bottom","right","getBoundingClientRect","ContextMenuListing","fileMenu","editMenu","layoutMenu","viewMenu","helpMenu","emitter","cmd","ex","TitleBar","_component_HotkeyBox","hotkeys","global","onFire","onHotkeyFired","HotkeyObserver","recognitionDelay","_boundAdvanceKeyState","advanceKeyState","_boundReverseKeyState","reverseKeyState","_callback","_container","_hotkeyIdMap","_keyState","removeEventListener","keyMap","hotkeyId","keySequenceToHotKeyId","startsWith","OverlappingHotkeysError","sequence","strict","includes","tagName","isRepeat","endsWith","hotkey","repeatable","allowBrowserBehavior","isHotkeyActive","observer","setHotkeys","nativeHotkeys","fileHotkeys","editHotKeys","layoutHotkeys","viewHotkeys","HotkeyBox","Order","_component_ContextMenu","cursorStyle","menuStyle","menuOptions","closeContextMenu","PageCommand","NullPage","root","_object","_source","_target","_anchor","_id","_subproperty","addProperty","removeProperty","_commands","record","_links","_items","getIndexInParent","getIndexInAnchor","subproperty","_index","regionW","regionH","_location","getNextBlocks","getNextGraphLinks","parents","getPrevBlocks","getPrevGraphLinks","_dx","_dy","_lx","_ly","_nx","_ny","redo","order","_prevIndex","Top","_nextIndex","OneAbove","OneBelow","Bottom","reorderChild","lv","_lastValue","_nextValue","isDirectlyHovered","setPositionSetByUser","BlockDiagram","show","state","disable_shadows_at","many","hasSelection","deleteMenu","clipboardMenu","duplicateMenu","layeringMenu","jumpMenu","undoRedoMenu","createAtMenu","selectAllMenu","zoomMenu","diagramViewMenu","isMultiselect","multiselectHotkey","openContextMenu","setPage","setCameraLocation","camera","setGridDisplay","displayGrid","setShadowsDisplay","displayShadows","setDebugDisplay","displayDebugMode","setSsaaScale","renderHighQuality","setShadowsDisableAt","disableShadowsAt","onObjectHover","onObjectClick","onCanvasClick","onObjectMove","onObjectAttach","onObjectDetach","onViewTransform","onLineCreate","inject","destroy","ContextMenu","fileName","_component_PropertyEditor","_component_AccordionPane","_component_ValidatorProblems","_component_AccordionBox","units","selected","panes","activePane","collapseHeight","gridTemplateRows","activeHeight","uncollapsePane","collapsePane","cacheHeights","currentHeight","reduce","cachedHeight","elementHeight","getAvailableHeight","nextHeight","uncollapsedHeight","available","availableDelta","neededHeight","minHeight","forEach","growPane","remainingDelta","growAmount","proportions","minElementHeight","percentToMinimum","slot","totalHeight","totalUnits","refit","totalPanes","pane","_slots","onCollapse","CollapseArrow","box","boxStyle","_component_DictionaryFieldContents","DictionaryFieldContents","getValidationErrors","getValidationWarnings","warning","getSelection","AccordionBox","AccordionPane","PropertyEditor","ValidatorProblems","bodyWidth","bodyHeight","frameSize","minFrameSize","drag","gridTemplateColumns","origin","onResize","stopResize","setRightFrameSize","json","fromNew","URLSearchParams","search","fromUrl","AppHotkeyBox","AppTitleBar","AppFooterBar","EditorSidebar","BaseAppSettings","new_file","open_file","save_file","save_image","save_select_image","publish_file","open_library","save_library","cut","paste","duplicate","select_all","selection_to_front","selection_to_back","bring_selection_forward","send_selection_backward","align_left","align_center","align_right","align_top","align_middle","align_bottom","group","ungroup","open_group","close_group","toggle_grid","toggle_shadows","reset_view","zoom_in","zoom_out","fullscreen","jump_to_selection","jump_to_parents","jump_to_children","toggle_debug_view","Publisher","DummyPage","namespaced","getters","canUndo","canRedo","mutations","_s","rootState","ApplicationStore","openFileMenu","saveFileMenu","publishFileMenu","_g","Item","fromFileSystem","rootGetters","createMenu","canPaste","getNamespace","generateCreateMenu","diagramRenderMenu","fullscreenMenu","developerViewMenu","Toggle","spawn","sm","ContextMenuStore","HotkeyStore","App","use","store","mount","onFocusOut"],"mappings":"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","file":"js/app.19499ba5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-54fc3fcc\":\"b46dbdbf\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-54fc3fcc\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-54fc3fcc\":\"2e92697c\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export class Crypto { \n\n    /**\n     * Returns a randomly generated v4 UUID.\n     * @returns \n     *  A string containing a randomly generated, 36 character long v4 UUID.\n     */\n    public static randomUUID(): string {\n        if(crypto.randomUUID) {\n            // Use built-in browser function, if available\n            return crypto.randomUUID();\n        } else {\n            return (`${1e7}-${1e3}-${4e3}-${8e3}-${1e11}`).replace(/[018]/g, c => \n                (parseInt(c) ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> parseInt(c) / 4).toString(16)\n            );\n        }\n    }\n\n}\n","import { round } from \"../Utilities\";\nimport { Alignment } from \"../Attributes\";\nimport { DiagramAnchorModel } from \"../DiagramModelTypes\";\n\nexport class DiagramObjectMover { \n\n    /**\n     * The object's current delta-x.\n     */\n    public dx: number;\n\n    /**\n     * The object's current delta-y.\n     */\n    public dy: number;\n\n    /**\n     * The object's origin on the x-axis.\n     */\n    public ox: number;\n\n    /**\n     * The object's origin on the y-axis.\n     */\n    public oy: number;\n\n    /**\n     * The object's total delta-x.\n     */\n    public odx: number;\n\n    /**\n     * The object's total delta-y.\n     */\n    public ody: number;\n\n    /**\n     * The anchor the object is currently over.\n     */\n    public anchor: DiagramAnchorModel | undefined;\n\n    /**\n     * The cursor's origin on the x-axis.\n     */\n    private _cx: number;\n\n    /**\n     * The cursor's origin on the y-axis.\n     */\n    private _cy: number;\n\n    /**\n     * The cursor's total delta-x.\n     */\n    private _cdx: number;\n\n    /**\n     * The cursor's total delta-y.\n     */\n    private _cdy: number;\n\n    /**\n     * The object's alignment.\n     */\n    private _alignment: number;\n\n    /**\n     * The grid size on the x-axis.\n     */\n    private _gridX: number;\n\n    /**\n     * The grid size on the y-axis.\n     */\n    private _gridY: number;\n\n    /**\n     * The mover's anchors.\n     */\n    private _anchors: DiagramAnchorModel[];\n\n\n    /**\n     * Creates a new {@link DiagramObjectMover}.\n     * @param gridX\n     *  The grid size on the x-axis. \n     * @param gridY\n     *  The grid size on the y-axis.\n     */\n    constructor(gridX: number, gridY: number) {\n        this.dx = 0;\n        this.dy = 0;\n        this.ox = 0;\n        this.oy = 0;\n        this.odx = 0;\n        this.ody = 0;\n        this.anchor = undefined;\n        this._cx = 0;\n        this._cy = 0;\n        this._cdx = 0;\n        this._cdy = 0;\n        this._alignment = Alignment.Free,\n        this._gridX = gridX;\n        this._gridY = gridY;\n        this._anchors = [];\n    }\n\n    /**\n     * Resets the object mover.\n     * @param alignment\n     *  The new alignment.\n     * @param cy\n     *  The cursor's origin on the x-axis.\n     * @param cx\n     *  The cursor's origin on the y-axis.\n     * @param ox\n     *  The object's origin on the x-axis.\n     * @param oy\n     *  The object's origin on the y-axis.\n     * @param anchors\n     *  The set of anchors to track.\n     */\n    public reset(\n        alignment: number, \n        cx: number, cy: number,\n        ox: number, oy: number,\n        anchors?: DiagramAnchorModel[]\n    ) {\n        this.dx = 0;\n        this.dy = 0;\n        this.ox = ox;\n        this.oy = oy;\n        this.odx = 0;\n        this.ody = 0;\n        this.anchor = undefined;\n        this._cx = cx;\n        this._cy = cy;\n        this._cdx = 0;\n        this._cdy = 0;\n        this._alignment = alignment;\n        this._anchors = anchors ?? [];\n    }\n\n    /**\n     * Calculates the actual delta from the current delta.\n     * @param dx\n     *  The current delta-x.\n     * @param dy\n     *  The current delta-y.\n     */\n    public updateDelta(dx: number, dy: number) {\n        this._cdx += dx;\n        this._cdy += dy;\n        let cursorX = this._cx + this._cdx;\n        let cursorY = this._cy + this._cdy;\n        // Assess anchors\n        let r, ax, ay, bb;\n        for(let anchor of this._anchors) {\n            bb = anchor.boundingBox;\n            r = anchor.radius;\n            ax = bb.xMid - cursorX;\n            ay = bb.yMid - cursorY;\n            if(ax * ax + ay * ay < r * r) {\n                this.dx = bb.xMid - (this.ox + this.odx);\n                this.dy = bb.yMid - (this.oy + this.ody);\n                this.odx += this.dx;\n                this.ody += this.dy;\n                this.anchor = anchor;\n                return;\n            }\n        }\n        // Assess position\n        this.anchor = undefined;\n        switch(this._alignment) {\n            case Alignment.Grid:\n                this.dx = round(this._cdx, this._gridX) - this.odx;\n                this.dy = round(this._cdy, this._gridY) - this.ody; \n                break;\n            case Alignment.Free:\n            default:\n                this.dx = this._cdx - this.odx;\n                this.dy = this._cdy - this.ody;\n                break;\n        }\n        this.odx += this.dx;\n        this.ody += this.dy;\n    }\n\n}\n","export class DiagramDisplaySettings {\n\n    /**\n     * If the grid should be displayed or not.\n     */\n    public showGrid: boolean;\n\n    /**\n     * If shadow's should be displayed or not.\n     */\n    public showShadows: boolean;\n    \n    /**\n     * If debug information should be displayed or not.\n     */\n    public showDebug: boolean;\n\n    /**\n     * The diagram's supersampling anti-aliasing (SSAA) level.\n     */\n    public ssaaScale: number;\n\n    /**\n     * Sets the scale level shadows disable at.\n     */\n    public shadowsDisableAt: number;\n\n    /**\n     * Creates a new {@link DiagramDisplaySettings}.\n     */\n    constructor() {\n        this.showGrid = true;\n        this.showShadows = true;\n        this.showDebug = false;\n        this.ssaaScale = 1;\n        this.shadowsDisableAt = 0;\n    }\n\n}\n","import * as d3 from \"d3\";\nimport { RasterCache } from \"./RasterCache\";\nimport { ViewportRegion } from \"./ViewportRegion\";\nimport { DiagramObjectMover } from \"./DiagramObjectMover\";\nimport { DiagramDisplaySettings } from \"./DiagramDisplaySettings\";\nimport { CameraLocation } from \"./Camera\";\nimport {\n    EventEmitter,\n    MouseClick\n} from \"../Utilities\";\nimport {\n    DiagramLineModel,\n    DiagramAnchorModel,\n    DiagramObjectModel,\n    PageModel,\n    DiagramAnchorableModel\n} from \"../DiagramModelTypes\";\nimport {\n    DiagramAnchorableView,\n    DiagramLineEndingView,\n    DiagramLineView,\n    DiagramObjectView,\n    PageView\n} from \"../DiagramViewTypes\";\nimport {\n    Alignment,\n    Cursor,\n    PositionSetByUser\n} from \"../Attributes\";\n\nexport class BlockDiagram extends EventEmitter {\n\n    /**\n     * The viewport's padding.\n     */\n    private static readonly VIEWPORT_PADDING = 0;\n\n    /**\n     * When a zoom action occurs, this constant defines that amount of time to\n     * wait (in milliseconds) before the raster cache is updated.\n     */\n    private static readonly RASTER_CACHE_UPDATE_DELAY = 100;\n\n\n    /**\n     * The diagram's canvas.\n     */\n    private _canvas: CanvasSelection | null;\n\n    /**\n     * The diagram's context.\n     */\n    private _context: CanvasRenderingContext2D | null;\n    \n    /**\n     * The diagram's display settings.\n     */\n    private _display: DiagramDisplaySettings;\n\n    /**\n     * The diagram container's height.\n     */\n    private _elHeight: number;\n\n    /**\n     * The diagram container's width.\n     */\n    private _elWidth: number;\n\n    /**\n     * The object currently being hovered over.\n     */\n    private _hovObj: DiagramObjectModel | undefined;\n\n    /**\n     * The diagram's object mover.\n     */\n    private _mover: DiagramObjectMover;\n\n    /**\n     * If the current layout is locked or not.\n     */\n    private _layoutLocked: boolean;\n\n    /**\n     * The diagram's current page.\n     */\n    private _page: PageView;\n\n    /**\n     * The id of the last animation frame request.\n     */\n    private _rafId: number;\n\n    /**\n     * The diagram's raster cache.\n     */\n    private _rasterCache: RasterCache;\n\n    /**\n     * An observer that monitors the size of the diagram's container.\n     */\n    private _resizeObserver: ResizeObserver | null;\n    \n    /**\n     * The context's current transform.\n     */\n    private _transform: d3.ZoomTransform;\n\n    /**\n     * The context's viewport.\n     */\n    private _viewport: ViewportRegion;\n    \n    /**\n     * The id of the late zoom timeout request.\n     */\n    private _ztoId: number;\n\n    /**\n     * The diagram's zoom behavior.\n     */\n    private _zoom: CanvasZoomBehavior;\n\n\n    /**\n     * Creates a new {@link BlockDiagram}.\n     */\n    constructor() {\n        super();\n        let page = PageModel.createDummy();\n        let cache = new RasterCache();\n        this._canvas = null;\n        this._context = null;\n        this._display = new DiagramDisplaySettings();\n        this._elWidth = 0;\n        this._elHeight = 0;\n        this._mover = new DiagramObjectMover(...page.grid);\n        this._layoutLocked = false;\n        this._page = page.createView(cache); \n        this._rafId = 0;\n        this._rasterCache = cache;\n        this._resizeObserver = null;\n        this._transform = d3.zoomIdentity;\n        this._viewport = new ViewportRegion();\n        this._ztoId = 0;\n        this._zoom =  d3.zoom<HTMLCanvasElement, unknown>()\n            .scaleExtent([1 / 8, 6])\n            .on(\"zoom\", this.onCanvasZoom.bind(this))\n            .on(\"end\", () => this.onCanvasZoomEnd());\n        // `null` ensures cursor is updated immediately\n        this._hovObj = null as any;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Inject and Destroy  ////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Injects the diagram into a container and updates the view.\n     * @param container\n     *  The container to inject the diagram into.\n     */\n    public inject(container: HTMLElement): void {\n\n        // Set sizing\n        this._elWidth = container.clientWidth;\n        this._elHeight = container.clientHeight;\n\n        // Setup canvas & context\n        this._canvas = d3.select(container)\n            .append(\"canvas\")\n                .attr(\"style\", \"display:block;\")\n                .attr(\"width\", this._elWidth)\n                .attr(\"height\", this._elHeight)\n            .on(\"mousemove\", (event) => {\n                this.onHoverSubject(...d3.pointer(event));\n            })\n            .on(\"contextmenu\", (e: any) => e.preventDefault());\n        this._context = this._canvas.node()!.getContext(\"2d\", { alpha: false });\n\n        // Configure resize observer\n        this._resizeObserver = new ResizeObserver(\n            entries => this.onCanvasResize(entries[0].target)\n        );\n        this._resizeObserver.observe(container);\n\n        // Configure canvas interactions\n        this._canvas\n            .call(d3.drag<HTMLCanvasElement, unknown>()\n                .filter(() => true)\n                .subject(this.onSelectSubject.bind(this))\n                .on(\"start\", this.onObjectDragStarted.bind(this))\n                .on(\"drag\", this.onObjectDragged.bind(this))\n                .on(\"end\", this.onObjectDragEnded.bind(this))\n            ).call(this._zoom);\n        \n    }\n\n    /**\n     * Removes the diagram from the container and removes all event listeners.\n     */\n    public destroy() {\n        this._canvas?.remove();\n        this._canvas = null;\n        this._context = null;\n        this.removeAllListeners();\n        this._resizeObserver?.disconnect();\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Event Subscription  ////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Adds an event listener to the diagram.\n     * @param event\n     *  The event to subscribe to.\n     * @param callback\n     *  The function to call once the event has fired.\n     */\n    public override on<K extends keyof DiagramEvents>(event: K, callback: DiagramEvents[K]): void {\n        super.on(event, callback);\n    }\n\n    /**\n     * Adds an event listener to the diagram that will be fired once and then\n     * removed.\n     * @param event\n     *  The event to subscribe to.\n     * @param callback\n     *  The function to call once the event has fired. \n     */\n    public override once<K extends keyof DiagramEvents>(event: K, callback: DiagramEvents[K]): void {\n        super.once(event, callback);\n    }\n\n    /**\n     * Removes all event listeners associated with a given event. If no event\n     * name is specified, all event listeners are removed.\n     * @param event\n     *  The name of the event.\n     */\n    public override removeAllListeners<K extends keyof DiagramEvents>(event?: K): void {\n        super.removeAllListeners(event);\n    }\n\n    /**\n     * Dispatches the event listeners associated with a given event.\n     * @param event\n     *  The name of the event to raise.\n     * @param args\n     *  The arguments to pass to the event listeners.\n     */\n    protected override emit<K extends keyof DiagramEvents>(event: K, ...args: Parameters<DiagramEvents[K]>): void {\n        super.emit(event, ...args);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Rendering  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Enables/Disables the grid.\n     * @param display\n     *  [true]\n     *   Enables the grid.\n     *  [false]\n     *   Disables the grid.\n     */\n    public setGridDisplay(display: boolean) {\n        this._display.showGrid = display;\n    }\n\n    /**\n     * Enables/Disables shadows.\n     * @param display\n     *  [true]\n     *   Enables shadows.\n     *  [false]\n     *   Disables shadows.\n     */\n    public setShadowsDisplay(display: boolean) {\n        this._display.showShadows = display;        \n    }\n\n    /**\n     * Enables/Disables the debug display. If enabled, the diagram will display\n     * additional information that can be used to debug issues with the block\n     * diagram API.\n     * @param display\n     *  [true]\n     *   Enables debug mode.\n     *  [false]\n     *   Disables debug mode.\n     */\n    public setDebugDisplay(display: boolean) {\n        this._display.showDebug = display;\n    }\n\n    /**\n     * Sets the diagram's supersampling anti-aliasing (SSAA) level.\n     * @param k\n     *  The supersampling scale.\n     */\n    public setSsaaScale(k: number) {\n        this._display.ssaaScale = k;\n        this._rasterCache.setScale(k);\n    }\n\n    /**\n     * Sets the scale level shadows disable at.\n     * @param k\n     *  The scale level shadows disable at.\n     */\n    public setShadowsDisableAt(k: number) {\n        this._display.shadowsDisableAt = k;\n    }\n\n    /**\n     * Renders the block diagram.\n     */\n    public render() {\n        if (this._rafId != 0)\n            return;\n        this._rafId = requestAnimationFrame(() => {\n            this._rafId = 0;\n            this.executeRenderPipeline();\n        })\n    }\n\n    /**\n     * Executes the diagram rendering pipeline.\n     */\n    private executeRenderPipeline() {\n        // Return if there's no context to render to\n        if(this._context === null)\n            return;\n        let d = this._display;\n        // Render page surface\n        this._page.renderPageSurfaceTo(this._context, this._viewport, d.showGrid);\n        // Render page contents\n        if(d.showShadows && d.shadowsDisableAt <= this._transform.k) {\n            // With drop shadow\n            this._page.renderTo(this._context, this._viewport);\n        } else {\n            // Without drop shadow\n            this._page.renderTo(this._context, this._viewport, 0, 0);\n        }\n        // Render debug display\n        if(d.showDebug) {\n            this._page.renderDebugTo(this._context, this._viewport);\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  4. Canvas Interactions  ///////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Canvas hover behavior.\n     * @param x\n     *  The pointer's position on the x-axis.\n     * @param y\n     *  The pointer's position on the y-axis.\n     * @param cursor\n     *  The cursor to use.\n     *  (Default: The subject's cursor)\n     */\n    private onHoverSubject(x: number, y: number, cursor?: number) {\n        x = this._transform.invertX(x);\n        y = this._transform.invertY(y);\n        let hovObj = this._page.el.getObjectAt(x, y);\n        if(this._hovObj !== hovObj) {\n            // Update hover object\n            this._hovObj = hovObj;\n            // Pick cursor\n            cursor = cursor ?? hovObj?.getCursor() ?? Cursor.Default;\n            // Emit\n            this.emit(\"object-hover\", hovObj, cursor);\n        }\n    }\n\n    /**\n     * Canvas click behavior.\n     * @param event\n     *  The click event.\n     * @returns\n     *  The drag action to perform or `undefined` if no object was clicked.\n     */\n     private onSelectSubject(event: any): DragAction | undefined {\n        let evt = event.sourceEvent;\n        let x = this._transform.invertX(event.x);\n        let y = this._transform.invertY(event.y);\n        let obj = this._page.el.getObjectAt(x, y);\n        let rc = evt.button === MouseClick.Right;\n        let mv: DiagramObjectView[];\n\n        // If no object:\n        if(!obj) {\n            this.emit(\"canvas-click\", evt, event.x, event.y);\n            return undefined; \n        }\n        \n        // If object is an anchor:\n        if(obj instanceof DiagramAnchorModel) {\n            // Select canvas\n            this.emit(\"canvas-click\", evt, event.x, event.y);\n            if(rc) {\n                return undefined;\n            }\n            // Create line\n            let line = obj.makeLine();\n            // Configure line\n            let x = obj.boundingBox.xMid;\n            let y = obj.boundingBox.yMid;\n            line.srcEnding.moveTo(x, y);\n            line.trgEnding.moveTo(x, y);\n            // Create line view\n            let view = line\n                .createView(this._rasterCache)\n                .updateView() as DiagramLineView;\n            // Initiate line move\n            return {\n                type: DragActionType.CreateLine,\n                line: view,\n                parent: this._page, \n                anchor: obj,\n                obj: view.trgEnding\n            };\n        }\n\n        // If object is child of line:\n        if(obj.parent instanceof DiagramLineModel) { \n            // Select line\n            this.emit(\"object-click\", evt, obj.parent, event.x, event.y);\n            if(rc) {\n                return undefined;\n            }\n            // Move the child\n            mv = [this._page.lookup(obj.id)!];\n        } \n        \n        // If any other object type:\n        else {\n            // Select object\n            this.emit(\"object-click\", evt, obj, event.x, event.y);\n            if(rc) {\n                return undefined;\n            }\n            // Move the current selection\n            mv = this._page.selects;   \n        }\n\n        // Initiate object move\n        if(mv[0] instanceof DiagramAnchorableView && mv.length === 1) {\n            return { type: DragActionType.MoveAnchorable, obj: mv[0] }\n        } else {\n            return { type: DragActionType.Move, objs: mv }\n        }\n\n    }\n\n    /**\n     * Object drag start behavior.\n     * @param event\n     *  The drag event.\n     */\n    private onObjectDragStarted(event: any) {\n        /**\n         * Developers Note:\n         * Wait until all mouse related callbacks have fired before locking the\n         * layout. This gives applications using this library a chance to\n         * update the layout in other handlers before the drag event officially\n         * starts. Ideally, an application shouldn't update the layout during a\n         * drag operation. I'll refactor this in the future to improve the\n         * coordination constructs between library and application.\n         */\n        setTimeout(() => {\n            this._layoutLocked = true;\n            let s = event.subject as DragAction;\n            let cx = this._transform.invertX(event.x);\n            let cy = this._transform.invertY(event.y);\n            let ox = 0;\n            let oy = 0;\n            let al = Alignment.Free;\n            let an = undefined;\n            switch(s.type) {\n                case DragActionType.Move:\n                    for(let obj of s.objs) {\n                        ox += obj.x;\n                        oy += obj.y;\n                        al = Math.max(al, obj.el.getAlignment());\n                    }\n                    ox /= s.objs.length;\n                    oy /= s.objs.length;\n                    break;\n                case DragActionType.CreateLine:\n                    s.parent.children.push(s.line);\n                case DragActionType.MoveAnchorable:\n                    ox = s.obj.x;\n                    oy = s.obj.y;\n                    al = s.obj.el.getAlignment();\n                    an = this._page.el.anchorCache;\n                    break;\n            }\n            this._mover.reset(al, cx, cy, ox, oy, an);\n        }, 0);\n    }\n\n    /**\n     * Object dragged behavior.\n     * @param event\n     *  The drag event.\n     */\n    private onObjectDragged(event: any) {\n        let s = event.subject as DragAction;\n        // Calculate delta\n        this._mover.updateDelta(\n            event.dx / this._transform.k,\n            event.dy / this._transform.k\n        );\n        // Move elements\n        let attrs;\n        switch(s.type) {\n            case DragActionType.Move:\n                for(let obj of s.objs) {\n                    attrs = obj.fakePositionSetByUser(PositionSetByUser.True);\n                    obj.moveBy(this._mover.dx, this._mover.dy, attrs);\n                }\n                break;\n            case DragActionType.CreateLine:\n                s.obj.el.moveBy(this._mover.dx, this._mover.dy);\n            case DragActionType.MoveAnchorable:\n                this.onHoverSubject(event.x, event.y, s.obj.el.getCursor());\n                attrs = s.obj.fakePositionSetByUser(PositionSetByUser.True);\n                s.obj.moveBy(this._mover.dx, this._mover.dy, attrs);\n                break;\n        }\n        // Render\n        this.render();\n    }\n\n    /**\n     * Object drag end behavior.\n     * @param event\n     *  The drag event.\n     */\n    private onObjectDragEnded(event: any) {\n        this._layoutLocked = false;\n        let s = event.subject as DragAction;\n        let tdx = this._mover.odx;\n        let tdy = this._mover.ody;\n        switch(s.type) {\n            case DragActionType.Move:\n                if(!(tdx || tdy)) {\n                    // If no movement, bail\n                    return;\n                }\n                let ids = s.objs.map((o: any) => o.el);\n                this.emit(\"object-move\", ids, tdx, tdy);\n                break;\n            case DragActionType.MoveAnchorable:\n                if(!(tdx || tdy)) {\n                    // If no movement, bail\n                    return;\n                }\n                if(this._mover.anchor) {\n                    let anchor = this._mover.anchor;\n                    let object = s.obj.el;\n                    this.emit(\"object-attach\", object, anchor);\n                } else if(s.obj.el.isAttached()) {\n                    let object = s.obj.el;\n                    this.emit(\"object-detach\", object, tdx, tdy);\n                } else {\n                    let ids = [s.obj.el];\n                    this.emit(\"object-move\", ids, tdx, tdy);\n                }\n                break;\n            case DragActionType.CreateLine:\n                if((tdx || tdy) && s.anchor !== this._mover.anchor) {\n                    let obj = s.line.el;\n                    let par = s.parent.el;\n                    let src = s.anchor;\n                    let trg = this._mover.anchor;\n                    this.emit(\"line-create\", obj, par, src, trg);\n                } else {\n                    // If no movement, reset view and bail\n                    this.updateView();\n                    this.render();\n                }\n                break;\n        }\n    }\n\n    /**\n     * Canvas zoom behavior.\n     * @param event\n     *  The zoom event.\n     */\n    private onCanvasZoom(event: any) {\n        // Update cache\n        if (this._transform.k !== event.transform.k) {\n            clearTimeout(this._ztoId);\n            this._ztoId = setTimeout(() => {\n                let k = this._transform.k * this._display.ssaaScale;\n                if(this._rasterCache.getScale() !== k) {\n                    this._rasterCache.setScale(k);\n                    this.render();\n                }\n            }, BlockDiagram.RASTER_CACHE_UPDATE_DELAY)\n        }\n        // Update transform\n        this._transform = event.transform;\n        // Update viewport\n        this.updateViewportBounds();\n        this._context?.setTransform(\n            this._transform.k, 0, 0,\n            this._transform.k, this._transform.x, this._transform.y\n        );\n        // If no source event, then we are already\n        // running inside a requestAnimationFrame()\n        if(event.sourceEvent === null) {\n            // If no render scheduled, run render pipeline\n            if(this._rafId === 0) {\n                this.executeRenderPipeline();\n            }\n        } else {\n            this.render();\n        }\n    }\n\n    /**\n     * Canvas zoom end behavior.\n     */\n    private onCanvasZoomEnd() {\n        this.emit(\"view-transform\", \n            this._transform.x,\n            this._transform.y,\n            this._transform.k,\n            this._elWidth,\n            this._elHeight\n        );\n    }\n\n    /**\n     * Canvas resize behavior.\n     * @param el\n     *  The block diagram's container.\n     */\n    private onCanvasResize(el: Element) {\n        let newWidth = el.clientWidth;\n        let newHeight = el.clientHeight;\n        // Center viewport\n        (this._transform as any).x += (newWidth - this._elWidth) / 2;\n        (this._transform as any).y += (newHeight - this._elHeight) / 2;\n        // Update dimensions\n        this._elWidth = newWidth;\n        this._elHeight = newHeight;\n        this._canvas\n            ?.attr(\"width\", this._elWidth)\n            ?.attr(\"height\", this._elHeight);\n        // Update viewport\n        this.updateViewportBounds();\n        // Adjust viewport\n        this._context?.setTransform(\n            this._transform.k, 0, 0,\n            this._transform.k, this._transform.x, this._transform.y\n        );\n        // Immediately redraw diagram to context, if possible\n        if(this._context)\n            this.executeRenderPipeline();\n    }\n\n    /**\n     * Recalculates the viewport's bounds based on the container's current\n     * dimensions.\n     */\n    private updateViewportBounds() {\n        let t = this._transform;\n        let padding = BlockDiagram.VIEWPORT_PADDING;\n        this._viewport.xMin = Math.round(t.invertX(-padding));\n        this._viewport.xMax = Math.round(t.invertX(this._elWidth + padding));\n        this._viewport.yMin = Math.round(t.invertY(-padding));\n        this._viewport.yMax = Math.round(t.invertY(this._elHeight + padding));\n        this._viewport.scale = t.k;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  5. Data  //////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    \n    /**\n     * Configures the diagram's current page.\n     * @param page\n     *  The diagram page.\n     */\n    public setPage(page: PageModel) {\n        // Update page\n        this._page = page.createView(this._rasterCache);\n        // Update mover\n        this._mover = new DiagramObjectMover(...page.grid);\n    }\n\n    /**\n     * Syncs the view with the underlying model.\n     */\n    public updateView() {\n        if(!this._layoutLocked) {\n            this._page.updateView();\n        }\n    }\n\n    /**\n     * Sets the camera's location.\n     * @param location\n     *  The camera's new location.\n     * @param animate\n     *  The length of time (in milliseconds) the camera move animation takes.\n     *  (Default: 1000)\n     */\n    public setCameraLocation(location: CameraLocation, animate: number = 1000) {\n        if(!this._canvas)\n            return;\n        let k = location.k;\n        let x = Math.round((this._elWidth / 2) - (location.x * k));\n        let y = Math.round((this._elHeight / 2) - (location.y * k))\n        // Move camera\n        this._canvas.transition()\n            .duration(animate)\n            .call(this._zoom.transform, \n                d3.zoomIdentity.translate(x, y).scale(k)\n            )\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n// D3 types\ntype CanvasZoomBehavior = \n    d3.ZoomBehavior<HTMLCanvasElement, unknown>;\ntype CanvasSelection = \n    d3.Selection<HTMLCanvasElement, unknown, null, undefined>;\n\n// Event types\ninterface DiagramEvents {\n    \"object-hover\"  : (\n        obj: DiagramObjectModel | undefined, cursor: number\n    ) => void;\n    \"object-click\"  : (\n        event: PointerEvent, obj: DiagramObjectModel, x: number, y: number\n    ) => void;\n    \"canvas-click\"  : (\n        event: PointerEvent, x: number, y: number\n    ) => void;\n    \"object-move\"   : (\n        objs: DiagramObjectModel[], dx: number, dy: number\n    ) => void;\n    \"object-attach\" : (\n        obj: DiagramAnchorableModel, anchor: DiagramAnchorModel\n    ) => void;\n    \"object-detach\" : (\n        obj: DiagramAnchorableModel, dx: number, dy: number\n    ) => void;\n    \"line-create\"   : (\n        obj: DiagramLineModel, parent: DiagramObjectModel, \n        src: DiagramAnchorModel, trg?: DiagramAnchorModel\n    ) => void;\n    \"view-transform\": (\n        x: number, y: number, k: number, w: number, h: number\n    ) => void\n}\n\n// Drag Actions\ntype DragAction\n    = MoveDragAction\n    | MoveAnchorableDragAction\n    | CreateLineDragAction;\n\n\nenum DragActionType { \n    Move,\n    MoveAnchorable,\n    CreateLine\n}\n\ntype MoveDragAction = {\n\n    /**\n     * The move type.\n     */\n    type: DragActionType.Move,\n    \n    /**\n     * The objects to move.\n     */\n    objs: DiagramObjectView[]\n\n}\n\ntype MoveAnchorableDragAction = {\n\n    /**\n     * The move type.\n     */\n    type: DragActionType.MoveAnchorable,\n\n    /**\n     * The anchorable to move.\n     */\n    obj: DiagramAnchorableView\n}\n\ntype CreateLineDragAction = {\n\n    /**\n     * The move type.\n     */\n    type: DragActionType.CreateLine,\n    \n    /**\n     * The line.\n     */\n    line: DiagramLineView,\n\n    /**\n     * The line's parent.\n     */\n    parent: DiagramObjectView,\n\n    /**\n     * The anchor that created the line.\n     */\n    anchor: DiagramAnchorModel, \n\n    /**\n     * The line ending to move.\n     */\n    obj: DiagramLineEndingView\n\n}\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./NumberField.vue?vue&type=style&index=0&id=1e452132&scoped=true&lang=css\"","/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n * Updated by Michael Carenzo 2022.\n */\n\nconst hex = \"0123456789abcdef\";\n\n/**\n * Converts a 32-bit number to hex (least significant byte first).\n * @param num\n *  The number.\n * @returns\n *  The hex string.\n */\nfunction toHex(num: number): string {\n    let str = \"\";\n    for (let i = 0; i <= 3; i++) {\n        str += hex.charAt((num >> (i * 8 + 4)) & 0x0F) + hex.charAt((num >> (i * 8)) & 0x0F);\n    }\n    return str;\n}\n\n/**\n * Converts a string into an array of blocks. Each block contains 16, 32-bit,\n * words. Size padding and padding bits are appended per the MD5 standard.  \n * @param str\n *  The string.\n * @returns\n *  The set of blocks flattened into a single array.\n */\nfunction stringToBlocks(str: string): number[] {\n    let i;\n    let size = ((str.length + 8) >> 6) + 1;\n    let blocks = new Array(size * 16).fill(0);\n    for (i = 0; i < str.length; i++) {\n        blocks[i >> 2] |= str.charCodeAt(i) << ((i % 4) * 8);\n    }\n    blocks[i >> 2] |= 0x80 << ((i % 4) * 8);\n    blocks[size * 16 - 2] = str.length * 8;\n    return blocks;\n}\n\n/**\n * Adds two numbers (wrapping at 2^32). This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n * @param x\n *  The first operand.\n * @param y\n *  The second operand.\n * @returns\n *  The sum.\n */\nfunction add(x: number, y: number): number {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/**\n * Rotates a 32-bit number `cnt` bits to the left.\n * @param num\n *  The number.\n * @param cnt\n *  The number of bits to rotate by.\n * @returns\n *  The new number.\n */\nfunction rol(num: number, cnt: number): number {\n    return (num << cnt) | (num >>> (32 - cnt));\n}\n\n/**\n * CMN transform function.\n * @param q\n *  The result of the F, G, H, or I auxiliary function.\n * @param a\n *  First 32-bit word.\n * @param b\n *  Second 32-bit word.\n * @param x \n *  32-bit word from a message block.\n * @param s\n *  The number of bits to rotate by.\n * @param t\n *  Sin table parameter (abs(sin(i))).\n * @returns\n *  Transform result.\n */\nfunction cmn(q: number, a: number, b: number, x: number, s: number, t: number): number {\n    return add(rol(add(add(a, q), add(x, t)), s), b);\n}\n\n/**\n * FF transform operation.\n * @param a\n *  First 32-bit word.\n * @param b\n *  Second 32-bit word.\n * @param c\n *  Third 32-bit word.\n * @param d\n *  Fourth 32-bit word.\n * @param x\n *  32-bit word from a message block.\n * @param s\n *  The number of bits to rotate by.\n * @param t\n *  Sin table parameter (abs(sin(i))).\n * @returns\n *  Transform result.\n */\nfunction ff(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\n    return cmn((b & c) | ((~b) & d), a, b, x, s, t);\n}\n\n/**\n * GG transform operation.\n * @param a\n *  First 32-bit word.\n * @param b\n *  Second 32-bit word.\n * @param c\n *  Third 32-bit word.\n * @param d\n *  Fourth 32-bit word.\n * @param x\n *  32-bit word from a message block.\n * @param s\n *  The number of bits to rotate by.\n * @param t\n *  Sin table parameter (abs(sin(i))).\n * @returns\n *  Transform result.\n */\nfunction gg(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\n    return cmn((b & d) | (c & (~d)), a, b, x, s, t);\n}\n\n/**\n * HH transform operation.\n * @param a\n *  First 32-bit word.\n * @param b\n *  Second 32-bit word.\n * @param c\n *  Third 32-bit word.\n * @param d\n *  Fourth 32-bit word.\n * @param x\n *  32-bit word from a message block.\n * @param s\n *  The number of bits to rotate by.\n * @param t\n *  Sin table parameter (abs(sin(i))).\n * @returns\n *  Transform result.\n */\nfunction hh(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\n    return cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\n/**\n * II transform operation.\n * @param a\n *  First 32-bit word.\n * @param b\n *  Second 32-bit word.\n * @param c\n *  Third 32-bit word.\n * @param d\n *  Fourth 32-bit word.\n * @param x\n *  32-bit word from a message block.\n * @param s\n *  The number of bits to rotate by.\n * @param t\n *  Sin table parameter (abs(sin(i))).\n * @returns\n *  Transform result.\n */\nfunction ii(a: number, b: number, c: number, d: number, x: number, s: number, t: number): number {\n    return cmn(c ^ (b | (~d)), a, b, x, s, t);\n}\n\n/**\n * Calculates the MD5 hash of a string.\n * @param str\n *  The string.\n * @returns\n *  The MD5 digest.\n */\nexport function MD5(str: string): string {\n    let x = stringToBlocks(str),\n        a = 1732584193,\n        b = -271733879,\n        c = -1732584194,\n        d = 271733878;\n\n    for (let i = 0; i < x.length; i += 16) {\n\n        let old_a = a,\n            old_b = b,\n            old_c = c,\n            old_d = d;\n\n        // Round 1\n\n        a = ff(a, b, c, d, x[i + 0], 7, -680876936);\n        d = ff(d, a, b, c, x[i + 1], 12, -389564586);\n        c = ff(c, d, a, b, x[i + 2], 17, 606105819);\n        b = ff(b, c, d, a, x[i + 3], 22, -1044525330);\n        a = ff(a, b, c, d, x[i + 4], 7, -176418897);\n        d = ff(d, a, b, c, x[i + 5], 12, 1200080426);\n        c = ff(c, d, a, b, x[i + 6], 17, -1473231341);\n        b = ff(b, c, d, a, x[i + 7], 22, -45705983);\n        a = ff(a, b, c, d, x[i + 8], 7, 1770035416);\n        d = ff(d, a, b, c, x[i + 9], 12, -1958414417);\n        c = ff(c, d, a, b, x[i + 10], 17, -42063);\n        b = ff(b, c, d, a, x[i + 11], 22, -1990404162);\n        a = ff(a, b, c, d, x[i + 12], 7, 1804603682);\n        d = ff(d, a, b, c, x[i + 13], 12, -40341101);\n        c = ff(c, d, a, b, x[i + 14], 17, -1502002290);\n        b = ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n        // Round 2\n\n        a = gg(a, b, c, d, x[i + 1], 5, -165796510);\n        d = gg(d, a, b, c, x[i + 6], 9, -1069501632);\n        c = gg(c, d, a, b, x[i + 11], 14, 643717713);\n        b = gg(b, c, d, a, x[i + 0], 20, -373897302);\n        a = gg(a, b, c, d, x[i + 5], 5, -701558691);\n        d = gg(d, a, b, c, x[i + 10], 9, 38016083);\n        c = gg(c, d, a, b, x[i + 15], 14, -660478335);\n        b = gg(b, c, d, a, x[i + 4], 20, -405537848);\n        a = gg(a, b, c, d, x[i + 9], 5, 568446438);\n        d = gg(d, a, b, c, x[i + 14], 9, -1019803690);\n        c = gg(c, d, a, b, x[i + 3], 14, -187363961);\n        b = gg(b, c, d, a, x[i + 8], 20, 1163531501);\n        a = gg(a, b, c, d, x[i + 13], 5, -1444681467);\n        d = gg(d, a, b, c, x[i + 2], 9, -51403784);\n        c = gg(c, d, a, b, x[i + 7], 14, 1735328473);\n        b = gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n        // Round 3\n\n        a = hh(a, b, c, d, x[i + 5], 4, -378558);\n        d = hh(d, a, b, c, x[i + 8], 11, -2022574463);\n        c = hh(c, d, a, b, x[i + 11], 16, 1839030562);\n        b = hh(b, c, d, a, x[i + 14], 23, -35309556);\n        a = hh(a, b, c, d, x[i + 1], 4, -1530992060);\n        d = hh(d, a, b, c, x[i + 4], 11, 1272893353);\n        c = hh(c, d, a, b, x[i + 7], 16, -155497632);\n        b = hh(b, c, d, a, x[i + 10], 23, -1094730640);\n        a = hh(a, b, c, d, x[i + 13], 4, 681279174);\n        d = hh(d, a, b, c, x[i + 0], 11, -358537222);\n        c = hh(c, d, a, b, x[i + 3], 16, -722521979);\n        b = hh(b, c, d, a, x[i + 6], 23, 76029189);\n        a = hh(a, b, c, d, x[i + 9], 4, -640364487);\n        d = hh(d, a, b, c, x[i + 12], 11, -421815835);\n        c = hh(c, d, a, b, x[i + 15], 16, 530742520);\n        b = hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n        // Round 4\n\n        a = ii(a, b, c, d, x[i + 0], 6, -198630844);\n        d = ii(d, a, b, c, x[i + 7], 10, 1126891415);\n        c = ii(c, d, a, b, x[i + 14], 15, -1416354905);\n        b = ii(b, c, d, a, x[i + 5], 21, -57434055);\n        a = ii(a, b, c, d, x[i + 12], 6, 1700485571);\n        d = ii(d, a, b, c, x[i + 3], 10, -1894986606);\n        c = ii(c, d, a, b, x[i + 10], 15, -1051523);\n        b = ii(b, c, d, a, x[i + 1], 21, -2054922799);\n        a = ii(a, b, c, d, x[i + 8], 6, 1873313359);\n        d = ii(d, a, b, c, x[i + 15], 10, -30611744);\n        c = ii(c, d, a, b, x[i + 6], 15, -1560198380);\n        b = ii(b, c, d, a, x[i + 13], 21, 1309151649);\n        a = ii(a, b, c, d, x[i + 4], 6, -145523070);\n        d = ii(d, a, b, c, x[i + 11], 10, -1120210379);\n        c = ii(c, d, a, b, x[i + 2], 15, 718787259);\n        b = ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n        a = add(a, old_a);\n        b = add(b, old_b);\n        c = add(c, old_c);\n        d = add(d, old_d);\n    }\n\n    return toHex(a) + toHex(b) + toHex(c) + toHex(d);\n}\n","/**\n * Draws an arrow head to the context.\n * @param ctx\n *  The context to draw to.\n * @param sx\n *  The arrow's source x-axis coordinate.\n * @param sy\n *  The arrow's source y-axis coordinate.\n * @param tx\n *  The arrow's target x-axis coordinate.\n * @param ty\n *  The arrow's target y-axis coordinate.\n * @param h\n *  The arrow's height.\n *  (Default: 12)\n * @param n\n *  The arrow's offset on its axis. A positive value nudges the arrowhead `n`\n *  pixels forward on its axis. A negative value nudges the arrowhead `n`\n *  pixels backwards on its axis. \n *  (Default: 0)\n */\nexport function drawArrowHead(\n    ctx: CanvasRenderingContext2D, \n    sx: number, sy: number, \n    tx: number, ty: number, \n    h: number = 12, n: number = 0\n) {\n    let dx = tx - sx;\n    let dy = ty - sy;\n    let angle = Math.atan2(dy, dx);\n    let a = tx - h * Math.cos(angle - Math.PI / 6);\n    let b = ty - h * Math.sin(angle - Math.PI / 6);\n    let c = tx - h * Math.cos(angle + Math.PI / 6);\n    let d = ty - h * Math.sin(angle + Math.PI / 6);\n    ctx.beginPath();\n    ctx.moveTo(a, b);\n    ctx.lineTo(c, d);\n    ctx.lineTo(tx, ty);\n    ctx.closePath();\n}\n\n/**\n * Draws a rectangular path to the context.\n * @param ctx\n *  The context to draw to.\n * @param x\n *  The top-left x coordinate.\n * @param y\n *  The top-left y coordinate.\n * @param w\n *  The width of the rectangle.\n * @param h\n *  The height of the rectangle.\n * @param r\n *  The rectangle's border radius.\n * @param s\n *  The rectangle's stroke width.\n *  (Default: 1)\n */\nexport function drawRect(\n    ctx: CanvasRenderingContext2D,\n    x: number, y: number,\n    w: number, h: number,\n    r: number, s?: number\n): void;\n\n /**\n  * Draws a rectangular path to a context.\n  * @param ctx\n  *  The context to draw to.\n  * @param x\n  *  The top-left x coordinate.\n  * @param y\n  *  The top-left y coordinate.\n  * @param w\n  *  The width of the rectangle.\n  * @param h\n  *  The height of the rectangle.\n  * @param r\n  *  An object which defines the border radius of each corner. If a corner\n  *  is not specified, it is assumed to be 0.\n  * @param s\n  *  The rectangle's stroke width.\n  *  (Default: 1)\n  */\nexport function drawRect(\n    ctx: CanvasRenderingContext2D,\n    x: number, y: number,\n    w: number, h: number,\n    r: BorderRadius, \n    s?: number\n): void;\n\nexport function drawRect(\n    ctx: CanvasRenderingContext2D, \n    x: number, y: number,\n    w: number, h: number,\n    r: BorderRadius | number,\n    s: number = 1\n) {\n    // Account for stroke width\n    x += s / 2;\n    y += s / 2;\n    w -= s;\n    h -= s;\n    // Parse radius\n    if (typeof r === \"number\") {\n        r = { tl: r, tr: r, br: r, bl: r }\n    } else {\n        r = { tl: 0, tr: 0, br: 0, bl: 0, ...r };\n    }\n    // Draw rectangular path\n    ctx.beginPath();\n    ctx.moveTo(x + r.tl!, y);\n    ctx.lineTo(x + w - r.tr!, y);\n    ctx.quadraticCurveTo(x + w, y, x + w, y + r.tr!);\n    ctx.lineTo(x + w, y + h - r.br!);\n    ctx.quadraticCurveTo(x + w, y + h, x + w - r.br!, y + h);\n    ctx.lineTo(x + r.bl!, y + h);\n    ctx.quadraticCurveTo(x, y + h, x, y + h - r.bl!);\n    ctx.lineTo(x, y + r.tl!);\n    ctx.quadraticCurveTo(x, y, x + r.tl!, y);\n    ctx.closePath();\n}\n\nexport type BorderRadius = {\n    \n    /**\n     * Top left radius.\n     */\n    tl?: number,\n\n    /**\n     * Top right radius.\n     */\n    tr?: number,\n\n    /**\n     * Bottom right radius.\n     */\n    br?: number,\n\n    /**\n     * Bottom left radius.\n     */\n    bl?: number\n\n}\n","export class EventEmitter {\n    \n    /**\n     * The event emitter's index of event listeners.\n     */\n    private _listeners: Map<string, Function[]>;\n\n    \n    /**\n     * Creates a new {@link EventEmitter}. \n     */\n    constructor(){\n        this._listeners = new Map();\n    }\n\n\n    /**\n     * Adds an event listener to an event.\n     * @param event\n     *  The name of the event.\n     * @param callback\n     *  The function to call when the event is raised.\n     */\n    public on(event: string, callback: Function) {\n        if(!this._listeners.has(event))\n            this._listeners.set(event, []);\n        this._listeners.get(event)!.unshift(callback);\n    }\n\n    /**\n     * Adds a one-time event listener to an event.\n     * @param event\n     *  The name of the event.\n     * @param callback\n     *  The function to call when the event is raised.\n     */\n    public once(event: string, callback: Function) {\n        let once = (...args: any[]) => {\n            let actions = this._listeners.get(event)!;\n            actions.splice(actions.indexOf(once), 1);\n            callback(...args);\n        }\n        if(!this._listeners.has(event))\n            this._listeners.set(event, []);\n        this._listeners.get(event)!.unshift(once);\n    }\n\n    /**\n     * Dispatches the event listeners associated with a given event.\n     * @param event\n     *  The name of the event to raise.\n     * @param args\n     *  The arguments to pass to the event listeners.\n     */\n    protected emit(event: string, ...args: any[]) {\n        if(this._listeners.has(event)) {\n            let listeners = this._listeners.get(event)!;\n            for(let i = listeners.length - 1; 0 <= i; i--) {\n                listeners[i](...args);\n            }\n        }\n    }\n\n    /**\n     * Removes all event listeners associated with a given event. If no event\n     * name is specified, all event listeners are removed.\n     * @param event\n     *  The name of the event.\n     */\n    public removeAllListeners(event?: string) {\n        if(event !== undefined) {\n            this._listeners.delete(event);\n        } else {\n            this._listeners.clear();\n        }\n    }\n\n}\n","///////////////////////////////////////////////////////////////////////////////\n//  1. Font Store  ////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nclass FontStore {\n\n    /**\n     * The font store's internal font list.\n     */\n    private _fontList: Map<string, Font>;\n\n    /**\n     * Creates a new {@link FontStore}.\n     */\n    constructor() {\n        this._fontList = new Map([\n            [\"default\", new Font({ size: \"10pt\", family: \"sans-serif\" })],\n        ]);\n    }\n\n    /**\n     * Returns the specified font. If the font has not been loaded, the default\n     * font is returned instead.\n     * @param descriptor\n     *  The font's descriptor.\n     * @return\n     *  The font.\n     */\n    public getFont(descriptor: FontDescriptor): Font {\n        let id = FontStore.getCssFontString(descriptor);\n        if(this._fontList.has(id)) {\n            return this._fontList.get(id)!\n        } else {\n            return this._fontList.get(\"default\")!;\n        }\n    }\n\n    /**\n     * Loads the specified fonts.\n     * @param descriptors\n     *  The fonts to load.\n     * @param timeout\n     *  The amount of time to wait (in milliseconds) per font before giving up.\n     *  (Default: 4000)\n     * @returns\n     *  A Promise that resolves once the fonts have loaded.\n     * @throws { Error }\n     *  If any of the fonts failed to load.\n     */\n    public async loadFonts(descriptors: FontDescriptor[], timeout: number = 4000) {\n        // Load fonts\n        let req = [];\n        for(let font of descriptors) {\n            req.push(this.loadFont(font, timeout));\n        }\n        let results = await Promise.allSettled(req);\n        // Parse results\n        let failedFonts = [];\n        for(let i = 0; i < results.length; i++) {\n            if(results[i].status === \"fulfilled\")\n                continue;\n            failedFonts.push(FontStore.getCssFontString(descriptors[i]));\n        }\n        if(failedFonts.length) {\n            let fonts = `'${ failedFonts.join(\"', '\") }'`;\n            throw new Error(`The following fonts failed to load: ${ fonts }`);\n        }\n    }\n\n    /**\n     * Loads the specified font.\n     * @param descriptor\n     *  The font to load.\n     * @param timeout\n     *  The amount of time to wait (in milliseconds) before giving up.\n     *  (Default: 4000)\n     * @returns\n     *  A Promise that resolves once the font has loaded.\n     * @throws { Error }\n     *  If the timeout was reached or if the document's font store encountered\n     *  an error while attempting to load the font.\n     */\n    public async loadFont(descriptor: FontDescriptor, timeout: number = 4000): Promise<boolean> {\n        let fontString = FontStore.getCssFontString(descriptor);\n        let fonts = (document as any).fonts; \n        if(fonts.check(fontString)) {\n            if(!this._fontList.has(fontString)){\n                this._fontList.set(fontString, new Font(descriptor));\n            } \n            return true;\n        } else {\n            let set = this._fontList.set.bind(this._fontList);\n            let start = Date.now();\n            // Create loader\n            let load = new Promise<boolean>(async (res, rej) => {\n                (async function fetch() {\n                    if(timeout <= Date.now() - start) {\n                        rej(\n                            new Error(`Failed to load font '${ \n                                fontString \n                            }' request timed out after ${ \n                                timeout \n                            }ms.`)\n                        );\n                    } else {\n                        fonts.load(fontString).then((fontList: Array<any>) => {\n                            if(0 < fontList.length) {\n                                let result = fonts.check(fontString);\n                                if(result) {\n                                    set(fontString, new Font(descriptor));\n                                }\n                                res(result);\n                            } else {\n                                setTimeout(fetch, 50);\n                            }\n                        }, rej);\n                    }\n                })()\n            })\n            // Create timer\n            let timeoutId;\n            let timer = new Promise<boolean>((_, rej) => {\n                timeoutId = setTimeout(\n                    () => rej(\n                        new Error(`Failed to load font '${ \n                            fontString \n                        }' request timed out after ${ \n                            timeout \n                        }ms.`)\n                    ),\n                    timeout\n                );\n            })\n            // Wait for either the loader or the timer to resolve\n            let result = await Promise.race([load, timer]);\n            // Clear timeout and complete request\n            clearTimeout(timeoutId);\n            return result;\n        }\n    }\n\n    /**\n     * Converts a FontDescriptor into a CSS font string.\n     * @param font\n     *  The font to evaluate.\n     * @returns\n     *  The FontDescriptor as a CSS font string.\n     */\n    public static getCssFontString(font: FontDescriptor): string {\n        return `${ font.weight ?? 400 } ${ font.size } ${ font.family }`\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Font  //////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport class Font { \n\n    /**\n     * The default character to width index.\n     */\n    private static DEFAULT_INDEX: string = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\\t \";\n\n    /**\n     * The font's whitespace regex.\n     */\n    private static WHITESPACE: RegExp = /(\\s+)/;\n\n    /**\n     * The font's internal context.\n     */\n    private _ctx: CanvasRenderingContext2D;\n\n    /**\n     * The font's internal character to width index.\n     */\n    private _widthIndex: Map<string, number>\n\n    /**\n     * The font's css string.\n     */\n    public css: string;\n\n    /**\n     * The font's descriptor.\n     */\n    public descriptor: FontDescriptor\n    \n\n    /**\n     * Creates a new {@link FontFamily}.\n     * @param descriptor\n     *  The font's descriptor.\n     */\n    constructor(descriptor: FontDescriptor) {\n        this.css = FontStore.getCssFontString(descriptor);\n        this.descriptor = descriptor;\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\")!;\n        this._ctx.font = this.css;\n        this._widthIndex = new Map();\n        for(let char of Font.DEFAULT_INDEX) {\n            this._widthIndex.set(char, this.measureWidth(char));\n        }\n    }\n\n\n    /**\n     * Returns the width of the given text.\n     * @param text\n     *  The text to measure.\n     * @returns\n     *  The width of the text (in pixels).\n     * @throws { Error }\n     *  If `font` has not been loaded.\n     */\n    public measureWidth(text: string): number {\n        if((document as any).fonts.check(this.css)) {\n            return this._ctx.measureText(text).width;\n        } else {\n            throw new Error(`The font '${ \n                this.css \n            }' has not been loaded. The width of '${ \n                text \n            }' cannot be measured.`)\n        }\n    }\n\n    /**\n     * Returns the width and height of the given text.\n     * @param text\n     *  The text to measure.\n     * @returns\n     *  The width and height of the text (in pixels).\n     * @throws { Error }\n     *  If `font` has not been loaded.\n     */\n    public measure(text: string): { width: number, ascent: number, descent: number } {\n        if((document as any).fonts.check(this.css)) {\n            let m = this._ctx.measureText(text);\n            return {\n                width: m.width,\n                ascent: m.actualBoundingBoxAscent,\n                descent: m.actualBoundingBoxDescent\n            };\n        } else {\n            throw new Error(`The font '${ \n                this.css \n            }' has not been loaded. The width of '${ \n                text \n            }' cannot be measured.`)\n        }\n    }\n\n    /**\n     * Returns the width of a character.\n     * @param char\n     *  The character.\n     * @returns\n     *  The character's width.\n     */\n    public getCharWidth(char: string): number {\n        if(!this._widthIndex.has(char)) {\n            this._widthIndex.set(char, this.measureWidth(char));\n        }\n        return this._widthIndex.get(char)!;\n    }\n\n    /**\n     * Segments a string into lines no longer than the specified width.\n     * @param text\n     *  The text to wrap.\n     * @param width\n     *  The maximum width allowed.\n     * @returns\n     *  The segmented lines.\n     */\n    public wordWrap(text: string, width: number): string[] {\n        let lines = text.trim().split(/\\n/);\n        let segments: (string[] | string)[] = [];\n        for(let i = 0; i < lines.length; i++) {\n            if(lines[i]) {\n                segments[i] = this.lineWrap(lines[i], width);\n            } else {\n                segments[i] = lines[i]\n            }\n        }\n        return segments.flat();\n    }\n\n    /**\n     * Segments a line of text into lines no longer than the specified width.\n     * @param text\n     *  A single line of text. (i.e. Text has no newline characters.)\n     * @param width\n     *  The maximum width allowed.\n     * @returns\n     *  The segmented lines.\n     */\n    private lineWrap(text: string, width: number): string[] {\n        let line = \"\";\n        let lineWidth = 0;\n        let segments: string[] = [];\n        let tokens = text.split(Font.WHITESPACE).filter(Boolean);\n        let whitespaceParity = Font.WHITESPACE.test(tokens[0]) ? 0 : 1;\n        for(let i = 0; i < tokens.length; i++) {\n            let tokenWidth = this.measureWidth(tokens[i]);\n            \n            // Add Whitespace\n            if(i % 2 === whitespaceParity) {\n                line += tokens[i];\n                lineWidth += tokenWidth;\n                continue;\n            }\n            \n            // Add Word\n            if(width < lineWidth + tokenWidth) {\n                if(i !== 0) {\n                    // Finish line\n                    segments.push(line.trimEnd());\n                    // Reset line\n                    line = \"\";\n                    lineWidth = 0;\n                }\n                if(width < tokenWidth) {\n                    // Wrap token\n                    let word = tokens[i];\n                    for(let j = 0; j < word.length; j++) {\n                        tokenWidth = this.getCharWidth(word[j]);\n                        if(j !== 0 && width < lineWidth + tokenWidth) {\n                            // Finish line\n                            segments.push(line);\n                            // Reset line\n                            line = \"\";\n                            lineWidth = 0;\n                        }\n                        line += word[j];\n                        lineWidth += tokenWidth;\n                    }\n                    // Move onto next token\n                    continue;\n                }\n            }\n            line += tokens[i];\n            lineWidth += tokenWidth;\n\n        }\n        segments.push(line.trimEnd());\n        return segments;\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. FontDescriptor  ////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type FontDescriptor = {\n    size: string,\n    family: string,\n    weight?: number,\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  4. GlobalFontStore  ///////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport const GlobalFontStore = new FontStore();\n","///////////////////////////////////////////////////////////////////////////////\n//  1. General  ///////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Bounds a number within a specified range.\n * \n * **Example**\n * \n * - `clamp(41, 0, 100)` returns `41`. \n * - `clamp(-120, 0, 100)` returns `0`.\n * - `clamp(231, 0, 100)` returns `100`.\n * \n * @param n\n *  The number to bound.\n * @param min\n *  The range's lower bound.\n * @param max\n *  The range's upper bound.\n * @returns\n *  The number's bounded value.\n */\nexport function clamp(n: number, min: number, max: number): number {\n    return Math.min(Math.max(n, min), max);\n}\n\n/**\n * Rounds a number to the nearest multiple.\n * @param n\n *  The number to round.\n * @param multiple\n *  The multiple.\n * @returns\n *  The number rounded to the nearest multiple.\n */\nexport function round(n: number, multiple: number): number {\n    return Math.sign(n) * Math.round(Math.abs(n) / multiple) * multiple;\n}\n\n/**\n * Checks if two floats are equal up to the specified decimal place.\n * @param a\n *  The first number to compare.\n * @param b\n *  The second number to compare.\n * @param decimals\n *  The number of decimal places.\n *  (Default: 5)\n */\nexport function floatEq(a: number, b: number, decimals: number = 5) {\n    let m = 10 ** decimals;\n    return Math.floor(a * m) === Math.floor(b * m); \n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Bit Functions  /////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Generates an enum's bit mask.\n * @param obj\n *  The enum to evaluate.\n * @returns\n *  The enum's bit mask.\n */\nexport function generateBitMask(obj: { [key: string]: number }): number {\n    let mask = 0;\n    for (let bit in obj)\n        mask |= obj[bit];   \n    return mask;\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. Geometry  //////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Calculates a line's hitbox.\n * @param x0\n *  The x coordinate of the 1st point.\n * @param y0\n *  The y coordinate of the 1st point.\n * @param x1\n *  The x coordinate of the 2nd point.\n * @param y1\n *  The y coordinate of the 2nd point.\n * @param width\n *  The width of the hitbox.\n * @returns\n *  The set of vertices that define the hitbox region.\n */\nexport function getLineHitbox(x0: number, y0: number, x1: number, y1: number, width: number): number[] {\n    let w = width / 2;\n    let vx = x1 - x0;\n    let vy = y1 - y0;\n    let angle = Math.acos(vx / Math.sqrt(vx**2 + vy**2));\n    let dx = w * Math.sin(angle);\n    let dy = w * Math.cos(angle);\n    return [\n        x0 - dx, y0 - dy,\n        x0 + dx, y0 + dy,\n        x1 + dx, y1 + dy,\n        x1 - dx, y1 - dy,\n    ]\n}\n\n/**\n * Tests if the given point lies inside the given region.\n * @param x\n *  The x coordinate.\n * @param y\n *  The y coordinate.\n * @param vertices\n *  The vertices that define the region. \n */\nexport function isInsideRegion(x: number, y: number, vertices: number[]) {\n    // If polygon\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    for(let i = 0; i < vertices.length; i += 2) {\n        minX = Math.min(minX, vertices[i]);\n        minY = Math.min(minY, vertices[i + 1]);\n        maxX = Math.max(maxX, vertices[i]);\n        maxY = Math.max(maxY, vertices[i + 1]);\n    }\n    if(minX < x && x < maxX && minY < y && y < maxY) {\n        // Compute intersection vector\n        let v1x0 = x;\n        let v1y0 = y;\n        let v1x1 = maxX + 1;\n        let v1y1 = y\n        // Computer vector intersections\n        let totalIntersections = 0;\n        let len = vertices.length;\n        for(let i = 0; i < len; i += 2) {\n            let intersection = doVectorsIntersect(\n                v1x0, v1y0, v1x1, v1y1, \n                vertices[i], vertices[i + 1], \n                vertices[(i + 2) % len], vertices[(i + 3) % len]\n            );\n            if(intersection) totalIntersections++;\n        }\n        return totalIntersections % 2 !== 0;\n    }\n    return false;\n}\n\n/**\n * Tests if the given point lies inside the given shape.\n * @param x\n *  The point's x coordinate.\n * @param y\n *  The point's y coordinate.\n * @param sx\n *  The shape's x coordinate.\n * @param sy\n *  The shape's y coordinate.\n * @param vertices\n *  The shape's vertices relative to (0,0). \n * @returns\n *  True if the point lines inside the shape, false otherwise.\n */\nexport function isInsideShape(\n    x: number, y: number, sx: number, sy: number, vertices: number[]\n): boolean {\n\n    // If circle\n    if(vertices.length === 1) {\n        let dx = x - sx;\n        let dy = y - sy;\n        let r = vertices[0];\n        return dx * dx + dy * dy < r * r\n    }\n    \n    // If polygon\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    let txVertices = [];\n    for(let i = 0, vx, vy; i < vertices.length; i += 2) {\n        vx = sx + vertices[i];\n        vy = sy + vertices[i + 1];\n        minX = Math.min(minX, vx);\n        minY = Math.min(minY, vy);\n        maxX = Math.max(maxX, vx);\n        maxY = Math.max(maxY, vy);\n        txVertices.push(vx, vy);\n    }\n    if(minX < x && x < maxX && minY < y && y < maxY) {\n        // Compute intersection vector\n        let v1x0 = x;\n        let v1y0 = y;\n        let v1x1 = maxX + 1;\n        let v1y1 = y\n        // Computer vector intersections\n        let totalIntersections = 0;\n        let len = txVertices.length;\n        for(let i = 0; i < len; i += 2) {\n            let intersection = doVectorsIntersect(\n                v1x0, v1y0, v1x1, v1y1, \n                txVertices[i], txVertices[i + 1], \n                txVertices[(i + 2) % len], txVertices[(i + 3) % len]\n            );\n            if(intersection) totalIntersections++;\n        }\n        return totalIntersections % 2 !== 0;\n    }\n    return false;\n\n}\n\n/**\n * Tests if two vectors intersect. Collinear vectors do not intersect.\n * @param v1x0\n *  Vector 1's x0 coordinate.\n * @param v1y0 \n *  Vector 1's y0 coordinate.\n * @param v1x1\n *  Vector 1's x1 coordinate.\n * @param v1y1\n *  Vector 1's y1 coordinate.\n * @param v2x0\n *  Vector 2's x0 coordinate.\n * @param v2y0\n *  Vector 2's y0 coordinate.\n * @param v2x1 \n *  Vector 2's x1 coordinate.\n * @param v2y1 \n *  Vector 2's y1 coordinate.\n * @returns\n *  True if the vectors intersect, false otherwise.\n */\nexport function doVectorsIntersect(\n    v1x0: number, v1y0: number, \n    v1x1: number, v1y1: number, \n    v2x0: number, v2y0: number,\n    v2x1: number, v2y1: number\n): boolean {\n    let a1, b1, c1, a2, b2, c2, d1, d2;\n    // Test vector 2 on 1\n    a1 = v1y0 - v1y1;\n    b1 = v1x1 - v1x0;\n    c1 = (v1x0 * v1y1) - (v1x1 * v1y0)\n    d1 = (a1 * v2x0) + (b1 * v2y0) + c1;\n    d2 = (a1 * v2x1) + (b1 * v2y1) + c1;\n    if(d1 < 0 && d2 < 0 || d1 > 0 && d2 > 0)\n        return false;\n    // Test vector 1 on 2\n    a2 = v2y0 - v2y1;\n    b2 = v2x1 - v2x0;\n    c2 = (v2x0 * v2y1) - (v2x1 * v2y0)\n    d1 = (a2 * v1x0) + (b2 * v1y0) + c2;\n    d2 = (a2 * v1x1) + (b2 * v1y1) + c2;\n    if(d1 < 0 && d2 < 0 || d1 > 0 && d2 > 0)\n        return false;\n    // If Collinear\n    if ((a1 * b2) - (a2 * b1) == 0) \n        return false;\n    return true;\n}\n","/**\n * Computes the hash of a string using Java's `hashCode()` function.\n * @param string\n *  The string to hash.\n * @returns\n *  The string's hash.\n */\nexport function computeHash(string: string): number {\n    let hash = 0;\n    if (string.length === 0)\n        return hash;\n    for (let i = 0; i < string.length; i++) {\n        hash = ((hash << 5) - hash) + string.charCodeAt(i);\n        hash |= 0; // Convert to 32-bit integer\n    }\n    return hash;\n}\n\n/**\n * Capitalizes the first letter in a string.\n * @param text\n *  The string to capitalize.\n * @returns\n *  The capitalized string.\n */\nexport function capitalize(text: string): string {\n    return text ? `${ text[0].toLocaleUpperCase() }${ text.substring(1) }` : \"\"\n}\n\n/**\n * Casts a string to title case.\n * \n * ex. \"foo_bar\" -> \"Foo Bar\" \n * \n * @param text\n *  The string to cast to title case.\n * @returns\n *  The string cast to title case.\n */\nexport function titleCase(text: string): string {\n    return text.split(/\\s+|_/).map(s => capitalize(s)).join(\" \");\n}\n","export enum MouseClick { \n    Left   = 0, \n    Middle = 1,\n    Right  = 2\n}\n","import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2d69016e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"fill\"]\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"path\", {\n  d: \"m2.1167 0-1.0583 1.3229-1.0583-1.3229z\",\n  \"stroke-width\": \"0\"\n}, null, -1))\nconst _hoisted_3 = [\n  _hoisted_2\n]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    width: \"8\",\n    height: \"5\",\n    fill: _ctx.color,\n    class: _normalizeClass({ collapsed: _ctx.collapsed }),\n    version: \"1.1\",\n    viewBox: \"0 0 2.1167 1.3229\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, _hoisted_3, 10, _hoisted_1))\n}","\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"CollapseArrow\",\n  props: {\n    collapsed: {\n      type: Boolean,\n      default: false \n    },\n    color: {\n      type: String,\n      default: \"#8c8c8c\"\n    }\n  }\n});\n","import { render } from \"./CollapseArrow.vue?vue&type=template&id=2d69016e&scoped=true&ts=true\"\nimport script from \"./CollapseArrow.vue?vue&type=script&lang=ts\"\nexport * from \"./CollapseArrow.vue?vue&type=script&lang=ts\"\n\nimport \"./CollapseArrow.vue?vue&type=style&index=0&id=2d69016e&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2d69016e\"]])\n\nexport default __exports__","import { generateBitMask } from \"./Utilities\";\nimport { SemanticRole as SemanticRoleEnum } from \"./DiagramFactory\";\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  1. Attributes  ////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport const Alignment = {\n    Free       : 0b000000000000000,\n    Grid       : 0b000000000000001\n}\nexport const AlignmentMask = generateBitMask(Alignment);\n\nexport const Cursor = {\n    Default    : 0b000000000000000,\n    Pointer    : 0b000000000000010,\n    Crosshair  : 0b000000000000100,\n    Move       : 0b000000000000110,\n    NotAllowed : 0b000000000001000,\n    Grab       : 0b000000000001010,\n    Grabbing   : 0b000000000001100,\n    N_Resize   : 0b000000000001110,\n    E_Resize   : 0b000000000010000,\n    S_Resize   : 0b000000000010010,\n    W_Resize   : 0b000000000010100,\n    EW_Resize  : 0b000000000010110,\n    NS_Resize  : 0b000000000011000,\n    Col_Resize : 0b000000000011010,\n    Row_Resize : 0b000000000011100\n}\nexport const CursorMask = generateBitMask(Cursor);\n\nexport const Hover = {\n    Off        : 0b000000000000000,\n    Direct     : 0b000000000100000,\n    Indirect   : 0b000000001000000\n}\nexport const HoverMask = generateBitMask(Hover);\n\nexport const InheritAlignment = {\n    False      : 0b000000000000000,\n    True       : 0b000000010000000\n}\nexport const InheritAlignmentMask = generateBitMask(InheritAlignment);\n\nexport const PositionSetByUser = {\n    False      : 0b000000000000000,\n    True       : 0b000000100000000\n}\nexport const PositionSetByUserMask = generateBitMask(PositionSetByUser);\n\nexport const Priority = {\n    Normal     : 0b000001000000000,\n    High       : 0b000010000000000\n}\nexport const PriorityMask = generateBitMask(Priority);\n\nexport const Select = {\n    False      : 0b000000000000000,\n    True       : 0b000100000000000,\n}\nexport const SelectMask = generateBitMask(Select);\n\nconst SemanticRole = {\n    None       : SemanticRoleEnum.None,\n    Node       : SemanticRoleEnum.Node,\n    Edge       : SemanticRoleEnum.Edge,\n    LinkSource : SemanticRoleEnum.LinkSource,\n    LinkTarget : SemanticRoleEnum.LinkTarget\n}\nexport const SemanticRoleMask = generateBitMask(SemanticRole);\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Attribute Maps  ////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport const CursorCssName = {\n    [Cursor.Default]    : \"default\",\n    [Cursor.Pointer]    : \"pointer\",\n    [Cursor.Crosshair]  : \"crosshair\",\n    [Cursor.Move]       : \"move\",\n    [Cursor.NotAllowed] : \"not-allowed\",\n    [Cursor.Grab]       : \"grab\",\n    [Cursor.Grabbing]   : \"grabbing\",\n    [Cursor.N_Resize]   : \"n-resize\",\n    [Cursor.E_Resize]   : \"e-resize\",\n    [Cursor.S_Resize]   : \"s-resize\",\n    [Cursor.W_Resize]   : \"w-resize\",\n    [Cursor.EW_Resize]  : \"ew-resize\",\n    [Cursor.NS_Resize]  : \"ns-resize\",\n    [Cursor.Col_Resize] : \"col-resize\",\n    [Cursor.Row_Resize] : \"row-resize\"\n}\n","import { SemanticRole } from \"../DiagramFactory\";\nimport { GraphExport, GraphObjectExport } from \"./GraphExportTypes\";\nimport { DiagramAnchorableModel, DiagramAnchorModel, DiagramObjectModel } from \"../DiagramModelTypes\";\n\nexport class SemanticAnalyzer {\n\n    /**\n     * Derives a graph from a diagram object.\n     * @param object\n     *  The diagram object.\n     * @returns\n     *  The graph's edges and nodes.\n     */\n    public static toGraph(object: DiagramObjectModel): GraphExport {\n        let items: Map<string, GraphObjectExport>;\n        let edges: Map<string, GraphObjectExport> = new Map();\n        let nodes: Map<string, GraphObjectExport> = new Map();\n        for(let obj of object.getSubtree()) {\n            // Select item map\n            switch(obj.getSemanticRole()) {\n                case SemanticRole.Node:\n                    items = nodes;\n                    break;\n                case SemanticRole.Edge:\n                    items = edges;\n                    break;\n                default:\n                    continue;\n            }\n            // Resolve prev & next\n            let next = this.traverse(obj, Direction.Next) as any;\n            for(let [key, value] of next) {\n                next.set(key, value.map((o: DiagramObjectModel) => o.id));\n            }\n            let prev = this.traverse(obj, Direction.Prev) as any;\n            for(let [key, value] of prev) {\n                prev.set(key, value.map((o: DiagramObjectModel) => o.id));\n            }\n            // Export object\n            items.set(obj.id, new GraphObjectExport(obj.template, obj.props, next, prev));\n        }\n        return { edges, nodes }\n    }\n\n    /**\n     * Traverses a diagram object and derives the next set of diagram objects\n     * as if it were a graph. The object must be a\n     * {@link SemanticRole.Node Node} or an {@link SemanticRole.Edge Edge}.\n     * @param object\n     *  The diagram object.\n     * @returns\n     *  The next set of diagram objects.\n     */\n    public static getNextGraphLinks(object: DiagramObjectModel): DiagramObjectModel[] {\n        return [...this.traverse(object, Direction.Next).values()].flat();\n    }\n\n    /**\n     * Traverses a diagram object and derives the previous set of diagram\n     * objects as if it were a graph. The object must be a\n     * {@link SemanticRole.Node Node} or an {@link SemanticRole.Edge Edge}.\n     * @param object\n     *  The diagram object.\n     * @returns\n     *  The previous set of diagram objects.\n     */\n    public static getPrevGraphLinks(object: DiagramObjectModel): DiagramObjectModel[] {\n        return [...this.traverse(object, Direction.Prev).values()].flat();\n    }\n\n    /**\n     * Traverses a {@link DiagramObjectModel} and derives the next set of\n     * diagram objects as if it were a graph.\n     * @param object\n     *  The diagram object.\n     * @param direction\n     *  The traversal direction.\n     * @returns\n     *  The link map.\n     */\n    private static traverse(\n        object: DiagramObjectModel,\n        direction: Direction\n    ): Map<string, DiagramObjectModel[]> {\n        let map = new Map<string, DiagramObjectModel[]>();\n        if(\n            !object.hasRole(SemanticRole.Edge) &&\n            !object.hasRole(SemanticRole.Node)\n        ) {\n            return map;\n        }\n        let stack = [...object.children];\n        while(stack.length) {\n            let obj = stack.pop()!;\n            // Anchor object\n            if(obj instanceof DiagramAnchorModel) {\n                for(let child of obj.children) {\n                    this.registerLink(\n                        obj.template.id,\n                        this.traverseAnchorable(child, obj, direction),\n                        map\n                    )\n                }\n                continue;\n            }\n            // Anchorable object\n            if(obj instanceof DiagramAnchorableModel) {\n                this.registerLink(\n                    obj.anchor?.template.id ?? \"undefined\",\n                    this.traverseAnchorable(obj, obj.parent!, direction),\n                    map\n                )\n                continue;\n            }\n            // Node or Edge object\n            if(\n                obj.hasRole(SemanticRole.Node) ||\n                obj.hasRole(SemanticRole.Edge)\n            ) {\n                continue;\n            }\n            // General object\n            for(let child of obj.children) {\n                stack.push(child);\n            }\n        }\n        return map;\n    }\n\n    /**\n     * Registers a link with a link map.\n     * @param via \n     *  The route the link is connected through.\n     * @param obj\n     *  The linked object.\n     * @param map\n     *  The link map.\n     */\n    public static registerLink(\n        via: string,\n        obj: DiagramObjectModel | undefined,\n        map: Map<string, DiagramObjectModel[]>\n    ) {\n        if(!obj) return;\n        if(!map.has(via)) {\n            map.set(via, []);\n        }\n        map.get(via)!.push(obj);\n    }\n\n    \n    /**\n     * Traverses a {@link DiagramAnchorableModel} and derives the next diagram\n     * object as if it were a graph.\n     * @param object \n     *  The {@link DiagramAnchorableModel}.\n     * @param source\n     *  The object the {@link DiagramAnchorableModel} was accessed from.\n     * @param direction\n     *  The traversal direction.\n     * @returns\n     *  The next diagram object, if there was one.\n     */\n    public static traverseAnchorable(\n        object: DiagramAnchorableModel,\n        source: DiagramObjectModel,\n        direction: Direction\n    ): DiagramObjectModel | undefined {\n        let r1, r2;\n        switch(direction) {\n            case Direction.Next:\n                r1 = SemanticRole.LinkSource;\n                r2 = SemanticRole.LinkTarget;\n                break;\n            case Direction.Prev:\n                r1 = SemanticRole.LinkTarget;\n                r2 = SemanticRole.LinkSource;\n                break;\n        }\n        let p;\n        if(object.anchor === source && object.hasRole(r1)) {\n            p = object.parent;\n\n        }\n        if(object.parent === source && object.hasRole(r2)) {\n            p = object.anchor;\n        }\n        while(p) {\n            if(\n                p.hasRole(SemanticRole.Node) || \n                p.hasRole(SemanticRole.Edge)\n            ) {\n                break;\n            }\n            p = p.parent;\n        }\n        return p;\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nenum Direction {\n    Next = 0,\n    Prev = 1\n}\n","import { RootProperty } from \"../Property\"\nimport { ObjectTemplate } from \"../DiagramFactory\"\n\nexport type GraphExport = {\n\n    /**\n     * The graph's nodes.\n     */\n    nodes: Map<string, GraphObjectExport>\n    \n    /**\n     * The graph's edges.\n     */\n    edges: Map<string, GraphObjectExport>\n\n}\n\nexport class GraphObjectExport {\n    \n    /**\n     * The object's template.\n     */\n    public template: ObjectTemplate\n\n    /**\n     * The object's properties.\n     */\n    public props: RootProperty\n \n    /**\n     * The object's parent link map.\n     */\n    public prevLinkMap: Map<string, string[]>\n \n    /**\n     * The object's child link map.\n     */\n    public nextLinkMap: Map<string, string[]>\n\n    /**\n     * The object's parents.\n     */\n    public get prev(): string[] {\n        return [...this.prevLinkMap.values()].flat();\n    }\n\n    /**\n     * The object's children.\n     */\n    public get next(): string[] {\n        return [...this.nextLinkMap.values()].flat();\n    }\n\n\n    /**\n     * Creates a new {@link GraphObjectExport}.\n     * @param template\n     *  The object's template.\n     * @param props\n     *  The object's properties.\n     * @param nextLinkMap\n     *  The object's parent link map.\n     * @param prevLinkMap\n     *  The object's child link map.\n     */\n    constructor(\n        template: ObjectTemplate,\n        props: RootProperty,\n        nextLinkMap: Map<string, string[]>,\n        prevLinkMap: Map<string, string[]>\n    ) {\n        this.template = template;\n        this.props = props;\n        this.nextLinkMap = nextLinkMap;\n        this.prevLinkMap = prevLinkMap;\n    }\n\n}\n","import { DiagramObjectModel, PageModel } from \"./DiagramModelTypes\";\nimport { RasterCache } from \"./DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"./DiagramElement\";\nimport { Hover, Select } from \"./Attributes\";\n\nexport class PageImage {\n\n    /**\n     * The page.\n     */\n    private _page: PageModel;\n\n    /**\n     * The image's padding.\n     */\n    private _padding: number;\n\n    /**\n     * If the grid should be displayed or not.\n     */\n    private _showGrid: boolean;\n\n    /**\n     * If shadow's should be displayed or not.\n     */\n    private _showShadows: boolean;\n     \n    /**\n     * If debug information should be displayed or not.\n     */\n    private _showDebug: boolean;\n\n\n    /**\n     * Creates a new {@link PageImage}.\n     * @param page\n     *  The page to image.\n     * @param padding\n     *  The image's padding.\n     * @param showGrid\n     *  If the grid should be displayed or not.\n     *  (Default: true)\n     * @param showShadows\n     *  If shadow's should be displayed or not.\n     *  (Default: true)\n     * @param showDebug\n     *  If debug information should be displayed or not.\n     *  (Default: false)\n     */\n    constructor(\n        page: PageModel,\n        padding: number = 30,\n        showGrid: boolean = true,\n        showShadows: boolean = true,\n        showDebug: boolean = false\n    ) {\n        this._page = page;\n        this._padding = padding;\n        this._showGrid = showGrid;\n        this._showShadows = showShadows;\n        this._showDebug = showDebug;\n    }\n\n\n    /**\n     * Returns an image of the page.\n     * @returns\n     *  The generated image.\n     */\n    public capture(): HTMLCanvasElement;\n\n    /**\n     * Returns an image of the page focused on a region of objects.\n     * @param objs\n     *  The objects that define the region.\n     * @returns\n     *  The generated image.\n     */\n    public capture(objs?: DiagramObjectModel[]): HTMLCanvasElement;\n    public capture(objs?: DiagramObjectModel[]): HTMLCanvasElement {\n        \n        // Calculate region\n        let xMin, yMin, xMax, yMax;\n        if(objs?.length) {\n            xMin = Infinity;\n            yMin = Infinity;\n            xMax = -Infinity;\n            yMax = -Infinity;\n            for(let obj of objs) {\n                xMin = Math.min(xMin, obj.boundingBox.xMin);\n                yMin = Math.min(yMin, obj.boundingBox.yMin);\n                xMax = Math.max(xMax, obj.boundingBox.xMax);\n                yMax = Math.max(yMax, obj.boundingBox.yMax);\n            }\n        } else {\n            xMin = this._page.boundingBox.xMin;\n            yMin = this._page.boundingBox.yMin;\n            xMax = this._page.boundingBox.xMax;\n            yMax = this._page.boundingBox.yMax;\n        }\n        \n        // Create view\n        let cache = new RasterCache();\n        let view = this._page.createView(cache);\n        view.updateView();\n        \n        // Configure canvas\n        let can = document.createElement(\"canvas\");\n        can.width  = Math.round(xMax - xMin) + (this._padding * 2);\n        can.height = Math.round(yMax - yMin) + (this._padding * 2);\n        \n        // Configure context\n        let ctx = can.getContext(\"2d\")!;\n        ctx.setTransform(\n            1, 0, 0, 1, \n            -xMin + this._padding,\n            -yMin + this._padding\n        );\n\n        // Configure viewport\n        let viewport = new ViewportRegion();\n        viewport.xMin = xMin - this._padding;\n        viewport.yMin = yMin - this._padding;\n        viewport.xMax = xMax + this._padding;\n        viewport.yMax = yMax + this._padding;\n\n        // Cache and clear visual attributes\n        let attrCache = new Map<DiagramObjectModel, number>();\n        let attrObjs = this._page.getSubtree(\n            o => o.isHoveredOrSelected()\n        );\n        for(let obj of attrObjs) {\n            attrCache.set(obj, obj.attrs);\n            obj.setSelect(Select.False);\n            obj.setHover(Hover.Off);\n        }\n\n        // Render image\n        view.renderPageSurfaceTo(ctx, viewport, this._showGrid);\n        if(this._showShadows) {\n            view.renderTo(ctx, viewport);\n        } else {\n            view.renderTo(ctx, viewport, 0, 0);\n        }\n        if(this._showDebug) {\n            view.renderDebugTo(ctx, viewport);\n        }\n\n        // Restore visual attributes\n        for(let [obj, attrs] of attrCache) {\n            obj.attrs = attrs;\n        }\n\n        // Return image\n        return can;\n\n    }\n\n}\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TitleBar.vue?vue&type=style&index=0&id=63eba18e&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ValidatorProblems.vue?vue&type=style&index=0&id=28e3dbca&scoped=true&lang=css\"","export class DiagramFactoryError extends Error {\n\n    /**\n     * Creates a new {@link DiagramFactoryError}.\n     * @param message\n     *  The error message.\n     */\n    constructor(message: string) {\n        super(message);\n    } \n\n}","import { RootPropertyDescriptor } from \"../Property\";\nimport { Font, FontDescriptor } from \"../Utilities\";\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  1. Block Diagram Schema  //////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type BlockDiagramSchema = {\n    page_template: string,\n    templates: SerializedTemplate[]\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Template Types  ////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport enum TemplateType {\n    AnchorPoint          = 0,\n    BranchBlock          = 1,\n    DictionaryBlock      = 2,\n    LineEndingPoint      = 3,\n    LineHandlePoint      = 4,\n    LineHorizontalElbow  = 5,\n    LineVerticalElbow    = 6,\n    Page                 = 7,\n    TextBlock            = 8,\n}\n\nexport enum SemanticRole {\n    None                 = 0b000000000000000,\n    Node                 = 0b001000000000000,\n    Edge                 = 0b010000000000000,\n    LinkSource           = 0b011000000000000,\n    LinkTarget           = 0b100000000000000\n}\n\nexport type Template \n    = AnchorPointTemplate\n    | BranchBlockTemplate\n    | DictionaryBlockTemplate\n    | LineEndingPointTemplate\n    | LineHandlePointTemplate\n    | LineHorizontalElbowTemplate\n    | LineVerticalElbowTemplate\n    | PageTemplate\n    | TextBlockTemplate\n\nexport type SerializedTemplate = SubstituteType<Template, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. Generic Template  //////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type ObjectTemplate = {\n    id: string;\n    namespace?: string,\n    properties?: RootPropertyDescriptor\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  4. Diagram Anchor Template  ///////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type AnchorTemplate = ObjectTemplate & {\n    radius: number,\n    line_templates: {\n        [key: number]: string\n    }\n}\n\nexport enum AnchorAngle {\n    DEG_0  = 0,\n    DEG_90 = 1,\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  5. Diagram Line Template  /////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type LineTemplate = ObjectTemplate & {\n    hitbox_width: number,\n    line_handle_template: string,\n    line_ending_template: {\n        source: string,\n        target: string\n    }\n    style: LineStyle\n}\n\nexport type LineStyle = {\n    width: number,\n    cap_size: number,\n    color: string,\n    select_color: string\n}\n\nexport type SerializedLineStyle =\n    SubstituteType<LineStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  6. Line Ending Point Template  ////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type LineEndingPointTemplate = ObjectTemplate & {\n    type: TemplateType.LineEndingPoint,\n    role: SemanticRole.None | SemanticRole.LinkSource | SemanticRole.LinkTarget\n    style: LineEndingPointStyle\n}\n\nexport type LineEndingPointStyle = {\n    radius: number,\n    fill_color: string,\n    stroke_color: string,\n    stroke_width: number\n}\n\nexport type SerializedLineEndingPointStyle =\n    SubstituteType<LineEndingPointStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  7. Line Handle Point Template  ////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type LineHandlePointTemplate = ObjectTemplate & {\n    type: TemplateType.LineHandlePoint,\n    role: SemanticRole.None,\n    style: LineHandlePointStyle;\n}\n\nexport type LineHandlePointStyle = {\n    radius: number,\n    fill_color: string,\n    stroke_color: string,\n    stroke_width: number\n}\n\nexport type SerializedLineHandlePointStyle =\n    SubstituteType<LineHandlePointStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  8. Anchor Point Template  /////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type AnchorPointTemplate = AnchorTemplate & {\n    type: TemplateType.AnchorPoint,\n    role: SemanticRole.None,\n    style: AnchorPointStyle\n}\n\nexport type AnchorPointStyle = {\n    color: string\n}\n\nexport type SerializedAnchorPointStyle =\n    SubstituteType<AnchorPointStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  9. Dictionary Block Template  /////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type DictionaryBlockTemplate = ObjectTemplate & {\n    type: TemplateType.DictionaryBlock,\n    role: SemanticRole.None | SemanticRole.Node | SemanticRole.Edge,\n    anchor_template: string,\n    style: DictionaryBlockStyle\n}\n\nexport type DictionaryBlockStyle = {\n    max_width: number,\n    head: {\n        fill_color: string,\n        stroke_color: string,\n        one_title: {\n            title: {\n                font: Font,\n                color: string,\n            }\n        },\n        two_title: {\n            title: {\n                font: Font,\n                color: string,\n                padding: number\n            },\n            subtitle:  {\n                font: Font,\n                color: string,\n                line_height: number\n            }\n        }\n        vertical_padding: number\n    },\n    body: {\n        fill_color: string,\n        stroke_color: string,\n        field_name: {\n            font: Font,\n            color: string,\n            padding: number\n        },\n        field_value: {\n            font: Font,\n            color: string,\n            line_height: number,\n            padding: number\n        },\n        vertical_padding: number,\n    },\n    select_outline: {\n        color: string,\n        padding: number\n        border_radius: number,\n    },\n    anchor_markers: {\n        color: string,\n        size: number\n    }\n    border_radius: number,\n    horizontal_padding: number\n}\n\nexport type SerializedDictionaryBlockStyle =\n    SubstituteType<DictionaryBlockStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  10. Branch Block Template  ////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type BranchBlockTemplate = ObjectTemplate & {\n    type: TemplateType.BranchBlock,\n    role: SemanticRole.None | SemanticRole.Node | SemanticRole.Edge,\n    branches: [BranchTemplate, ...BranchTemplate[]]\n    anchor_template: string,\n    style: BranchBlockStyle\n}\n\nexport type BranchTemplate = { \n    text: string,\n    anchor_template: string\n}\n\nexport type BranchBlockStyle = DictionaryBlockStyle & {\n    branch: {\n        font: Font,\n        color: string,\n        vertical_padding: number,\n        horizontal_padding: number\n    }\n}\n\nexport type SerializedBranchBlockStyle =\n    SubstituteType<BranchBlockStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  11. Text Block Template  //////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type TextBlockTemplate = ObjectTemplate & {\n    type: TemplateType.TextBlock,\n    role: SemanticRole.None | SemanticRole.Node | SemanticRole.Edge,\n    anchor_template: string,\n    style: TextBlockStyle\n}\n\nexport type TextBlockStyle = {\n    max_width: number,\n    fill_color: string,\n    stroke_color: string,\n    text: {\n        font: Font,\n        color: string,\n        line_height: number\n    },\n    border_radius: number,\n    select_outline: {\n        color: string,\n        padding: number\n        border_radius: number,\n    },\n    anchor_markers: {\n        color: string,\n        size: number\n    },\n    vertical_padding: number,\n    horizontal_padding: number\n}\n\nexport type SerializedTextBlockStyle =\n    SubstituteType<TextBlockStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  12. Line Horizontal Elbow Template  ///////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type LineHorizontalElbowTemplate = LineTemplate & {\n    type: TemplateType.LineHorizontalElbow\n    role: SemanticRole.None | SemanticRole.Node | SemanticRole.Edge,\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  13. Line Horizontal Elbow Template  ///////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type LineVerticalElbowTemplate = LineTemplate & {\n    type: TemplateType.LineVerticalElbow\n    role: SemanticRole.None | SemanticRole.Node | SemanticRole.Edge,\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  14. Page Template  ////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type PageTemplate = ObjectTemplate & {\n    type: TemplateType.Page\n    role: SemanticRole.None | SemanticRole.Node | SemanticRole.Edge,\n    grid: [number, number]\n    style: PageStyle\n}\n\nexport type PageStyle = {\n    grid_color: string,\n    background_color: string,\n    drop_shadow: {\n        color: string,\n        offset: [number, number]\n    }\n}\n\nexport type SerializedPageStyle =\n    SubstituteType<PageStyle, Font, FontDescriptor>;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  15. Type Helpers  /////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Substitutes all types of type `A` in type `T` with type `B`.\n * ({@link https://stackoverflow.com/a/59833891 Source})\n */\ntype SubstituteType<T, A, B> =\n    T extends A\n    ? B\n    : T extends {}\n    ? { [K in keyof T]: SubstituteType<T[K], A, B> }\n    : T;\n","import { PropertyType } from \"../Property\";\nimport {\n    AnchorAngle,\n    DarkTheme,\n    SemanticRole,\n    SerializedTemplate,\n    TemplateType\n} from \".\";\n\nconst BUILTIN_PREFIX = \"@__builtin__\";\n\nexport const BuiltinTemplates: SerializedTemplate[] = [\n    {\n        id: `${ BUILTIN_PREFIX }page`,\n        type: TemplateType.Page,\n        role: SemanticRole.None,\n        grid: [10, 10],\n        properties: {\n            name: {\n                type: PropertyType.String,\n                value: \"Untitled Document\",\n                is_primary: true\n            }\n        },\n        style: DarkTheme.Page()\n    },\n    {\n        id: `${ BUILTIN_PREFIX }anchor`,\n        type: TemplateType.AnchorPoint,\n        role: SemanticRole.None,\n        radius: 10,\n        line_templates: {\n            [AnchorAngle.DEG_0] : `${ BUILTIN_PREFIX }line_horizontal_elbow`,\n            [AnchorAngle.DEG_90]: `${ BUILTIN_PREFIX }line_vertical_elbow`\n        },\n        style: DarkTheme.AnchorPoint()\n    },\n    {\n        id: `${ BUILTIN_PREFIX }line_handle`,\n        type: TemplateType.LineHandlePoint,\n        role: SemanticRole.None,\n        style: DarkTheme.LineHandle()\n    },\n    {\n        id: `${ BUILTIN_PREFIX }line_source`,\n        type: TemplateType.LineEndingPoint,\n        role: SemanticRole.LinkSource,\n        style: DarkTheme.LineEnding()\n    },\n    {\n        id: `${ BUILTIN_PREFIX }line_target`,\n        type: TemplateType.LineEndingPoint,\n        role: SemanticRole.LinkTarget,\n        style: DarkTheme.LineEnding()\n    },\n    {\n        id: `${ BUILTIN_PREFIX }line_horizontal_elbow`,\n        namespace: \"horizontal_elbow\",\n        type: TemplateType.LineHorizontalElbow,\n        role: SemanticRole.Edge,\n        hitbox_width: 20,\n        line_handle_template: `${ BUILTIN_PREFIX }line_handle`,\n        line_ending_template: {\n            source: `${ BUILTIN_PREFIX }line_source`,\n            target: `${ BUILTIN_PREFIX }line_target`\n        },\n        style: DarkTheme.Line()\n    },\n    {\n        id: `${ BUILTIN_PREFIX }line_vertical_elbow`,\n        namespace: \"vertical_elbow\",\n        type: TemplateType.LineVerticalElbow,\n        role: SemanticRole.Edge,\n        hitbox_width: 20,\n        line_handle_template: `${ BUILTIN_PREFIX }line_handle`,\n        line_ending_template: {\n            source: `${ BUILTIN_PREFIX }line_source`,\n            target: `${ BUILTIN_PREFIX }line_target`\n        },\n        style: DarkTheme.Line()\n    }\n]\n","import { Crypto } from \"../Utilities/Crypto\";\nimport { \n    Font,\n    FontDescriptor,\n    GlobalFontStore\n} from \"../Utilities\";\nimport { \n    AnchorPointModel,\n    BranchBlockModel,\n    DiagramAnchorableModel,\n    DiagramAnchorModel,\n    DiagramObjectModel,\n    DictionaryBlockModel,\n    LineEndingPointModel,\n    LineHandlePointModel,\n    LineHorizontalElbowModel,\n    LineVerticalElbowModel,\n    TextBlockModel,\n    PageModel\n} from \"../DiagramModelTypes\";\nimport { \n    BlockDiagramSchema,\n    BuiltinTemplates,\n    DiagramFactoryError,\n    DiagramObjectValues,\n    SerializedTemplate,\n    Template,\n    TemplateType,\n} from \".\";\n\nexport class DiagramFactory {\n\n    /**\n     * The diagram's schema.\n     */\n    public readonly schema: BlockDiagramSchema;\n\n    /**\n     * The diagram factory's list of templates.\n     */\n    public readonly templates: Map<string, Template>\n    \n    /**\n     * The diagram factory's namespace.\n     */\n    private readonly _namespace: Namespace;\n\n\n    /**\n     * Creates a new {@link DiagramFactory}.\n     * @param schema\n     *  The diagram's schema.\n     * @param templates\n     *  The diagram factory's list of templates.\n     * @param namespace\n     *  The diagram factory's namespace.\n     */\n    private constructor(schema: BlockDiagramSchema, templates: Map<string, Template>, namespace: Namespace) {\n        this.schema = schema;\n        this.templates = templates;\n        this._namespace = namespace;\n    }\n\n\n    /**\n     * Returns a dummy {@link DiagramFactory}.\n     * @returns \n     *  A dummy {@link DiagramFactory}.\n     */\n    public static createDummy(): DiagramFactory {\n        return new this(\n            { page_template: \"\", templates: [] },\n            new Map(),\n            new Map([[\"@\", new Map()]])\n        );\n    }\n\n    /**\n     * Creates a new {@link DiagramFactory}.\n     * @param schema\n     *  The diagram factory's internal schema.\n     * @throws { DiagramFactoryError }\n     *  If two or more templates share the same name.\n     * @throws { Error }\n     *  If any of the schema's fonts failed to load.\n     */\n    public static async create(schema: BlockDiagramSchema) {\n        \n        // Clone schema\n        let copy = structuredClone(schema);\n\n        // Validate unique ids\n        let ids = new Set();\n        for(let template of copy.templates) {\n            if(ids.has(template.id)){\n                throw new DiagramFactoryError(\n                    `Template '${ template.id }' can only be defined once.`\n                );\n            }\n            ids.add(template.id);\n        }\n\n        // Register schema templates\n        let templates = new Map<string, SerializedTemplate>();\n        for(let template of [...BuiltinTemplates, ...copy.templates]) {\n            templates.set(template.id, template);\n        }\n        \n        // Build namespace\n        let namespace: Namespace = new Map([[\"@\", new Map()]]);\n        for(let value of templates.values()) {\n            if(value.namespace === undefined)\n                continue;\n            let path = [\"@\", ...value.namespace.split(\".\")];\n            for(var i = 0, ns = namespace; i < path.length - 1; i++) {\n                if(!ns.has(path[i])) {\n                    ns.set(path[i], new Map())\n                }\n                ns = ns.get(path[i])! as Namespace;\n            }\n            if(!ns.has(path[i])) {\n                ns.set(path[i], value.id);\n            } else {\n                throw new DiagramFactoryError(\n                    `Namespace '${ path.join(\".\") }' is already defined.`\n                )\n            }\n        }\n\n        // Load font descriptors\n        let fonts: FontDescriptor[] = [];\n        for(let template of templates.values()) {\n            fonts = fonts.concat(\n                this.getFontDescriptorsFromTemplate(template)\n            );\n        }\n        await GlobalFontStore.loadFonts(fonts);\n        \n        // Swap font descriptors for fonts\n        for(let template of templates.values()) {\n            this.swapFontDescriptorsWithFonts(template);\n        }\n        \n        // Return new diagram factory \n        return new this(\n            schema,\n            templates as Map<string, Template>,\n            namespace\n        );\n    \n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Templates  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n\n    /**\n     * Returns a template from the factory.\n     * @param template\n     *  The template's id.\n     * @returns\n     *  The template. `undefined` if no template with that id exists.\n     */\n    public getTemplate(template: string): Template | undefined {\n        return this.templates.get(template);\n    }\n\n    /**\n     * Returns the factory's namespace.\n     * @return\n     *  The factory's namespace.\n     */\n    public getNamespace(): Namespace {\n        return this._namespace;\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Object Creation  ///////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Instantiates a diagram object.\n     * @param template\n     *  The name of the object's template.\n     * @returns\n     *  The newly created diagram object.\n     * @throws { DiagramFactoryError }\n     *  If no template with the specified name exists.\n     */\n    public createObject(template: string): DiagramObjectModel;\n    \n    /**\n     * Instantiates a diagram object.\n     * @param object\n     *  The object's values.\n     * @returns\n     *  The newly created diagram object.\n     * @throws { DiagramFactoryError }\n     *  If `object` specifies a template that doesn't exist.\n     */\n    public createObject(object: DiagramObjectValues): DiagramObjectModel;\n    public createObject(param1: DiagramObjectValues | string): DiagramObjectModel {\n        let name, vals: any;\n        if(param1 instanceof Object) {\n            name = param1.template,\n            vals = param1\n        } else {\n            name = param1;\n        }\n        // Resolve template\n        let temp = this.templates.get(name);\n        if(!temp) {\n            throw new DiagramFactoryError(\n                `Template '${ name }' does not exist.`\n            );\n        }\n        // Create diagram object\n        switch(temp.type) {\n            case TemplateType.Page:\n                return new PageModel(this, temp, vals);\n            case TemplateType.AnchorPoint:\n                return new AnchorPointModel(this, temp, vals);\n            case TemplateType.BranchBlock:\n                return new BranchBlockModel(this, temp, vals);\n            case TemplateType.DictionaryBlock:\n                return new DictionaryBlockModel(this, temp, vals);\n            case TemplateType.LineEndingPoint:\n                return new LineEndingPointModel(this, temp, vals);\n            case TemplateType.LineHandlePoint:\n                return new LineHandlePointModel(this, temp, vals);\n            case TemplateType.LineVerticalElbow:\n                return new LineVerticalElbowModel(this, temp, vals);\n            case TemplateType.LineHorizontalElbow:\n                return new LineHorizontalElbowModel(this, temp, vals);\n            case TemplateType.TextBlock:\n                return new TextBlockModel(this, temp, vals);\n            default:\n                throw new DiagramFactoryError(\n                    `Unknown template type: '${ (temp as any).type }'.`\n                );\n        }\n    }\n\n    /**\n     * Clones one or more diagram objects.\n     * @param objects\n     *  The object(s) to clone.\n     * @returns\n     *  The cloned objects.\n     */\n    public cloneObjects(...objects: DiagramObjectModel[]): DiagramObjectModel[] {\n        // Clone objects\n        let clones = new Map<string, DiagramObjectModel>();\n        let anchors = new Map<DiagramAnchorModel, string[]>();\n        let objs = objects.map(o => this.cloneObject(o, clones, anchors));\n        // Link clones\n        for(let [anchor, links] of anchors) {\n            for(let link of links) {\n                let obj = clones.get(link) as DiagramAnchorableModel;\n                if(obj) {\n                    anchor.addChild(obj);\n                }\n            }\n        }\n        // Return clones\n        return objs;\n    }\n\n    /**\n     * Clones a single object. Supports `cloneObjects()`.\n     * @param object\n     *  The object to clone.\n     * @param clones\n     *  The clone index. This maps objects to their clones.\n     * @param anchors\n     *  The anchor index. The maps anchor clones to their original children.\n     * @returns\n     *  The cloned object.\n     */\n    private cloneObject(\n        object: DiagramObjectModel,\n        clones: Map<string, DiagramObjectModel>,\n        anchors: Map<DiagramAnchorModel, string[]>\n    ): DiagramObjectModel {\n        // Clone anchor\n        if(object instanceof DiagramAnchorModel) {\n            let clone = this.createObject({\n                ...object.toExport(),\n                id: Crypto.randomUUID(),\n                children: []\n            }) as DiagramAnchorModel;\n            clones.set(object.id, clone);\n            anchors.set(clone, object.children.map(o => o.id));\n            return clone;\n        };\n        // Clone children\n        let children = [];\n        for(let obj of object.children) {\n            children.push(this.cloneObject(obj, clones, anchors));\n        }\n        // Clone object\n        let clone = this.createObject({\n            ...object.toExport(),\n            id: Crypto.randomUUID(),\n            children\n        });\n        clones.set(object.id, clone);\n        return clone;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Font Management  ///////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns all {@link FontDescriptor} defined by a template.\n     * @returns\n     *  All {@link FontDescriptor} defined by a template.\n     */\n    private static getFontDescriptorsFromTemplate(template: SerializedTemplate): FontDescriptor[] {\n        let descriptors: FontDescriptor[] = [];\n        switch(template.type) {\n            case TemplateType.BranchBlock:\n                let { style: s1 } = template;\n                descriptors.push(\n                    s1.branch.font\n                );\n            case TemplateType.DictionaryBlock:\n                let { style: s2 } = template;\n                descriptors = descriptors.concat([\n                    s2.head.one_title.title.font,\n                    s2.head.two_title.title.font,\n                    s2.head.two_title.subtitle.font,\n                    s2.body.field_name.font,\n                    s2.body.field_value.font\n                ]);\n                break;\n            case TemplateType.TextBlock:\n                let { style: s3 } = template;\n                descriptors.push(\n                    s3.text.font\n                )\n                break;\n            default:\n                break;\n        }\n        return descriptors;\n    }\n\n    /**\n     * Swaps all {@link FontDescriptor} defined by a template with \n     * {@link Font} objects.\n     * @param template\n     *  The template to modify.\n     */\n    private static swapFontDescriptorsWithFonts(template: SerializedTemplate) {\n        let font = GlobalFontStore.getFont.bind(GlobalFontStore);\n        switch(template.type) {\n            case TemplateType.BranchBlock:\n                let { branch: br } = template.style as any;    \n                br.font = font(br.font);\n            case TemplateType.DictionaryBlock:\n                let { head: h, body: b } = template.style as any;\n                h.one_title.title.font = font(h.one_title.title.font);\n                h.two_title.title.font = font(h.two_title.title.font);\n                h.two_title.subtitle.font = font(h.two_title.subtitle.font);\n                b.field_name.font = font(b.field_name.font);\n                b.field_value.font = font(b.field_value.font);\n                break;\n            case TemplateType.TextBlock:\n                let { text: t } = template.style as any;\n                t.font = font(t.font);\n                break;\n            default:\n                break;\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  4. Serialization  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the diagram factory's internal schema.\n     * @returns\n     *  The diagram factory's internal schema.\n     */\n    public getSchema(): BlockDiagramSchema {\n        // Compile templates\n        let templates: SerializedTemplate[] = []\n        for(let template of this.templates.values()) {\n            let cloneTemplate = JSON.stringify(template, \n                (_: string, obj: any) => obj instanceof Font ? obj.descriptor : obj\n            );\n            templates.push(JSON.parse(cloneTemplate));\n        }\n        // Return schema\n        return {\n            page_template: this.schema.page_template,\n            templates: templates\n        }\n    }\n\n}\n\nexport type Namespace = Map<string, Namespace | string>;\n","export class ViewportRegion {\n\n    /**\n     * The viewport's minimum x coordinate.\n     */\n    public xMin: number\n\n    /**\n     * The viewport's minimum y coordinate.\n     */\n    public yMin: number\n\n    /**\n     * The viewport's maximum x coordinate.\n     */\n    public xMax: number\n\n    /**\n     * The viewport's maximum y coordinate.\n     */\n    public yMax: number;\n\n    /**\n     * The viewport's scale.\n     */\n    public scale: number;\n\n    /**\n     * Creates a new {@link ViewportRegion}.\n     */\n    constructor() {\n        this.xMin = 0;\n        this.yMin = 0;\n        this.xMax = 0;\n        this.yMax = 0;\n        this.scale = 1;\n    }\n\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&id=9c6e20ea&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./PropertyEditor.vue?vue&type=style&index=0&id=5d47093b&scoped=true&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ListField.vue?vue&type=style&index=0&id=42804815&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ContextMenuListing.vue?vue&type=style&index=0&id=03d00514&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ScrollBox.vue?vue&type=style&index=0&id=cf54a08c&scoped=true&lang=css\"","///////////////////////////////////////////////////////////////////////////////\n//  1. Value Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ntype ValueDescriptorBase<K extends ValueTypes> = {\n    type: K,\n    value?: ValueTypeScriptType[K]\n    is_primary?: boolean,\n    is_visible?: boolean\n    is_editable? : boolean,\n    is_required? : boolean,\n}\n\ntype IntValueDescriptor = ValueDescriptorBase<PropertyType.Int> & {\n    min?: number,\n    max?: number\n}\n\ntype FloatValueDescriptor = ValueDescriptorBase<PropertyType.Float> & {\n    min?: number,\n    max?: number,\n}\n\ntype EnumValueDescriptor = ValueDescriptorBase<PropertyType.Enum> & {\n    options: ListPropertyDescriptor \n}\n\ntype ValueTypes\n    = PropertyType.Int\n    | PropertyType.Float\n    | PropertyType.String\n    | PropertyType.Date\n    | PropertyType.Enum\n\ntype ValueTypeScriptType = {\n    [PropertyType.Int]: number | null,\n    [PropertyType.Float]: number | null,\n    [PropertyType.String]: string | null,\n    [PropertyType.Date]: Date | null,\n    [PropertyType.Enum]: string | null\n}\n\nexport enum PropertyType {\n    Int        = 0,\n    Float      = 1,\n    String     = 2,\n    Date       = 3,\n    Enum       = 4,\n    List       = 5,\n    Dictionary = 6,\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Standard Property Descriptors  /////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Standard Property Descriptor:\n * Allows recursive definitions of both arrays and dictionaries.\n */\nexport type PropertyDescriptor\n    = StringPropertyDescriptor\n    | NumberPropertyDescriptor\n    | DatePropertyDescriptor\n    | EnumPropertyDescriptor\n    | ListPropertyDescriptor\n    | DictionaryPropertyDescriptor\n\nexport type StringPropertyDescriptor\n    = ValueDescriptorBase<PropertyType.String>;\n\nexport type NumberPropertyDescriptor\n    = IntValueDescriptor\n    | FloatValueDescriptor;\n\nexport type DatePropertyDescriptor\n    = ValueDescriptorBase<PropertyType.Date>;\n\nexport type EnumPropertyDescriptor\n    = EnumValueDescriptor;\n\nexport type ListPropertyDescriptor = {\n    type: PropertyType.List,\n    form: PropertyDescriptor\n    value?: any,\n    is_primary?: boolean,\n    is_visible?: boolean,\n    is_editable? : boolean\n}\n\nexport type DictionaryPropertyDescriptor = {\n    type: PropertyType.Dictionary,\n    form: { \n        [key: string]: PropertyDescriptor\n    },\n    is_primary?: boolean,\n    is_visible?: boolean,\n}\n\nexport type ListValue\n    = ListValueEntries\n    | ListValueDictionary\n\nexport type ListValueEntries = [\n    string, ListValueEntries | ListValueDictionary | null | string | number | Date\n][]\n\nexport type ListValueDictionary = {\n    [key: string]: ListValueEntries | ListValueDictionary | null | string | number | Date\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. Restricted Property Descriptor  ////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Restricted Property Descriptor:\n * Restricts recursive definitions of both arrays and dictionaries.\n */\n export type RestrictedPropertyDescriptor\n    = ValueDescriptor\n    | ValueListDescriptor\n    | ValueDictionaryDescriptor\n    | ValueDictionaryListDescriptor\n\ntype ValueDictionaryListDescriptor = {\n    type: PropertyType.List,\n    form: ValueDictionaryDescriptor,\n    value?: any,\n    is_primary?: boolean,\n    is_visible?: boolean,\n    is_editable? : boolean\n}\n\ntype ValueDictionaryDescriptor = {\n    type: PropertyType.Dictionary,\n    form: {\n        [key: string]\n            : ValueDescriptor\n            | ValueListDescriptor\n    },\n    is_primary?: boolean,\n    is_visible?: boolean,\n}\n\ntype ValueListDescriptor = {\n    type: PropertyType.List,\n    form: ValueDescriptor,\n    value?: any,\n    is_primary?: boolean,\n    is_visible?: boolean,\n    is_editable? : boolean\n}\n\ntype ValueDescriptor\n    = StringPropertyDescriptor\n    | NumberPropertyDescriptor\n    | DatePropertyDescriptor\n    | EnumPropertyDescriptor\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  4. Root Property Descriptor  //////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type RootPropertyDescriptor = {\n    [key: string]: RestrictedPropertyDescriptor\n}\n","import { ref, Ref } from \"vue\";\nimport { \n    CollectionProperty,\n    DateProperty,\n    DictionaryProperty,\n    EnumProperty,\n    ListProperty,\n    NumberProperty,\n    PropertyDescriptor,\n    PropertyType,\n    RootProperty,\n    StringProperty\n} from \".\";\n\nexport abstract class Property {\n\n    /**\n     * The property's type.\n     */\n    public readonly type: PropertyType;\n\n    /**\n     * The property's descriptor.\n     */\n    public readonly descriptor: PropertyDescriptor;\n\n    /**\n     * The property's reactive trigger.\n     */\n    public readonly trigger: Ref<number>\n\n    /**\n     * The property's parent.\n     */\n    private _parent: CollectionProperty | undefined;\n\n    /**\n     * The property's root.\n     */\n    public get root(): RootProperty | undefined {\n        let owner = this as Property;\n        while(owner._parent) {\n            owner = owner._parent;\n        }\n        if(owner instanceof RootProperty) {\n            return owner;\n        } else {\n            return undefined;\n        }\n    }\n    \n\n    /**\n     * Creates a new {@link Property}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: PropertyDescriptor\n    ) {\n        this.type = descriptor.type;\n        this.descriptor = descriptor;\n        this.trigger = ref(0);\n        this._parent = parent;\n    }\n\n\n    /**\n     * Creates a new {@link Property}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param values\n     *  The property's values.\n     * @returns\n     *  The {@link Property}.\n     */\n    public static create(\n        parent: CollectionProperty | undefined,\n        descriptor: PropertyDescriptor,\n        values?: any\n    ): Property {\n        switch(descriptor.type) {\n            case PropertyType.String:\n                return new StringProperty(parent, descriptor, values);\n            case PropertyType.Int:\n            case PropertyType.Float:\n                return new NumberProperty(parent, descriptor, values);\n            case PropertyType.Date:\n                return new DateProperty(parent, descriptor, values);\n            case PropertyType.Enum:\n                return new EnumProperty(parent, descriptor, values);\n            case PropertyType.List:\n                return new ListProperty(parent, descriptor, values);\n            case PropertyType.Dictionary:\n                return new DictionaryProperty(parent, descriptor, values);\n        }\n    }\n\n    /**\n     * Updates the property's trigger. \n     */\n    protected updateProperty() {\n        this.trigger.value = this.toHashValue();\n        this._parent?.updateProperty();\n    }\n\n    /**\n     * Tests if the property is defined.\n     * @returns\n     *  True if the property is defined, false otherwise.\n     */\n    public abstract isDefined(): boolean;\n\n    /**\n     * Returns the property's raw value.\n     * @returns\n     *  The property's raw value.\n     */\n    public abstract toRawValue(): RawEntries | RawTypes;\n\n    /**\n     * Returns the property's hashed value.\n     * @returns\n     *  The property's hashed value.\n     */\n    public abstract toHashValue(): number;\n    \n    /**\n     * Returns the property as a string.\n     * @returns\n     *  The property as a string.\n     */\n    public abstract toString(): string;\n\n}\n\nexport type RawTypes =\n    null | string | number\n\nexport type RawEntries\n    = [string, RawEntries | RawTypes][]\n ","import { computeHash } from \"../Utilities\";\nimport {\n    CollectionProperty,\n    DatePropertyDescriptor,\n    Property\n} from \".\";\n\nexport class DateProperty extends Property {\n    \n    /**\n     * The property's descriptor.\n     */\n    public override readonly descriptor: DatePropertyDescriptor;\n\n    /**\n     * The property's value.\n     */\n    private _value: Date | null;\n\n\n    /**\n     * Creates a new {@link DateProperty}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param value\n     *  The property's value.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: DatePropertyDescriptor,\n        value?: any\n    ) {\n        super(parent, descriptor);\n        this._value = null;\n        this.descriptor = descriptor;\n        // Resolve value\n        let v;\n        if(value === null) {\n            v = null;\n        } else {\n            v = value ?? descriptor.value ?? null;\n        }\n        // Set value\n        if(v === null) {\n            this.setValue(null);\n        } else if(v instanceof Date || typeof v === \"string\") {\n            this.setValue(new Date(v));\n        } else {\n            this.setValue(new Date());\n        }\n    }\n    \n\n    /**\n     * Tests if the property is defined.\n     * @returns\n     *  True if the property is defined, false otherwise.\n     */\n    public isDefined(): boolean {\n        return this._value !== null;\n    }\n\n    /**\n     * Sets the property's value.\n     * @param value\n     *  The new value.\n     */\n     public setValue(value: Date | null) {\n        this._value = value;\n        this.updateProperty();\n    }\n\n    /**\n     * Returns the property's raw value.\n     * @returns\n     *  The property's raw value.\n     */\n    public toRawValue(): string | null {\n        return this._value?.toISOString() ?? null;\n    }\n\n    /**\n     * Returns the property's hashed value.\n     * @returns\n     *  The property's hashed value.\n     */\n    public toHashValue(): number {\n        if(this._value === null) {\n            return computeHash(\"\")\n        } else {\n            return computeHash(this._value.toString());\n        }\n    }\n\n    /**\n     * Returns the property as a string.\n     * @returns\n     *  The property as a string.\n     */\n    public toString(): string {\n        return `${ this._value ?? 'Null' }`;\n    }\n\n}\n","import { computeHash } from \"../Utilities\";\nimport {\n    CollectionProperty,\n    Property,\n    StringPropertyDescriptor\n} from \".\";\n\nexport class StringProperty extends Property {\n    \n    /**\n     * The property's descriptor.\n     */\n    public override readonly descriptor: StringPropertyDescriptor;\n\n    /**\n     * The property's value.\n     */\n    private _value: string | null;\n\n\n    /**\n     * Creates a new {@link StringProperty}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param value\n     *  The property's value.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: StringPropertyDescriptor,\n        value?: any\n    ) {\n        super(parent, descriptor);\n        this.descriptor = descriptor;\n        this._value = null;\n        if(value === null) {\n            this.setValue(null);\n        } else {\n            let v = value ?? descriptor.value ?? null;\n            this.setValue(v === null ? null : `${ v }`);\n        }\n    }\n\n\n    /**\n     * Tests if the property is defined.\n     * @returns\n     *  True if the property is defined, false otherwise.\n     */\n    public isDefined(): boolean {\n        return this._value !== null;\n    }\n\n    /**\n     * Sets the property's value.\n     * @param value\n     *  The new value.\n     */\n    public setValue(value: string | null) {\n        this._value = value;\n        this.updateProperty();\n    }\n    \n    /**\n     * Returns the property's raw value.\n     * @returns\n     *  The property's raw value.\n     */\n    public toRawValue(): string | null {\n        return this._value;\n    }\n\n    /**\n     * Returns the property's hashed value.\n     * @returns\n     *  The property's hashed value.\n     */\n    public toHashValue(): number {\n        if(this._value === null) {\n            return computeHash(\"\");\n        } else {\n            return computeHash(`v:${ this._value }`);\n        }\n    }\n\n    /**\n     * Returns the property as a string.\n     * @returns\n     *  The property as a string.\n     */\n    public toString(): string {\n        return this._value ?? \"Null\";\n    }\n\n}\n","import { clamp, computeHash } from \"../Utilities\";\nimport {\n    CollectionProperty,\n    NumberPropertyDescriptor,\n    Property,\n    PropertyType\n} from \".\";\n\nexport class NumberProperty extends Property {\n    \n    /**\n     * The property's descriptor.\n     */\n    public override readonly descriptor: NumberPropertyDescriptor;\n    \n    /**\n     * The property's minimum allowed value.\n     */\n    public readonly min: number;\n\n    /**\n     * The property's maximum allowed value.\n     */\n    public readonly max: number;\n\n    /**\n     * The property's value.\n     */\n    private _value: number | null;\n\n\n    /**\n     * Creates a new {@link NumberProperty}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param value\n     *  The property's value.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: NumberPropertyDescriptor,\n        value?: any\n    ) {\n        super(parent, descriptor);\n        this.min = descriptor.min ?? -Infinity;\n        this.max = descriptor.max ?? Infinity;\n        this.descriptor = descriptor;\n        this._value = null;\n        // Resolve value\n        let v;\n        if(value === null) {\n            v = null;\n        } else {\n            v = value ?? descriptor.value ?? null;\n        }\n        // Set value\n        if(v === null) {\n            this.setValue(null);\n        } else if(typeof v === \"number\"){\n            this.setValue(v);\n        } else {\n            this.setValue(0);\n        }\n    }\n    \n    \n    /**\n     * Tests if the property is defined.\n     * @returns\n     *  True if the property is defined, false otherwise.\n     */\n    public isDefined(): boolean {\n        return this._value !== null;\n    }\n\n    /**\n     * Sets the property's value.\n     * @param value\n     *  The new value.\n     */\n    public setValue(value: number | null) {\n        if(value === null) {\n            this._value = null;\n        } else {\n            let v = clamp(value, this.min, this.max);\n            if(this.type === PropertyType.Int) {\n                this._value = Math.round(v);\n            } else {\n                this._value = v;\n            }\n        }\n        this.updateProperty();\n    }\n\n    /**\n     * Returns the property's raw value.\n     * @returns\n     *  The property's raw value.\n     */\n    public toRawValue(): number | null {\n        return this._value;\n    }\n\n    /**\n     * Returns the property's hashed value.\n     * @returns\n     *  The property's hashed value.\n     */\n    public toHashValue(): number {\n        return computeHash(`${ this._value ?? \"\" }`);\n    }\n\n    /**\n     * Returns the property as a string.\n     * @returns\n     *  The property as a string.\n     */\n    public toString(): string {\n        return `${ this._value ?? 'Null' }`;\n    }\n\n}\n","import { computeHash } from \"../Utilities\";\nimport { \n    DictionaryPropertyDescriptor,\n    ListPropertyDescriptor,\n    Property,\n    RawEntries\n} from \".\";\n\nexport abstract class CollectionProperty extends Property {\n\n    // TODO: Implement enumerator, get(), size(). Hide value.\n\n    /**\n     * The property's descriptor.\n     */\n    public override readonly descriptor: CollectionPropertyDescriptor;\n    \n    /**\n     * The set of properties.\n     */\n    public value: Map<string, Property>;\n\n\n    /**\n     * Creates a new {@link CollectionProperty}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: CollectionPropertyDescriptor\n    ) {\n        super(parent, descriptor);\n        this.descriptor = descriptor;\n        this.value = new Map();\n    }\n\n    \n    /**\n     * Adds a property to the collection.\n     * @param property\n     *  The property.\n     * @param id\n     *  The property's id.\n     * @param index\n     *  The property's location in the collection.\n     * @returns\n     *  The property's id.\n     */\n    public abstract addProperty(property: Property, id: string, index: number): string;\n    \n    /**\n     * Removes a property from the collection.\n     * @param id\n     *  The property's id.\n     */\n    public abstract removeProperty(id: string): void;\n\n    /**\n     * Returns a subproperty's location in the collection.\n     * @param id\n     *  The subproperty's id.\n     * @returns\n     *  The subproperty's location in the collection.\n     */\n    public indexOf(id: string): number {\n        return [...this.value.keys()].indexOf(id);\n    }\n\n    /**\n     * Returns the property's raw value.\n     * @returns\n     *  The property's raw value.\n     */\n    public toRawValue(): RawEntries {\n        return [...this.value.entries()].map(([id, v]) => [id, v.toRawValue()]);\n    }\n\n    /**\n     * Returns the property's hashed value.\n     * @returns\n     *  The property's hashed value.\n     */\n    public toHashValue(): number {\n        let text = [...this.value.values()].map(v => v.toHashValue()).join(\".\");\n        return computeHash(text);\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ntype CollectionPropertyDescriptor\n    = ListPropertyDescriptor\n    | DictionaryPropertyDescriptor\n","import { \n    CollectionProperty,\n    DictionaryPropertyDescriptor,\n    ListValue,\n    Property\n} from \".\";\n\nexport class DictionaryProperty extends CollectionProperty {\n\n    /**\n     * The property's descriptor.\n     */\n    public override descriptor: DictionaryPropertyDescriptor;\n    \n    /**\n     * The property's primary key.\n     */\n    public readonly primaryKey: string | null;\n\n\n    /**\n     * Creates a new {@link DictionaryProperty}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param values\n     *  The property's values.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: DictionaryPropertyDescriptor,\n        values?: ListValue\n    ) {\n        super(parent, descriptor);\n        this.descriptor = descriptor;\n        this.primaryKey = null;\n        // Configure values\n        this.value = new Map();\n        for(let key in descriptor.form) {\n            // Create property\n            let val;\n            if(!values) {\n                val = undefined;\n            } else if(Array.isArray(values)) {\n                val = values.find(o => o[0] === key)?.at(1);\n            } else {\n                val = values[key]\n            }\n            let prop = Property.create(this, descriptor.form[key], val);\n            // Add property\n            this.value.set(key, prop);\n            // Configure primary key\n            if(!this.primaryKey && prop.descriptor.is_primary) {\n                this.primaryKey = key;\n            }\n        }\n    }\n\n\n    /**\n     * Adds a property to the dictionary.\n     * @param property\n     *  The property.\n     * @param id\n     *  The property's id.\n     * @param index\n     *  The property's location in the collection.\n     * @returns\n     *  The property's id.\n     */\n    public override addProperty(property: Property, id: string, index: number): string {\n        throw new Error(\"Properties cannot be dynamically added to dictionaries.\");\n    }\n\n    /**\n     * Removes a property from the dictionary.\n     * @param id\n     *  The property's id.\n     */\n    public override removeProperty(id: string): void {\n        throw new Error(\"Properties cannot be dynamically removed from dictionaries.\");\n    }\n\n    /**\n     * Tests if the primary property is defined.\n     * @returns\n     *  True if the primary property is defined, false otherwise.\n     */\n    public isDefined(): boolean {\n        if(!this.primaryKey) {\n            return false;\n        } else {\n            return this.value.get(this.primaryKey)!.isDefined();\n        }\n    }\n\n    /**\n     * Returns the property as a string.\n     * @returns\n     *  The property as a string.\n     */\n    public toString(): string {\n        if(!this.primaryKey) {\n            return \"Error - No Primary Key\"\n        } else {\n            return this.value.get(this.primaryKey)!.toString()\n        }\n    }\n\n}\n","import { MD5 } from \"../Utilities\";\nimport { Crypto } from \"../Utilities/Crypto\";\nimport { \n    CollectionProperty,\n    ListPropertyDescriptor,\n    Property,\n    RawEntries\n} from \".\";\n\nexport class ListProperty extends CollectionProperty {\n    \n    /**\n     * The property's descriptor.\n     */\n    public override descriptor: ListPropertyDescriptor;\n\n\n    /**\n     * Creates a new {@link ListProperty}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param values\n     *  The property's values.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: ListPropertyDescriptor,\n        values?: RawEntries\n    ) {\n        super(parent, descriptor);\n        this.descriptor = descriptor;\n        // Configure values\n        this.value = new Map();\n        if(Array.isArray(values)) {\n            for(let [id, value] of values) {\n                // Create property\n                let prop = Property.create(this, descriptor.form, value);\n                // Add property\n                this.value.set(id, prop);\n            }\n        } else if(descriptor.value) {\n            if(Array.isArray(descriptor.value)) {\n                for(let [id, value] of descriptor.value) {\n                    // Create property\n                    let prop = Property.create(this, descriptor.form, value);\n                    // Add property\n                    this.value.set(MD5(id), prop);\n                }\n            } else {\n                for(let id in descriptor.value) {\n                    // Create property\n                    let value = descriptor.value[id];\n                    let prop = Property.create(this, descriptor.form, value);\n                    // Add property\n                    this.value.set(MD5(id), prop);\n                }\n            }\n        }\n    }\n    \n\n    /**\n     * Adds a property to the collection.\n     * @param property\n     *  The property.\n     * @param id\n     *  The property's id.\n     *  (Default: Randomly generated)\n     * @param index\n     *  The property's location in the collection.\n     *  (Default: End of the collection)\n     * @returns\n     *  The property's id.\n     */\n    public addProperty(\n        property: Property,\n        id: string = this.getNextId(),\n        index: number = this.value.size\n    ): string {\n        let entries = [...this.value.entries()];\n        entries.splice(index, 0, [id, property]);\n        this.value = new Map(entries);\n        this.updateProperty();\n        return id;\n    }\n    \n    /**\n     * Removes a property from the collection.\n     * @param id\n     *  The property's id.\n     */\n    public removeProperty(id: string) {\n        this.value.delete(id);\n        this.updateProperty();\n    }\n\n    /**\n     * Tests if the property is defined.\n     * @returns\n     *  True if the property is defined, false otherwise.\n     */\n    public isDefined(): boolean {\n        return 0 < this.value.size;\n    }\n\n    /**\n     * Returns the property as a string.\n     * @returns\n     *  The property as a string.\n     */\n    public toString(): string {\n        return [...this.value.values()].map(v => v.toString()).join(\", \");\n    }\n\n    /**\n     * Returns a randomly generated id not in use by the list.\n     * @returns\n     *  A randomly generated id.\n     */\n    private getNextId() {\n        let id = MD5(Crypto.randomUUID());\n        while(this.value.has(id)) {\n            id = MD5(Crypto.randomUUID());\n        }\n        return id;\n    }\n\n}\n","import { computeHash, MD5 } from \"../Utilities\";\nimport {\n    CollectionProperty,\n    EnumPropertyDescriptor,\n    ListProperty,\n    Property\n} from \".\";\n\nexport class EnumProperty extends Property {\n    \n    /**\n     * The property's descriptor.\n     */\n    public override readonly descriptor: EnumPropertyDescriptor;\n\n    /**\n     * The property's list of options.\n     */\n    public readonly options: ListProperty;\n\n    /**\n     * The property's value.\n     */\n    private _value: string | null;\n\n\n    /**\n     * Creates a new {@link EnumProperty}.\n     * @param parent\n     *  The property's parent.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param value\n     *  The property's value.\n     */\n    constructor(\n        parent: CollectionProperty | undefined,\n        descriptor: EnumPropertyDescriptor,\n        value?: any\n    ) {\n        super(parent, descriptor);\n        let options = Property.create(undefined, descriptor.options);\n        this.descriptor = descriptor;\n        this.options = options as ListProperty;\n        this._value = null;\n        // Resolve value\n        let v;\n        if(value === null) {\n            v = null;\n        } else if(value !== undefined) {\n            v = value;\n        } else if(descriptor.value) {\n            v = MD5(descriptor.value)\n        } else {\n            v = null;\n        }\n        // Set value\n        if(v === null) {\n            this.setValue(null);\n        } else if(typeof v === \"string\") { \n            this.setValue(v);\n        } else {\n            this.setValue(null);\n        }\n    }\n\n\n    /**\n     * Tests if the property is defined.\n     * @returns\n     *  True if the property is defined, false otherwise.\n     */\n    public isDefined(): boolean {\n        return this._value !== null;\n    }\n\n    /**\n     * Sets the property's value.\n     * @param value\n     *  The new value.\n     */\n    public setValue(value: string | null) {\n        if(value === null) {\n            this._value = null;\n        } else {\n            if(this.options.value.has(value)) {\n                this._value = value;\n            } else {\n                this._value = null;\n            }\n        }\n        this.updateProperty();\n    }\n\n    /**\n     * Returns the property's reference value.\n     * @returns\n     *  The property's reference value.\n     */\n    public toReferenceValue(): Property | null {\n        if(this._value === null) {\n            return null;\n        } else {\n            return this.options.value.get(this._value)!;\n        }\n    }\n    \n    /**\n     * Returns the property's raw value.\n     * @returns\n     *  The property's raw value.\n     */\n    public toRawValue(): string | null {\n        return this._value;\n    }\n    \n    /**\n     * Returns the property's hashed value.\n     * @returns\n     *  The property's hashed value.\n     */\n    public toHashValue(): number {\n        if(this._value === null) {\n            return computeHash(\"\");\n        } else {\n            return computeHash(`v:${ this._value }`);\n        }\n    }\n\n    /**\n     * Returns the property as a string.\n     * @returns\n     *  The property as a string.\n     */\n    public toString(): string {\n        return this.toReferenceValue()?.toString() ?? \"Null\";\n    }\n\n}\n","import { DiagramObjectModel } from \"../DiagramModelTypes\";\nimport {\n    DictionaryProperty,\n    DictionaryPropertyDescriptor,\n    PropertyType,\n    RootPropertyDescriptor\n} from \".\";\n\nexport class RootProperty extends DictionaryProperty {\n\n    /**\n     * The property's associated object.\n     */\n    public object: DiagramObjectModel;\n\n    /**\n     * The property's 'update event' handler.\n     */\n    private _notifyPropertyUpdate: (() => void) | undefined;\n\n\n    /**\n     * Creates a new {@link RootProperty}.\n     * @param object\n     *  The property's associated object.\n     * @param descriptor\n     *  The property's descriptor.\n     * @param values\n     *  The property's values.\n     */\n    constructor(\n        object: DiagramObjectModel,\n        descriptor: RootPropertyDescriptor,\n        values?: any\n    ) {\n        let dpd: DictionaryPropertyDescriptor = {\n            type: PropertyType.Dictionary,\n            form: descriptor\n        }\n        super(undefined, dpd, values);\n        this.object = object;\n    }\n\n\n    /**\n     * Updates the property's trigger. \n     */\n    protected override updateProperty(): void {\n        super.updateProperty();\n        if(this._notifyPropertyUpdate) {\n            this._notifyPropertyUpdate();\n        }\n    }\n\n    /**\n     * Configures the property's 'update event' handler.\n     * @param listener\n     *  A function to invoke when the property's value changes.\n     */\n    public onUpdate(listener: () => void) {\n        this._notifyPropertyUpdate = listener;\n    }\n\n}","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5181abbf\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"dictionary-field-contents-control\" }\nconst _hoisted_2 = { class: \"field-name\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.fields, ([key, value]) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"field-item\",\n        key: key\n      }, [\n        _createElementVNode(\"p\", _hoisted_2, _toDisplayString(_ctx.titleCase(key)), 1),\n        (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.getField(value.type)), {\n          class: \"field-value\",\n          property: value,\n          onChange: _cache[0] || (_cache[0] = (...args) => _ctx.$emit('change', ...args)),\n          onCreate: _cache[1] || (_cache[1] = (...args) => _ctx.$emit('create', ...args)),\n          onDelete: _cache[2] || (_cache[2] = (...args) => _ctx.$emit('delete', ...args))\n        }, null, 40, [\"property\"]))\n      ]))\n    }), 128))\n  ]))\n}","import { vModelText as _vModelText, withModifiers as _withModifiers, createElementVNode as _createElementVNode, withDirectives as _withDirectives, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-760e5db4\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"tabindex\"]\nconst _hoisted_2 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['text-field-control', { disabled: _ctx.disabled }]),\n    tabindex: _ctx.tabIndex,\n    onFocus: _cache[5] || (_cache[5] = ($event: any) => (_ctx.onFocus()))\n  }, [\n    _withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.value) = $event)),\n      ref: \"field\",\n      placeholder: \"Null\",\n      onInput: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.onInput && _ctx.onInput(...args))),\n      onKeyup: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"stop\"])),\n      onKeydown: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"stop\"])),\n      onBlur: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n      disabled: _ctx.disabled\n    }, null, 40, _hoisted_2), [\n      [_vModelText, _ctx.value]\n    ])\n  ], 42, _hoisted_1))\n}","\nimport { StringProperty } from \"@/assets/scripts/BlockDiagram\";\nimport { defineComponent, markRaw, PropType, ref } from \"vue\";\n\nexport default defineComponent({\n  name: \"TextField\",\n  setup() {\n    return { field: ref<HTMLElement | null>(null) };\n  },\n  props: {\n    property: {\n      type: Object as PropType<StringProperty>,\n      required: true\n    },\n    updateTimeout: {\n      type: Number,\n      default: 300\n    }\n  },\n  data() {\n    return {\n      sto: 0,\n      value: \"\",\n      activeProperty: markRaw(this.property),\n      onResizeObserver: null as ResizeObserver | null\n    }\n  },\n  computed: {\n\n    /**\n     * A reactive version of the property.\n     * @returns\n     *  The property.\n     */\n    _property(): StringProperty {\n      let trigger = this.activeProperty.trigger.value;\n      return trigger ? this.activeProperty : this.activeProperty; \n    },\n\n    /**\n     * Returns the field's tab index.\n     * @returns\n     *  The field's tab index.\n     */\n    tabIndex(): null | \"0\" {\n      return this.disabled ? null: \"0\";\n    },\n\n    /**\n     * Tests if the property is disabled.\n     * @returns\n     *  True if the property is disabled, false otherwise. \n     */\n    disabled(): boolean {\n      return !(this._property.descriptor.is_editable ?? true);\n    }\n\n  },\n  methods: {\n    \n    /**\n     * Field focus behavior.\n     */\n    onFocus() {\n      // Set focus\n      this.$nextTick(() => {\n        this.field!.focus();\n      });\n    },\n\n    /**\n     * Field input behavior.\n     */\n    onInput() {\n      // Clear timeout\n      clearTimeout(this.sto);\n      // Configure timeout\n      this.sto = setTimeout(() => {\n        this.updateProperty();\n      }, this.updateTimeout);\n      // Update height\n      this.$nextTick(() => {\n        this.refreshHeight();\n      });\n    },\n\n    /**\n     * Field blur behavior.\n     */\n    onBlur() {\n      // Clear timeout\n      clearTimeout(this.sto);\n      // Update property\n      this.updateProperty();\n    },\n\n    /**\n     * Updates the field's property value.\n     */\n    updateProperty() {\n      let value = this.value || null;\n      if(this._property.toRawValue() !== value) {\n        // Update property\n        this.$emit(\"change\", this._property, value);\n      } else {\n        // Refresh value\n        this.refreshValue();\n      }\n    },\n\n    /**\n     * Updates the field's text value.\n     */\n    refreshValue() {\n      // Update value\n      this.value = this._property.toRawValue() ?? \"\";\n      // Update height\n      this.$nextTick(() => {\n        this.refreshHeight();\n      }); \n    },\n\n    /**\n     * Updates the field's height.\n     */\n    refreshHeight() {\n      // If no field, bail\n      if(this.field === null) {\n        return;\n      }\n      // Collapse and calculate height\n      this.field.style.height = \"0px\";\n      this.field.style.height = `${ this.field.scrollHeight }px`\n    }\n\n  },\n  emits: [\"change\"],\n  watch: {\n    \"property\"() {\n        // Update existing property before switching\n        this.updateProperty();\n        // Switch property\n        this.activeProperty = markRaw(this.property);\n        // Refresh value\n        this.refreshValue();\n    },\n    \"_property.trigger.value\"() {\n      this.refreshValue();\n    }\n  },\n  mounted() {\n    // Configure resize observer\n    this.onResizeObserver = new ResizeObserver(() => this.refreshHeight());\n    this.onResizeObserver.observe(this.field!);\n    // Update field property value\n    this.refreshValue();\n  },\n  unmounted() {\n    // Disconnect resize observer\n    this.onResizeObserver!.disconnect();\n    // Update property\n    this.updateProperty();\n  }\n});\n","import { render } from \"./TextField.vue?vue&type=template&id=760e5db4&scoped=true&ts=true\"\nimport script from \"./TextField.vue?vue&type=script&lang=ts\"\nexport * from \"./TextField.vue?vue&type=script&lang=ts\"\n\nimport \"./TextField.vue?vue&type=style&index=0&id=760e5db4&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-760e5db4\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, withCtx as _withCtx, createBlock as _createBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-42804815\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"list-field-control\" }\nconst _hoisted_2 = [\"onPointerdown\"]\nconst _hoisted_3 = [\"onPointerdown\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Plus = _resolveComponent(\"Plus\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx._property.value, ([key, value]) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"field-item\",\n        key: key\n      }, [\n        (_ctx.getField(value.type) === 'DictionaryField')\n          ? (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.getField(value.type)), {\n              key: 0,\n              property: value,\n              onChange: _cache[0] || (_cache[0] = (...args) => _ctx.$emit('change', ...args)),\n              onCreate: _cache[1] || (_cache[1] = (...args) => _ctx.$emit('create', ...args)),\n              onDelete: _cache[2] || (_cache[2] = (...args) => _ctx.$emit('delete', ...args))\n            }, {\n              default: _withCtx(() => [\n                (!_ctx.disabled)\n                  ? (_openBlock(), _createElementBlock(\"button\", {\n                      key: 0,\n                      class: \"delete-button\",\n                      onPointerdown: ($event: any) => (_ctx.onDelete(key)),\n                      tabindex: \"-1\"\n                    }, \"✗\", 40, _hoisted_2))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 2\n            }, 1064, [\"property\"]))\n          : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n              (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.getField(value.type)), {\n                property: value,\n                onChange: _cache[3] || (_cache[3] = (...args) => _ctx.$emit('change', ...args)),\n                onCreate: _cache[4] || (_cache[4] = (...args) => _ctx.$emit('create', ...args)),\n                onDelete: _cache[5] || (_cache[5] = (...args) => _ctx.$emit('delete', ...args))\n              }, null, 40, [\"property\"])),\n              (!_ctx.disabled)\n                ? (_openBlock(), _createElementBlock(\"button\", {\n                    key: 0,\n                    class: \"delete-button\",\n                    onPointerdown: ($event: any) => (_ctx.onDelete(key)),\n                    tabindex: \"-1\"\n                  }, \"✗\", 40, _hoisted_3))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n      ]))\n    }), 128)),\n    (!_ctx.disabled)\n      ? (_openBlock(), _createElementBlock(\"button\", {\n          key: 0,\n          class: \"create-button\",\n          onPointerdown: _cache[6] || (_cache[6] = ($event: any) => (_ctx.onCreate()))\n        }, [\n          _createElementVNode(\"span\", null, [\n            _createVNode(_component_Plus)\n          ]),\n          _createTextVNode(\"Add \")\n        ], 32))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = [\"fill\"]\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"path\", { d: \"m0.79375 0v0.79375h-0.79375v0.52917h0.79375v0.79375h0.52917v-0.79375h0.79375v-0.52917h-0.79375v-0.79375z\" }, null, -1)\nconst _hoisted_3 = [\n  _hoisted_2\n]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"svg\", {\n    width: \"8\",\n    height: \"8\",\n    version: \"1.1\",\n    viewBox: \"0 0 2.1167 2.1167\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: _ctx.color\n  }, _hoisted_3, 8, _hoisted_1))\n}","\nimport { defineComponent } from \"vue\";\nexport default defineComponent({ \n  name: \"Plus\",\n  props: {\n    color: {\n      type: String,\n      default: \"#737373\"\n    }\n  }\n});\n","import { render } from \"./Plus.vue?vue&type=template&id=4511a762&ts=true\"\nimport script from \"./Plus.vue?vue&type=script&lang=ts\"\nexport * from \"./Plus.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, normalizeStyle as _normalizeStyle, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-07f55ddc\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"grid-container\" }\nconst _hoisted_2 = { class: \"value-container\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dropdown-arrow\"\n}\nconst _hoisted_4 = { class: \"dropdown-options\" }\nconst _hoisted_5 = [\"onMouseenter\", \"onClick\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ScrollBox = _resolveComponent(\"ScrollBox\")!\n  const _component_FocusBox = _resolveComponent(\"FocusBox\")!\n\n  return (_openBlock(), _createBlock(_component_FocusBox, {\n    class: _normalizeClass(['enum-field-control', { disabled: _ctx.disabled, open: _ctx.showMenu }]),\n    onFocus: _ctx.openMenu,\n    onUnfocus: _ctx.closeMenu\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", {\n            class: _normalizeClass(['value-text', { 'is-null': _ctx.isNull }])\n          }, _toDisplayString(_ctx._property.toString()), 3),\n          (!_ctx.disabled)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"▼\"))\n            : _createCommentVNode(\"\", true)\n        ]),\n        (_ctx.showMenu)\n          ? (_openBlock(), _createBlock(_component_ScrollBox, {\n              key: 0,\n              propagateScroll: false,\n              style: _normalizeStyle(_ctx.style)\n            }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"ul\", _hoisted_4, [\n                  _createElementVNode(\"li\", {\n                    class: _normalizeClass([{ active: _ctx.hovered === 'null' }, 'null']),\n                    onMouseenter: _cache[0] || (_cache[0] = ($event: any) => (_ctx.hovered = 'null')),\n                    onClick: _cache[1] || (_cache[1] = _withModifiers(($event: any) => (_ctx.updateProperty(null)), [\"stop\"]))\n                  }, \" Null \", 34),\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.options, ([k, v]) => {\n                    return (_openBlock(), _createElementBlock(\"li\", {\n                      key: k,\n                      class: _normalizeClass({ active: _ctx.hovered === k }),\n                      onMouseenter: ($event: any) => (_ctx.hovered = k),\n                      onClick: _withModifiers(($event: any) => (_ctx.updateProperty(k)), [\"stop\"])\n                    }, _toDisplayString(v.toString()), 43, _hoisted_5))\n                  }), 128))\n                ])\n              ]),\n              _: 1\n            }, 8, [\"style\"]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _: 1\n  }, 8, [\"class\", \"onFocus\", \"onUnfocus\"]))\n}","\n// Dependencies\nimport { EnumProperty, Property } from \"@/assets/scripts/BlockDiagram\";\nimport { defineComponent, PropType } from \"vue\";\n// Components\nimport FocusBox from \"@/components/Containers/FocusBox.vue\";\nimport ScrollBox from \"@/components/Containers/ScrollBox.vue\";\n\nexport default defineComponent({\n  name: \"EnumField\",\n  props: {\n    property: {\n      type: Object as PropType<EnumProperty>,\n      required: true\n    },\n    maxHeight: {\n      type: Number,\n      default: 200\n    }\n  },\n  data() {\n    return {\n      hovered: \"\",\n      showMenu: false\n    }\n  },\n  computed: {\n\n    /**\n     * A reactive version of the property.\n     * @returns\n     *  The property.\n     */\n    _property(): EnumProperty {\n      let trigger = this.property.trigger.value;\n      return trigger ? this.property : this.property; \n    },\n\n    /**\n     * Tests if the property is disabled.\n     * @returns\n     *  True if the property is disabled, false otherwise. \n     */\n    disabled(): boolean {\n      return !(this._property.descriptor.is_editable ?? true);\n    },\n\n    /**\n     * Returns the property's set of options.\n     * @returns\n     *  The property's set of options.\n     */\n    options(): Map<string, Property> {\n      return this._property.options.value;\n    },\n\n    /**\n     * Tests if the property's value is null.\n     * @returns\n     *  True if the property's value is null, false otherwise.\n     */\n    isNull(): boolean {\n      return this._property.toRawValue() === null;\n    },\n\n    /**\n     * Returns the scrollbox's style.\n     * @returns\n     *  The scrollbox's style.\n     */\n    style(): { maxHeight: string } {\n      return { maxHeight: `${ this.maxHeight }px` };\n    }\n\n  },\n  methods: {\n    \n    /**\n     * Opens the options menu.\n     */\n    openMenu() {\n      if(this.disabled) {\n        return;\n      }\n      this.showMenu = true;      \n    },\n\n    /**\n     * Closes the options menu.\n     */\n    closeMenu() {\n      // Close menu\n      this.showMenu = false;\n      // Refresh value\n      this.refreshValue();\n    },\n\n    /**\n     * Updates the field's property value.\n     * @param value\n     *  The property's new value.\n     */\n    updateProperty(value: string | null) {\n      if(this._property.toRawValue() !== value) {\n        // Update property\n        this.$emit(\"change\", this._property, value);\n      } else {\n        // Refresh value\n        this.refreshValue();\n      }\n      // Close menu\n      this.showMenu = false;\n    },\n\n    /**\n     * Updates the field's text value.\n     */\n    refreshValue() {\n      this.hovered = this._property.toRawValue() ?? \"null\"\n    }\n    \n  },\n  emits: [\"change\"],\n  watch: {\n    \"_property.trigger.value\"() {\n      this.refreshValue();\n    }\n  },\n  mounted() {\n    this.refreshValue();\n  },\n  components: { FocusBox, ScrollBox }\n});\n","import { render } from \"./EnumField.vue?vue&type=template&id=07f55ddc&scoped=true&ts=true\"\nimport script from \"./EnumField.vue?vue&type=script&lang=ts\"\nexport * from \"./EnumField.vue?vue&type=script&lang=ts\"\n\nimport \"./EnumField.vue?vue&type=style&index=0&id=07f55ddc&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-07f55ddc\"]])\n\nexport default __exports__","import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1e452132\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"tabindex\"]\nconst _hoisted_2 = [\"disabled\"]\nconst _hoisted_3 = {\n  key: 0,\n  class: \"increment-arrows\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['number-field-control', { disabled: _ctx.disabled }]),\n    tabindex: _ctx.tabIndex,\n    onFocus: _cache[6] || (_cache[6] = ($event: any) => (_ctx.onFocus()))\n  }, [\n    _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.value) = $event)),\n      type: \"text\",\n      ref: \"field\",\n      placeholder: \"Null\",\n      onInput: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.onInput && _ctx.onInput(...args))),\n      onKeydown: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n      onBlur: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n      disabled: _ctx.disabled\n    }, null, 40, _hoisted_2), [\n      [_vModelText, _ctx.value]\n    ]),\n    (!_ctx.disabled)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          _createElementVNode(\"div\", {\n            class: \"up-arrow\",\n            onClick: _cache[4] || (_cache[4] = ($event: any) => (_ctx.updateProperty(+1)))\n          }, \"▲\"),\n          _createElementVNode(\"div\", {\n            class: \"down-arrow\",\n            onClick: _cache[5] || (_cache[5] = ($event: any) => (_ctx.updateProperty(-1)))\n          }, \"▼\")\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 42, _hoisted_1))\n}","\nimport { defineComponent, markRaw, PropType, ref } from \"vue\";\nimport { clamp, NumberProperty, PropertyType } from \"@/assets/scripts/BlockDiagram\";\n\nexport default defineComponent({\n  name: \"NumberField\",\n  setup() {\n    return {\n      field: ref<HTMLInputElement | null>(null)\n    };\n  },\n  props: {\n    property: {\n      type: Object as PropType<NumberProperty>,\n      required: true\n    }\n  },\n  data() {\n    return {\n      value: \"\",\n      activeProperty: markRaw(this.property)\n    }\n  },\n  computed: {\n\n    /**\n     * A reactive version of the property.\n     * @returns\n     *  The property.\n     */\n    _property(): NumberProperty {\n      let trigger = this.activeProperty.trigger.value;\n      return trigger ? this.activeProperty : this.activeProperty; \n    },\n\n    /**\n     * Returns the field's tab index.\n     * @returns\n     *  The field's tab index.\n     */\n    tabIndex(): null | \"0\" {\n      return this.disabled ? null: \"0\";\n    },\n\n    /**\n     * Tests if the property is disabled.\n     * @returns\n     *  True if the property is disabled, false otherwise. \n     */\n    disabled(): boolean {\n      return !(this._property.descriptor.is_editable ?? true);\n    }\n\n  },\n  methods: {\n\n    /**\n     * Field focus behavior.\n     */\n    onFocus() {\n      this.$nextTick(() => {\n        this.field!.focus();\n      });\n    },\n\n    /**\n     * Field input behavior.\n     */\n    onInput() {\n      if(this.value === \"\") {\n        this.updateProperty(0);\n      }\n    },\n\n    /**\n     * Field blur behavior.\n     */\n    onBlur() {\n      this.updateProperty(0);\n    },\n\n    /**\n     * Field keydown behavior.\n     * @param event\n     *  The keydown event.\n     */\n    onKeyDown(event: KeyboardEvent) {\n      switch(event.key) {\n        case \"ArrowUp\":\n          event.preventDefault();\n          this.updateProperty(+1);\n          break;\n        case \"ArrowDown\":\n          event.preventDefault();\n          this.updateProperty(-1);\n          break;\n      }\n    },\n\n    /**\n     * Updates the field's property value.\n     * @param delta\n     *  The amount to add to the parsed value.\n     *  (Default: 0)\n     */\n    updateProperty(delta: number = 0) {\n      let value;\n      if(this.value === \"\" && delta === 0) {\n        // Parse null\n        value = null;\n      } else {\n        // Parse value\n        value = parseFloat(this.value);\n        if(Number.isNaN(value)) {\n          value = 0;\n        } else {\n          value += delta;\n        }\n        // Bound value\n        let { min, max } = this._property;\n        value = clamp(value, min, max); \n        // Bound type\n        if(this._property.type === PropertyType.Int) {\n          value = Math.round(value);\n        }\n      }\n      if(this._property.toRawValue() !== value) {\n        // Update value\n        this.$emit(\"change\", this._property, value);\n      } else {\n        // Refresh value\n        this.refreshValue();\n      }  \n    },\n\n    /**\n     * Updates the field's text value.\n     */\n    refreshValue() {\n      this.value = `${ this._property.toRawValue() ?? \"\" }`\n    }\n    \n  },\n  emits: [\"change\"],\n  watch: {\n    \"property\"() {\n      // Update existing property before switching\n      this.updateProperty();\n      // Switch property\n      this.activeProperty = markRaw(this.property);\n      // Refresh value\n      this.refreshValue();\n    },\n    \"_property.trigger.value\"() {\n      this.refreshValue();\n    }\n  },\n  mounted() {\n    this.refreshValue();\n  },\n  unmounted() {\n    this.updateProperty();\n  }\n});\n","import { render } from \"./NumberField.vue?vue&type=template&id=1e452132&scoped=true&ts=true\"\nimport script from \"./NumberField.vue?vue&type=script&lang=ts\"\nexport * from \"./NumberField.vue?vue&type=script&lang=ts\"\n\nimport \"./NumberField.vue?vue&type=style&index=0&id=1e452132&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1e452132\"]])\n\nexport default __exports__","import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelText as _vModelText, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-18405380\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"tabindex\"]\nconst _hoisted_2 = { class: \"grid-container\" }\nconst _hoisted_3 = { class: \"value\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"null-value\"\n}\nconst _hoisted_5 = {\n  key: 1,\n  class: \"date-value\"\n}\nconst _hoisted_6 = { class: \"editor\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"/\", -1))\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"/\", -1))\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"space\" }, null, -1))\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \":\", -1))\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \":\", -1))\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"timezone\" }, \"Z\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['datetime-field-control', { disabled: _ctx.disabled }]),\n    tabindex: _ctx.tabIndex,\n    onFocus: _cache[18] || (_cache[18] = ($event: any) => (_ctx.enterEditMode()))\n  }, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _withDirectives(_createElementVNode(\"div\", _hoisted_3, [\n        (_ctx.value === null)\n          ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \" Null \"))\n          : (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString(_ctx.prop_M) + \" \" + _toDisplayString(_ctx.prop_D) + \", \" + _toDisplayString(_ctx.prop_Y) + \" - \" + _toDisplayString(_ctx.prop_H) + \":\" + _toDisplayString(_ctx.prop_m) + \":\" + _toDisplayString(_ctx.prop_s), 1))\n      ], 512), [\n        [_vShow, !_ctx.showEditor]\n      ]),\n      _withDirectives(_createElementVNode(\"div\", _hoisted_6, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"2\",\n          segment: \"M\",\n          ref: \"M\",\n          class: \"M\",\n          placeholder: \"MM\",\n          onBlur: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.value_M) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_M]\n        ]),\n        _hoisted_7,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"2\",\n          segment: \"D\",\n          ref: \"D\",\n          class: \"D\",\n          placeholder: \"DD\",\n          onBlur: _cache[3] || (_cache[3] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[4] || (_cache[4] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.value_D) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_D]\n        ]),\n        _hoisted_8,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"4\",\n          segment: \"Y\",\n          ref: \"Y\",\n          class: \"Y\",\n          placeholder: \"YYYY\",\n          onBlur: _cache[6] || (_cache[6] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[7] || (_cache[7] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.value_Y) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_Y]\n        ]),\n        _hoisted_9,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"2\",\n          segment: \"H\",\n          ref: \"H\",\n          class: \"H\",\n          placeholder: \"HH\",\n          onBlur: _cache[9] || (_cache[9] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[10] || (_cache[10] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((_ctx.value_H) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_H]\n        ]),\n        _hoisted_10,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"2\",\n          segment: \"m\",\n          ref: \"m\",\n          class: \"m\",\n          placeholder: \"mm\",\n          onBlur: _cache[12] || (_cache[12] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[13] || (_cache[13] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[14] || (_cache[14] = ($event: any) => ((_ctx.value_m) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_m]\n        ]),\n        _hoisted_11,\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          maxlength: \"2\",\n          segment: \"s\",\n          ref: \"s\",\n          class: \"s\",\n          placeholder: \"ss\",\n          onBlur: _cache[15] || (_cache[15] = \n//@ts-ignore\n(...args) => (_ctx.onBlur && _ctx.onBlur(...args))),\n          onKeydown: _cache[16] || (_cache[16] = \n//@ts-ignore\n(...args) => (_ctx.onKeyDown && _ctx.onKeyDown(...args))),\n          \"onUpdate:modelValue\": _cache[17] || (_cache[17] = ($event: any) => ((_ctx.value_s) = $event))\n        }, null, 544), [\n          [_vModelText, _ctx.value_s]\n        ]),\n        _hoisted_12\n      ], 512), [\n        [_vShow, _ctx.showEditor]\n      ])\n    ])\n  ], 42, _hoisted_1))\n}","\nimport { DateProperty } from \"@/assets/scripts/BlockDiagram\";\nimport { defineComponent, markRaw, PropType, ref } from \"vue\";\n\nconst Segment = [\n  \"M\", \"D\", \"Y\",\n  \"H\", \"m\", \"s\"\n]\n\nconst Months = [\n  \"Jan\", \"Feb\", \"Mar\", \n  \"Apr\", \"May\", \"Jun\",\n  \"Jul\", \"Aug\", \"Sep\",\n  \"Oct\", \"Nov\", \"Dec\"\n]\n\nexport default defineComponent({\n  name: \"DateTimeField\",\n  setup() {\n    return { \n      M: ref<HTMLInputElement | null>(null),\n      D: ref<HTMLInputElement | null>(null),\n      Y: ref<HTMLInputElement | null>(null),\n      H: ref<HTMLInputElement | null>(null),\n      m: ref<HTMLInputElement | null>(null),\n      s: ref<HTMLInputElement | null>(null),\n    };\n  },\n  props: {\n    property: {\n      type: Object as PropType<DateProperty>,\n      required: true\n    }\n  },\n  data() {\n    return {\n      value_M: \"\",\n      value_D: \"\",\n      value_Y: \"\",\n      value_H: \"\",\n      value_m: \"\",\n      value_s: \"\",\n      showEditor: false,\n      activeProperty: markRaw(this.property)\n    }\n  },\n  computed: {\n\n    /**\n     * A reactive version of the property.\n     * @returns\n     *  The property.\n     */\n    _property(): DateProperty {\n      let trigger = this.activeProperty.trigger.value;\n      return trigger ? this.activeProperty : this.activeProperty;\n    },\n\n    /**\n     * Returns the field's tab index.\n     * @returns\n     *  The field's tab index.\n     */\n    tabIndex(): null | \"0\" {\n      return this.disabled ? null: \"0\";\n    },\n\n    /**\n     * Tests if the property is disabled.\n     * @returns\n     *  True if the property is disabled, false otherwise. \n     */\n    disabled(): boolean {\n      return !(this._property.descriptor.is_editable ?? true);\n    },\n\n    /**\n     * The property's raw value.\n     * @returns\n     *  the property's raw value.\n     */\n    value(): Date | null {\n      let value = this._property.toRawValue();\n      return value !== null ? new Date(value) : value;\n    },\n\n    /**\n     * Returns the currently configured month.\n     * @returns\n     *  The currently configured month.\n     */\n    prop_M(): string {\n      let v = this.value;\n      return v ? Months[v.getUTCMonth()] : \"Null\";\n    },\n\n    /**\n     * Returns the currently configured day.\n     * @returns\n     *  The currently configured day.\n     */\n    prop_D(): string {\n      let v = this.value;\n      return `${ v?.getUTCDate() ?? 'Null' }`;\n    },\n    \n    /**\n     * Returns the currently configured year.\n     * @returns\n     *  The currently configured year.\n     */\n    prop_Y(): string {\n      let v = this.value;\n      return `${ v?.getUTCFullYear() ?? 'Null' }`;\n    },\n\n    /**\n     * Returns the currently configured hour.\n     * @returns\n     *  The currently configured hour.\n     */\n    prop_H(): string {\n      let v = this.value;\n      return v ? `${ v.getUTCHours() }`.padStart(2, '0') : \"Null\";\n    },\n\n    /**\n     * Returns the currently configured minute.\n     * @returns\n     *  The currently configured minute.\n     */\n    prop_m(): string {\n      let v = this.value;\n      return v ? `${ v.getUTCMinutes() }`.padStart(2, '0') : \"Null\";\n    },\n\n    /**\n     * Returns the currently configured second.\n     * @returns\n     *  The currently configured second.\n     */\n    prop_s(): string {\n      let v = this.value;\n      return v ? `${ v.getUTCSeconds() }`.padStart(2, '0') : \"Null\";\n    }\n\n  },\n  methods: {\n\n    /**\n     * Field segment blur behavior.\n     * @param event\n     *  The blur event.\n     */\n    onBlur(event: FocusEvent) {\n      if(!this.$el.contains(event.relatedTarget)) {\n        this.exitEditMode();\n      }\n    },\n\n    /**\n     * Field segment keydown behavior.\n     * @param event\n     *  The keydown event.\n     */\n    onKeyDown(event: KeyboardEvent) {\n      let field = event.target as HTMLInputElement;\n      if(field.selectionStart !== field.selectionEnd) {\n        return;\n      }\n      switch(event.key) {\n        case \"Backspace\":\n          if(field.selectionEnd === 0) {\n            this.shiftFocus(-1, false);\n          }\n          break;\n        case \"ArrowLeft\":\n          if(field.selectionEnd === 0) {\n            this.shiftFocus(-1, false);\n            event.preventDefault();\n          }\n          break;\n        case \"ArrowRight\":\n          if(field.selectionEnd === field.maxLength) {\n            this.shiftFocus(+1, true);\n            event.preventDefault();\n          }\n          break;\n        default:\n          if(field.selectionEnd === field.maxLength) {\n            this.shiftFocus(+1, true);\n          }\n      }\n    },\n\n    /**\n     * Enters edit mode.\n     */\n    enterEditMode() {\n      if(this.disabled) {\n        return;\n      }\n      this.showEditor = true;\n      this.$nextTick(() => {\n        // Select field\n        let field: HTMLInputElement;\n        for(let s of Segment) {\n          field = (this as any)[s];\n          if(!field.value) break;\n        }\n        // Focus field\n        field!.focus();\n        // Position caret\n        field!.selectionEnd = field!.value.length;\n      })\n    },\n\n    /**\n     * Exits edit mode.\n     */\n    exitEditMode() {\n      this.updateProperty();\n      this.showEditor = false;\n    },\n\n    /**\n     * Shifts focus from the current segment to an adjacent segment.\n     * @param delta\n     *  The number of segments to shift over.\n     * @param start\n     *  [true]\n     *   Position caret at the start of the segment.\n     *  [false]\n     *   Position caret at the end of the segment.\n     *  (Default: true)\n     */\n    shiftFocus(delta: number, start: boolean = true) {\n      let field = document.activeElement as HTMLInputElement;\n      let index = Segment.indexOf(field.getAttribute(\"segment\")!) + delta;\n      if(0 <= index && index < Segment.length) {\n        this.$nextTick(() => {\n          // Get adjacent segment\n          let adj: HTMLInputElement = (this as any)[Segment[index]];\n          // Focus adjacent segment\n          adj.focus();\n          // Position caret\n          adj.selectionEnd = start ? 0 : adj.value.length;\n        });\n      }\n    },\n\n    /**\n     * Updates the field's property value.\n     */\n    updateProperty() {\n      // Parse date\n      let ISO8601 = `${ \n        this.value_Y.padStart(4, \"0\")\n      }-${\n        this.value_M.padStart(2, \"0\")\n      }-${\n        this.value_D.padStart(2, \"0\")\n      }T${\n        this.value_H.padStart(2, \"0\")\n      }:${\n        this.value_m.padStart(2, \"0\")\n      }:${\n        this.value_s.padStart(2, \"0\")\n      }.000Z`;\n      let date = new Date(ISO8601);\n      // Parse value\n      let value;\n      if(ISO8601 === \"0000-00-00T00:00:00.000Z\") {\n        value = null;\n      } else if(Number.isNaN(date.getTime())) {\n        value = null;\n      } else {\n        value = date;\n      }\n      if(this.value?.getTime() !== value?.getTime()) {\n        // Update value\n        this.$emit(\"change\", this._property, value);\n      } else {\n        // Refresh value\n        this.refreshValue();\n      }\n    },\n\n    /**\n     * Updates the field's text value.\n     */\n    refreshValue() {\n      // Parse date\n      let date = this.value?.toISOString() ?? \"--T::\";\n      let [ Y, M, D, H, m, s ] = date.split(/[-T:\\.]/);\n      // Update values\n      this.value_Y = Y;\n      this.value_M = M;\n      this.value_D = D;\n      this.value_H = H;\n      this.value_m = m;\n      this.value_s = s;\n    }\n\n  },\n  emits: [\"change\"],\n  watch: {\n    \"property\"() {\n      // Update existing property before switching\n      this.updateProperty();\n      // Switch property\n      this.activeProperty = markRaw(this.property);\n      // Refresh value\n      this.refreshValue();\n    },\n    \"_property.trigger.value\"() {\n      this.refreshValue();\n    }\n  },\n  mounted() {\n    this.refreshValue();\n  },\n  unmounted() {\n    this.updateProperty();\n  }\n});\n","import { render } from \"./DateTimeField.vue?vue&type=template&id=18405380&scoped=true&ts=true\"\nimport script from \"./DateTimeField.vue?vue&type=script&lang=ts\"\nexport * from \"./DateTimeField.vue?vue&type=script&lang=ts\"\n\nimport \"./DateTimeField.vue?vue&type=style&index=0&id=18405380&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-18405380\"]])\n\nexport default __exports__","\n// Dependencies\nimport { ListProperty, PropertyType } from \"@/assets/scripts/BlockDiagram\";\nimport { defineAsyncComponent, defineComponent, PropType } from \"vue\";\n// Components\nimport Plus from \"@/components/Icons/Plus.vue\";\nimport TextField from \"./TextField.vue\";\nimport EnumField from \"./EnumField.vue\";\nimport NumberField from \"./NumberField.vue\";\nimport DateTimeField from \"./DateTimeField.vue\";\nconst DictionaryField = defineAsyncComponent(() => import(\"./DictionaryField.vue\")) as any;\n\nexport default defineComponent({\n  name: \"ListField\",\n  props: {\n    property: {\n      type: Object as PropType<ListProperty>,\n      required: true\n    }\n  },\n  computed: {\n\n    /**\n     * A reactive version of the property.\n     * @returns\n     *  The property.\n     */\n    _property(): ListProperty {\n      let trigger = this.property.trigger.value;\n      return trigger ? this.property : this.property; \n    },\n\n    /**\n     * Tests if the property is disabled.\n     * @returns\n     *  True if the property is disabled, false otherwise. \n     */\n    disabled(): boolean {\n      return !(this._property.descriptor.is_editable ?? true);\n    }\n\n  },\n  methods: {\n   \n    /**\n     * Returns a field's component type.\n     * @param type\n     *  The type of field.\n     * @returns\n     *  The field's component type.\n     */\n    getField(type: PropertyType): string | undefined {\n      switch(type) {\n        case PropertyType.Int:\n        case PropertyType.Float:\n          return \"NumberField\";\n        case PropertyType.String:\n          return \"TextField\";\n        case PropertyType.Date:\n          return \"DateTimeField\";\n        case PropertyType.Enum:\n          return \"EnumField\";\n        case PropertyType.List:\n          return \"ListField\";\n        case PropertyType.Dictionary:\n          return \"DictionaryField\";\n      }\n    },\n\n    /**\n     * Create subproperty behavior.\n     */\n    onCreate() {\n      this.$emit(\"create\", this._property);\n    },\n\n    /**\n     * Delete subproperty behavior.\n     * @param id\n     *  The subproperty's id.\n     */\n    onDelete(id: string) {\n      this.$emit(\"delete\", this._property, id);\n    }\n\n  },\n  emits: [\"change\", \"create\", \"delete\"],\n  components: {\n    Plus,\n    TextField,\n    EnumField,\n    NumberField,\n    DateTimeField,\n    DictionaryField\n  }\n});\n","import { render } from \"./ListField.vue?vue&type=template&id=42804815&scoped=true&ts=true\"\nimport script from \"./ListField.vue?vue&type=script&lang=ts\"\nexport * from \"./ListField.vue?vue&type=script&lang=ts\"\n\nimport \"./ListField.vue?vue&type=style&index=0&id=42804815&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-42804815\"]])\n\nexport default __exports__","\n// Dependencies\nimport { defineAsyncComponent, defineComponent, PropType } from \"vue\";\nimport { DictionaryProperty, Property, PropertyType, titleCase } from \"@/assets/scripts/BlockDiagram\";\n// Components\nimport TextField from \"./TextField.vue\";\nimport ListField from \"./ListField.vue\";\nimport EnumField from \"./EnumField.vue\";\nimport NumberField from \"./NumberField.vue\";\nimport DateTimeField from \"./DateTimeField.vue\";\nconst DictionaryField = defineAsyncComponent(() => import(\"./DictionaryField.vue\")) as any;\n\nexport default defineComponent({\n  name: \"DictionaryFieldContents\",\n  props: {\n    property: {\n      type: Object as PropType<DictionaryProperty>,\n      required: true\n    }\n  },\n  computed: {\n    \n    /**\n     * The set of visible properties.\n     * @returns\n     *  The set of visible properties.\n     */\n    fields(): [string, Property][] {\n      return [...this.property.value.entries()].filter(\n        o => o[1].descriptor.is_visible ?? true\n      );\n    }\n\n  },\n  methods: {\n   \n    /**\n     * Returns a field's component type.\n     * @param type\n     *  The type of field.\n     * @returns\n     *  The field's component type.\n     */\n    getField(type: PropertyType): string | undefined {\n      switch(type) {\n        case PropertyType.String:\n          return \"TextField\";\n        case PropertyType.Int:\n        case PropertyType.Float:\n          return \"NumberField\";\n        case PropertyType.Date:\n          return \"DateTimeField\";\n        case PropertyType.Enum:\n          return \"EnumField\";\n        case PropertyType.List:\n          return \"ListField\";\n        case PropertyType.Dictionary:\n          return \"DictionaryField\";\n      }\n    },\n\n    titleCase\n\n  },\n  emits: [\"change\", \"create\", \"delete\"],\n  components: {\n    TextField,\n    ListField,\n    EnumField,\n    NumberField,\n    DateTimeField,\n    DictionaryField\n  }\n});\n","import { render } from \"./DictionaryFieldContents.vue?vue&type=template&id=5181abbf&scoped=true&ts=true\"\nimport script from \"./DictionaryFieldContents.vue?vue&type=script&lang=ts\"\nexport * from \"./DictionaryFieldContents.vue?vue&type=script&lang=ts\"\n\nimport \"./DictionaryFieldContents.vue?vue&type=style&index=0&id=5181abbf&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5181abbf\"]])\n\nexport default __exports__","import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, vShow as _vShow, normalizeStyle as _normalizeStyle, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-cf54a08c\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"scrollbox-container\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      ref: \"content\",\n      class: \"scroll-content\",\n      onWheelPassive: _cache[0] || (_cache[0] = ($event: any) => (_ctx.moveScrollPosition(_ctx.scrollTop + $event.deltaY, $event)))\n    }, [\n      _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n    ], 544),\n    _withDirectives(_createElementVNode(\"div\", {\n      class: \"scroll-bar\",\n      style: _normalizeStyle(_ctx.scroll.sty),\n      onWheelPassive: _cache[3] || (_cache[3] = ($event: any) => (_ctx.moveScrollPosition(_ctx.scrollTop + $event.deltaY, $event)))\n    }, [\n      _withDirectives(_createElementVNode(\"div\", {\n        class: \"scroll-handle\",\n        style: _normalizeStyle(_ctx.handle.sty),\n        onPointerdown: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.startDrag && _ctx.startDrag(...args))),\n        onPointerup: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.stopDrag && _ctx.stopDrag(...args)))\n      }, null, 36), [\n        [_vShow, _ctx.showScrollbar]\n      ])\n    ], 36), [\n      [_vShow, _ctx.alwaysShowScrollBar || _ctx.showScrollbar]\n    ])\n  ]))\n}","\nimport { clamp } from \"@/assets/scripts/BlockDiagram\";\nimport { PointerTracker } from \"@/assets/scripts/PointerTracker\";\nimport { defineComponent, markRaw, Ref, ref } from 'vue';\n\nexport default defineComponent({\n  name: \"ScrollBox\",\n  setup() {\n    return { \n      content: ref<HTMLElement | null>(null)\n    }\n  },\n  props: {\n    resetScrollOnChange: {\n      type: Boolean,\n      default: false,\n    },\n    alwaysShowScrollBar: {\n      type: Boolean,\n      default: false\n    },\n    propagateScroll: {\n      type: Boolean,\n      default: true\n    },\n    handleColor: {\n      type: String,\n      default: \"#333333\"\n    },\n    scrollColor: {\n      type: String,\n      default: \"none\"\n    },\n    borderColor: {\n      type: String,\n      default: \"#404040\"\n    },\n    width: {\n      type: Number,\n      default: 17\n    }\n  },\n  data() {\n    return {\n      scrollTop: 0,\n      windowMax: 0,\n      scroll: {\n        sty: { \n          width: `${this.width}px`,\n          background: this.scrollColor\n        },\n      },\n      handle: {\n        trk: markRaw(new PointerTracker()),\n        hei: 0, \n        max: 0, \n        pos: 0,\n        sty: { \n          height: \"0px\", \n          transform: \"translateY(0px)\", \n          background: this.handleColor, \n          borderColor: this.borderColor,\n        },\n      },\n      showScrollbar: false,\n      onResizeObserver: null as ResizeObserver | null,\n      onMutateObserver: null as MutationObserver | null,\n    };\n  },\n  methods: {\n\n    /**\n     * Scroll handle drag start behavior.\n     * @param event\n     *  The pointer event.\n     */\n    startDrag(event: PointerEvent) {\n      this.handle.trk.capture(event, this.onDrag);\n      document.addEventListener(\"pointerup\", this.stopDrag, { once: true });\n    },\n\n    /**\n     * Scroll handle drag behavior.\n     * @param event\n     *  The pointer event.\n     * @param track\n     *  The mouse tracker.\n     */\n    onDrag(_: PointerEvent, track: PointerTracker) {\n      this.moveScrollPosition(\n        this.handleTopToTop(this.handle.pos + track.movementY)\n      );\n    },\n\n    /**\n     * Scroll handle drag stop behavior.\n     * @param event\n     *  The pointer event.\n     */\n    stopDrag(event: PointerEvent) {\n      this.handle.trk.release(event);\n    },\n\n    /**\n     * Calculates and configures the parameters required to mimic scrolling.\n     * \n     * NOTE:\n     * This function should be called anytime:\n     *  - The height of the scroll box changes.\n     *  - The height of the scroll content changes.\n     * \n     * @param resetTop\n     *  [true]\n     *   The scroll position will be set to 0, after recalculation.\n     *  [false]\n     *   The scroll position will go to its original spot, after recalculation.\n     *  (Default: true)\n     */\n    recalculateScrollState(resetTop: boolean = true) {\n      let showScrollbar = this.showScrollbar;\n      let content = this.content!;\n      // Ignore scroll content with no height\n      if(content.clientHeight === 0) {\n       this.showScrollbar = false;\n       return;\n      }\n      // Compute ratio\n      let ratio = content.clientHeight / content.scrollHeight;\n      // Update scroll state (-4 for the 2px of padding around the scrollbar)\n      this.handle.hei = Math.max(15, Math.round((content.clientHeight - 4) * ratio));\n      this.handle.max = content.clientHeight - this.handle.hei - 4;\n      this.windowMax  = content.scrollHeight - content.clientHeight;\n      // Update scroll handle\n      this.showScrollbar = ratio !== 1;\n      this.handle.sty.height = `${this.handle.hei}px`;\n      // Update scroll position\n      this.moveScrollPosition(resetTop ? 0 : content.scrollTop);\n      // If scrollbar added, recalculate state after scrollbar applied\n      if(!showScrollbar && this.showScrollbar) {\n        setTimeout(() => this.recalculateScrollState(resetTop), 0);\n      }\n    },\n\n    /**\n     * Moves the scroll position.\n     * @param position\n     *  The new scroll position.\n     * @param event\n     *  The scroll wheel event, if applicable.\n     */\n    moveScrollPosition(position: number, event: WheelEvent | null = null) {\n      let scrollTop = this.scrollTop;\n      this.scrollTop = clamp(position, 0, this.windowMax);\n      this.handle.pos = this.topToHandleTop(this.scrollTop);\n      this.handle.sty.transform = `translateY(${this.handle.pos}px)`;\n      this.content!.scrollTop = this.scrollTop;\n      // Selectively propagate scroll event\n      let hasMoved = scrollTop - this.scrollTop !== 0;\n      let canMove = 0 < this.scrollTop && this.scrollTop < this.windowMax;\n      if(!this.propagateScroll || hasMoved || canMove) {\n        event?.stopPropagation();\n      }\n    },\n    \n    /**\n     * Calculates the scroll handle position from the scroll position.\n     * @param top\n     *  The current scroll position.\n     * @returns\n     *  The calculated scroll handle position.\n     */\n    topToHandleTop(top: number): number {\n      return (top / this.windowMax) * this.handle.max;\n    },\n\n    /**\n     * Calculates the scroll position from the scroll handle position.\n     * @param top\n     *  The current scroll handle position.\n     * @returns\n     *  The calculated scroll position.\n     */\n    handleTopToTop(top: number): number {\n      return (top / this.handle.max) * this.windowMax;\n    }\n\n  },\n  mounted() {\n    // Configure mutation observer\n    let mutateOptions = { childList: true, characterData: true, subtree: true };\n    this.onMutateObserver = new MutationObserver(() => \n      this.recalculateScrollState(this.resetScrollOnChange)\n    );\n    // Configure resize observer\n    this.onResizeObserver = new ResizeObserver(() =>\n      this.recalculateScrollState(false)\n    );\n    this.onResizeObserver.observe(this.$el);\n    this.onMutateObserver.observe(this.content!, mutateOptions);\n  },\n  unmounted() {\n    this.onResizeObserver!.disconnect();\n    this.onMutateObserver!.disconnect();\n  },\n});\n","import { render } from \"./ScrollBox.vue?vue&type=template&id=cf54a08c&scoped=true&ts=true\"\nimport script from \"./ScrollBox.vue?vue&type=script&lang=ts\"\nexport * from \"./ScrollBox.vue?vue&type=script&lang=ts\"\n\nimport \"./ScrollBox.vue?vue&type=style&index=0&id=cf54a08c&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-cf54a08c\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./AppTitleBar.vue?vue&type=style&index=0&id=dc3b1a94&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./CollapseArrow.vue?vue&type=style&index=0&id=2d69016e&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./AppFooterBar.vue?vue&type=style&index=0&id=783f2534&scoped=true&lang=css\"","///////////////////////////////////////////////////////////////////////////////\n//  1. RasterCache  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport class RasterCache {\n\n    /**\n     * The raster cache's internal scale.\n     */\n    private _scale: number;\n\n    /**\n     * The internal raster cache.\n     */\n    private _cache: Map<string, Raster>;\n\n\n    /**\n     * Creates a new {@link RasterCache}.\n     */\n    constructor() {\n        this._scale = 1;\n        this._cache = new Map();\n    }\n\n\n    /**\n     * Creates a new {@link Raster}.\n     * @param id\n     *  The id of the raster.\n     * @param w\n     *  The width of the raster.\n     * @param h\n     *  The height of the raster.\n     * @param p\n     *  The amount of padding to add to the raster.\n     *  (Default: 0)\n     */\n    public createRaster(id: string, w: number, h: number, p: number = 0): Raster {\n        // Create raster\n        let raster = new Raster(w, h, p, this._scale);\n        // Register raster\n        this._cache.set(id, raster);\n        // Return raster\n        return raster;\n    }\n\n    /**\n     * Draws a raster to the context.\n     * @param context\n     *  The context to draw to.\n     * @param id\n     *  The id of the raster.\n     * @param x\n     *  The x-axis coordinate on the destination context.\n     * @param y\n     *  The y-axis coordinate on the destination context.\n     * @returns \n     *  True if the raster was drawn, false if no raster with that id exists.\n     */\n    public drawRaster(context: CanvasRenderingContext2D, id: string, x: number, y: number): boolean {\n        let r = this._cache.get(id);\n        if (r) {\n            context.drawImage(r.canvas, x - r.cx, y - r.cy, r.w, r.h);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Dumps the raster cache and updates its scale.\n     * @param scale\n     *  The new scale value.\n     */\n    public setScale(scale: number) {\n        this._scale = scale;\n        this._cache.clear();\n    }\n\n    /**\n     * Returns the cache's current scale.\n     * @returns\n     *  The cache's current scale.\n     */\n    public getScale(): number {\n        return this._scale;\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Raster  ////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport class Raster {\n\n    /**\n     * The raster's canvas.\n     */\n    public readonly canvas: HTMLCanvasElement;\n\n    /**\n     * The raster's context.\n     */\n    public readonly context: CanvasRenderingContext2D;\n\n    /**\n     * The raster's center on the x-axis.\n     */\n    public readonly cx: number;\n\n    /**\n     * The raster's center on the y-axis.\n     */\n    public readonly cy: number;\n\n    /**\n     * The raster's full width.\n     */\n    public readonly w: number;\n\n    /**\n     * The raster's full height.\n     */\n    public readonly h: number;\n\n    /**\n     * The raster's padding.\n     */\n    public readonly p: number;\n\n\n    /**\n     * The raster's fill style.\n     */\n    public set fillStyle(value: string) {\n        this.context.fillStyle = value;\n    }\n\n    /**\n     * The raster's font.\n     */\n    public set font(value: string) {\n        this.context.font = value;\n    }\n\n    /**\n     * The raster's line width.\n     */\n    public set lineWidth(value: number) {\n        this.context.lineWidth = value;\n    }\n\n    /**\n     * The raster's stroke style.\n     */\n    public set strokeStyle(value: string) {\n        this.context.strokeStyle = value;\n    }\n\n    /**\n     * The raster's text baseline.\n     */\n    public set textBaseline(value: CanvasTextBaseline) {\n        this.context.textBaseline = value;\n    }\n\n\n    /**\n     * Creates a new {@link Raster}.\n     * @param w\n     *  The width of the raster.\n     * @param h\n     *  The height of the raster.\n     * @param p\n     *  The raster's padding.\n     * @param k\n     *  The scale of the raster.\n     */\n    constructor(w: number, h: number, p: number, k: number) {\n        let tp = p << 1;\n        // Prepare canvas\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.width = Math.round((w + tp) * k);\n        this.canvas.height = Math.round((h + tp) * k);\n        // Prepare context\n        this.context = this.canvas.getContext(\"2d\")!;\n        this.context.setTransform(k, 0, 0, k, 0, 0);\n        // Calculate dimensions\n        this.h = h + tp;\n        this.w = w + tp;\n        this.cx = Math.round(this.w / 2);\n        this.cy = Math.round(this.h / 2);\n        this.p = p;\n    }\n\n\n    /**\n     * Starts a new path.\n     */\n    public beginPath() {\n        this.context.beginPath();\n    }\n\n    /**\n     * Attempts to add a straight line from the current point to the start of\n     * the current sub-path. If the shape has already been closed or has only\n     * one point, this function does nothing.\n     */\n    public closePath() {\n        this.context.closePath();\n    }\n\n    /**\n     * Begins a new sub-path at the point specified\n     * @param x\n     *  The x-axis coordinate. \n     * @param y\n     *  The y-axis coordinate.\n     */\n    public moveTo(x: number, y: number) {\n        this.context.moveTo(this.p + x, this.p + y);\n    }\n\n    /**\n     * Adds a straight line to the current sub-path by connecting the\n     * sub-path's last point to the specified coordinates.\n     * @param x\n     *  The x-axis coordinate.\n     * @param y\n     *  The y-axis coordinate.\n     */\n    public lineTo(x: number, y: number) {\n        this.context.lineTo(this.p + x, this.p + y);\n    }\n\n    /**\n     * Outlines the current or given path with the current stroke style.\n     */\n    public stroke() {\n        this.context.stroke();\n    }\n\n    /**\n     * Fills the current or given path with the current fillStyle.\n     */\n    public fill() {\n        this.context.fill();\n    }\n\n    /**\n     * Draws a text string at the specified coordinates, filling the string's\n     * characters with the current fillStyle.\n     * @param text\n     *  The text string.\n     * @param x\n     *  The x-axis coordinate.\n     * @param y\n     *  The y-axis coordinate.\n     */\n    public fillText(text: string, x: number, y: number) {\n        this.context.fillText(text, x, y);\n    }\n\n    /**\n     * Draws a rectangular path to the context.\n     * @param x\n     *  The top-left x coordinate.\n     * @param y\n     *  The top-left y coordinate.\n     * @param w\n     *  The width of the rectangle.\n     * @param h\n     *  The height of the rectangle.\n     * @param r\n     *  The rectangle's border radius.\n     * @param s\n     *  The rectangle's stroke width.\n     *  (Default: 1)\n     */\n    public drawRect(\n        x: number, y: number,\n        w: number, h: number,\n        r: number, s?: number\n    ): void;\n\n    /**\n     * Draws a rectangular path to the context.\n     * @param x\n     *  The top-left x coordinate.\n     * @param y\n     *  The top-left y coordinate.\n     * @param w\n     *  The width of the rectangle.\n     * @param h\n     *  The height of the rectangle.\n     * @param r\n     *  An object which defines the border radius of each corner. If a corner\n     *  is not specified, it is assumed to be 0.\n     * @param s\n     *  The rectangle's stroke width.\n     *  (Default: 1)\n     */\n    public drawRect(\n        x: number, y: number,\n        w: number, h: number,\n        r: BorderRadius,\n        s?: number\n    ): void;\n    \n    public drawRect(\n        x: number, y: number,\n        w: number, h: number,\n        r: BorderRadius | number,\n        s: number = 1\n    ) {\n        // Account for padding & stroke width\n        x += this.p + (s / 2);\n        y += this.p + (s / 2);\n        w -= s;\n        h -= s;\n        // Parse radius\n        if (typeof r === \"number\") {\n            r = { tl: r, tr: r, br: r, bl: r }\n        } else {\n            r = { tl: 0, tr: 0, br: 0, bl: 0, ...r };\n        }\n        // Draw rectangular path\n        let ctx = this.context;\n        ctx.beginPath();\n        ctx.moveTo(x + r.tl!, y);\n        ctx.lineTo(x + w - r.tr!, y);\n        ctx.quadraticCurveTo(x + w, y, x + w, y + r.tr!);\n        ctx.lineTo(x + w, y + h - r.br!);\n        ctx.quadraticCurveTo(x + w, y + h, x + w - r.br!, y + h);\n        ctx.lineTo(x + r.bl!, y + h);\n        ctx.quadraticCurveTo(x, y + h, x, y + h - r.bl!);\n        ctx.lineTo(x, y + r.tl!);\n        ctx.quadraticCurveTo(x, y, x + r.tl!, y);\n        ctx.closePath();\n    }\n  \n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. Raster Types  //////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type BorderRadius = {\n    \n    /**\n     * Top left radius.\n     */\n    tl?: number,\n\n    /**\n     * Top right radius.\n     */\n    tr?: number,\n\n    /**\n     * Bottom right radius.\n     */\n    br?: number,\n\n    /**\n     * Bottom left radius.\n     */\n    bl?: number\n\n}\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./TextField.vue?vue&type=style&index=0&id=760e5db4&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ContextMenu.vue?vue&type=style&index=0&id=6a0233c2&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./EditorSidebar.vue?vue&type=style&index=0&id=09fcd1e8&scoped=true&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./EnumField.vue?vue&type=style&index=0&id=07f55ddc&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./AccordionBox.vue?vue&type=style&index=0&id=39ee0bdf&scoped=true&lang=css\"","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./DictionaryFieldContents.vue?vue&type=style&index=0&id=5181abbf&scoped=true&lang=css\"","export class PointerTracker {\n\n    /**\n     * The pointer's total delta-x.\n     */\n    public deltaX: number;\n\n    /**\n     * The pointer's total delta-y.\n     */\n    public deltaY: number;\n\n    /**\n     * The pointer's current delta-x.\n     */\n    public movementX: number;\n\n    /**\n     * The pointer's current delta-y.\n     */\n    public movementY: number;\n    \n    /**\n     * The drag target.\n     */\n    public target: HTMLElement | null;\n\n    /**\n     * The pointer's origin on the x-axis.\n     */\n    private _originX: number;\n\n    /**\n     * The pointer's origin on the y-axis.\n     */\n    private _originY: number;\n\n    /**\n     * The pointer's last position on the x-axis.\n     */\n    private _lastX: number;\n\n    /**\n     * The pointer's last position on the y-axis.\n     */\n    private _lastY: number;\n\n\n    /**\n     * Creates a new {@link PointerTracker}.\n     */\n    constructor() {\n        this.deltaX = 0;\n        this.deltaY = 0;\n        this.movementX = 0;\n        this.movementY = 0;\n        this.target = null;\n        this._originX = 0;\n        this._originY = 0;\n        this._lastX = 0;\n        this._lastY = 0;\n    }\n\n\n    /**\n     * Captures the pointer and resets the pointer tracker.\n     * @param event\n     *  The pointer down event.\n     * @param callback\n     *  The function to call on pointer movement.\n     */\n    public capture(event: PointerEvent, callback: (e: PointerEvent, t: PointerTracker) => void) {\n        this._originX = event.clientX;\n        this._originY = event.clientY;\n        this._lastX = this._originX;\n        this._lastY = this._originY;\n        this.target = event.target as HTMLElement;\n        this.target.setPointerCapture(event.pointerId);\n        this.target.onpointermove = (e) => {\n            this.update(e);\n            callback(e, this);\n        };\n    }\n\n    /**\n     * Updates the pointer tracker.\n     * @param event\n     *  The pointer move event.\n     */\n    private update(event: PointerEvent) {\n        this.deltaX = event.clientX - this._originX;\n        this.deltaY = event.clientY - this._originY;\n        this.movementX = event.clientX - this._lastX;\n        this.movementY = event.clientY - this._lastY;\n        this._lastX = event.clientX;\n        this._lastY = event.clientY;\n    }\n\n    /**\n     * Releases the current pointer.\n     * @param event\n     *  The pointer up event.\n     */\n    public release(event: PointerEvent) {\n        if(this.target !== null) {\n            this.target.releasePointerCapture(event.pointerId);\n            this.target.onpointermove = null;\n            this.target = null;\n        }\n    }\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../../DiagramElement\";\nimport { DiagramObjectModel } from \"../../DiagramModelTypes\";\nimport {\n    DiagramAnchorView,\n    DiagramAnchorableView\n} from \"./BaseViews\";\nimport { \n    AlignmentMask,\n    CursorMask,\n    HoverMask,\n    InheritAlignmentMask,\n    PositionSetByUserMask,\n    PriorityMask,\n    SelectMask\n} from \"../../Attributes\";\n\nexport abstract class DiagramObjectView {\n\n    /**\n     * The underlying model.\n     */\n    public el: DiagramObjectModel;\n\n    /**\n     * The object's (central) x coordinate.\n     */\n    public x: number;\n\n    /**\n     * The object's (central) y coordinate.\n     */\n    public y: number;\n\n    /**\n     * The object's parent.\n     */\n    public parent: DiagramObjectView | undefined;\n\n    /**\n     * The object's children.\n     */\n    public children: DiagramObjectView[]\n\n    /**\n     * The view's raster cache.\n     */\n    protected _rasterCache: RasterCache; \n\n\n    /**\n     * Creates a new {@link DiagramObjectView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DiagramObjectModel, rasterCache: RasterCache) {\n        this.el = el;\n        this.x = el.boundingBox.xMid;\n        this.y = el.boundingBox.yMid;\n        this.parent = undefined;\n        this.children = [];\n        this._rasterCache = rasterCache;\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Structure  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns this object and all child objects (in a breadth-first fashion).\n     * @param match\n     *  A predicate which is applied to each object. If the predicate returns\n     *  false, the object is not included in the enumeration.\n     * @returns\n     *  This object and all child objects.\n     */\n     public *getSubtree(\n        match?: (o: DiagramObjectView) => boolean\n     ): IterableIterator<DiagramObjectView> {\n        let visited = new Set<string>([this.el.id]);\n        let queue: DiagramObjectView[] = [this];\n        while(queue.length != 0) {\n            let obj = queue.shift()!;\n            // Yield object\n            if(!match || match(obj)) {\n                yield obj;\n            }\n            // Don't traverse anchors\n            if(obj instanceof DiagramAnchorView) {\n                continue;\n            }\n            // Enumerate children\n            for(let child of obj.children){\n                if(!visited.has(child.el.id)) {\n                    visited.add(child.el.id);\n                    queue.push(child);\n                }\n            }\n        }\n    }\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object to a specific coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n     public moveTo(x: number, y: number, attrs?: number) {\n        this.moveBy(\n            x - this.x,\n            y - this.y\n        );\n    }\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public moveBy(dx: number, dy: number, attrs?: number) {\n        // Move self\n        this.x += dx;\n        this.y += dy;\n        // Move non-anchored children\n        for(let obj of this.children) {\n            if(obj instanceof DiagramAnchorableView && obj.el.isAttached()) {\n                continue;\n            }\n            obj.moveBy(dx, dy);\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        if(!this.isVisible(vr)) {\n            return;\n        }\n        for(let obj of this.children) {\n            obj.renderTo(ctx, vr, dsx, dsy);\n        }\n    };\n\n    /**\n     * Renders the object's debug information to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     */\n    public renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\n        if(!this.isVisible(vr)) {\n            return;\n        }\n        // Configure canvas\n        for(let obj of this.children) {\n            obj.renderDebugTo(ctx, vr);\n        }\n        // Draw bounding box\n        let bb = this.el.boundingBox;\n        ctx.beginPath();\n        ctx.moveTo(bb.xMin + 0.5, bb.yMin + 0.5);\n        ctx.lineTo(bb.xMax - 0.5, bb.yMin + 0.5);\n        ctx.lineTo(bb.xMax - 0.5, bb.yMax - 0.5);\n        ctx.lineTo(bb.xMin + 0.5, bb.yMax - 0.5);\n        ctx.lineTo(bb.xMin + 0.5, bb.yMin + 0.5);\n        ctx.lineTo(bb.xMax - 0.5, bb.yMax - 0.5);\n        ctx.stroke();\n    }\n\n    /**\n     * Tests if the object overlaps the given viewport.\n     * @param viewport\n     *  The viewport.\n     * @returns\n     *  True if the object overlaps the viewport, false otherwise.\n     */\n    public isVisible(viewport: ViewportRegion) {\n        let { xMin, yMin, xMax, yMax } = this.el.boundingBox;\n        return (viewport.xMin <= xMax && viewport.xMax >= xMin) && \n               (viewport.yMin <= yMax && viewport.yMax >= yMin)\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  4. Model Synchronization  /////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Synchronizes the view with the underlying model.\n     * @returns\n     *  The view.\n     */\n    public updateView(): DiagramObjectView {\n        // Update children\n        let children = new Array<DiagramObjectView>(this.el.children.length);\n        for(let i = 0; i < children.length; i++) {\n            let id = this.el.children[i].id;\n            let obj = this.children.find(o => o.el.id === id);\n            // Update child\n            children[i] = obj ?? this.el.children[i].createView(this._rasterCache);\n            // Update child's parent\n            children[i].parent = this;\n            // Update child's view\n            children[i].updateView();\n        }\n        this.children = children;\n        // Update position\n        this.x = this.el.boundingBox.xMid;\n        this.y = this.el.boundingBox.yMid;\n        // Return\n        return this;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  5. Attribute Faking  //////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the object's attributes with the alignment altered.\n     * @param alignment\n     *  The alignment to use.\n     * @returns\n     *  The altered attributes.\n     */\n    public fakeAlignment(alignment: number): number {\n        return (this.el.attrs & ~AlignmentMask) | alignment;\n    }\n\n    /**\n     * Returns the object's attributes with the cursor altered.\n     * @param cursor\n     *  The cursor to use.\n     * @returns\n     *  The altered attributes.\n     */\n    public fakeCursor(cursor: number) {\n       return (this.el.attrs & ~CursorMask) | cursor;\n    }\n\n    /**\n     * Returns the object's attributes with the hover state altered.\n     * @param hover\n     *  The hover state to use.\n     * @returns\n     *  The altered attributes.\n     */\n    public fakeHover(hover: number) {\n        return (this.el.attrs & ~HoverMask) | hover;\n    }\n\n    /**\n     * Returns the object's attributes with the 'inherit alignment' attribute\n     * altered.\n     * @param inherit\n     *  The attribute to use.\n     * @returns\n     *  The altered attributes.\n     */\n    public fakeInheritAlignment(inherit: number) {\n        return (this.el.attrs & ~InheritAlignmentMask) | inherit;\n    }\n\n    /**\n     * Returns the object's attributes with the 'position set by user'\n     * attribute altered.\n     * @param positionSetByUser\n     *  The attribute to use.\n     * @returns\n     *  The altered attributes.\n     */\n    public fakePositionSetByUser(positionSetByUser: number) {\n        return (this.el.attrs & ~PositionSetByUserMask) | positionSetByUser;\n    }\n\n    /**\n     * Returns the object's attributes with the selection priority altered.\n     * @param priority\n     *  The selection priority to use.\n     * @returns\n     *  The altered attributes.\n     */\n    public fakePriority(priority: number) {\n        return (this.el.attrs & ~PriorityMask) | priority;\n    }\n\n    /**\n     * Returns the object's attributes with the selection state altered.\n     * @param select\n     *  The selection state to use.\n     * @returns\n     *  The altered attributes.\n     */\n    public fakeSelect(select: number) {\n        return (this.el.attrs & ~SelectMask) | select;\n    }\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramAnchorModel } from \"../../DiagramModelTypes\";\nimport {\n    DiagramAnchorableView,\n    DiagramObjectView\n} from \"./BaseViews\";\n\nexport abstract class DiagramAnchorView extends DiagramObjectView {\n\n    /**\n     * The underlying model.\n     */\n    public override el: DiagramAnchorModel;\n\n    /**\n     * The anchor's children.\n     */\n    public override children: DiagramAnchorableView[];\n\n\n    /**\n     * Creates a new {@link DiagramAnchorView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DiagramAnchorModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.children = [];\n        this.el = el;\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    \n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public override moveBy(dx: number, dy: number, attrs?: number) {\n        // Move self\n        this.x += dx;\n        this.y += dy;\n        // Move anchored children\n        for(let obj of this.children) {\n            if(!obj.el.isAttached(this.el)) {\n                console.warn(`'${ obj.el.id }' incorrectly attached to anchor.`);\n                continue;\n            }\n            obj.moveTo(this.x, this.y);\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Model Synchronization  /////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Synchronizes the view with the underlying model.\n     * \n     * NOTE:\n     * Anchors simply reference other objects in the tree. Anchors cannot spawn\n     * view objects on behalf of their children. Instead, the root of the tree\n     * will ensure that each anchor receives a reference to their children. Due\n     * to this limitation, anchor linkage cannot be updated independently.\n     * \n     * @returns\n     *  The view.\n     */\n    public override updateView(): DiagramAnchorView {\n        // Update position\n        this.x = this.el.boundingBox.xMid;\n        this.y = this.el.boundingBox.yMid;\n        return this;\n    }\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramAnchorableModel } from \"../../DiagramModelTypes\"\nimport { \n    DiagramAnchorView,\n    DiagramObjectView\n} from \"./BaseViews\";\n\nexport abstract class DiagramAnchorableView extends DiagramObjectView {\n\n    /**\n     * The underlying model.\n     */\n    public override el: DiagramAnchorableModel;\n\n    /**\n     * The anchorable's anchor.\n     */\n    public anchor: DiagramAnchorView | undefined;\n\n\n    /**\n     * Creates a new {@link DiagramAnchorableView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DiagramAnchorableModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramLineEndingModel } from \"../../DiagramModelTypes\";\nimport {\n    DiagramLineView,\n    DiagramAnchorableView\n} from \"./BaseViews\";\n\nexport abstract class DiagramLineEndingView extends DiagramAnchorableView {\n\n    /**\n     * The underlying model.\n     */\n    public override el: DiagramLineEndingModel;\n\n    /**\n     * The line ending's parent.\n     */\n    public override parent: DiagramLineView | undefined;\n\n\n    /**\n     * Creates a new {@link DiagramLineEndingView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DiagramLineEndingModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    \n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     * @param useSuper\n     *  If true, the object will use its inherited `moveBy()` function.\n     */\n    public override moveBy(dx: number, dy: number, attrs?: number, useSuper: boolean = false): void {\n        if(useSuper) {\n            super.moveBy(dx, dy, attrs);\n        } else {\n            this.parent?.moveChild(this.el.id, dx, dy, attrs);\n        }\n    }\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramLineHandleModel } from \"../../DiagramModelTypes\";\nimport {\n    DiagramLineView,\n    DiagramObjectView\n} from \"./BaseViews\";\n\nexport abstract class DiagramLineHandleView extends DiagramObjectView {\n\n    /**\n     * The underlying model.\n     */\n    public override el: DiagramLineHandleModel;\n\n    /**\n     * The line handle's parent.\n     */\n    public override parent: DiagramLineView | undefined;\n\n\n    /**\n     * Creates a new {@link DiagramLineHandleView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DiagramLineHandleModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     * @param useSuper\n     *  If true, the object will use its inherited `moveBy()` function.\n     */\n    public override moveBy(dx: number, dy: number, attrs?: number, useSuper: boolean = false): void {\n        if(useSuper) {\n            super.moveBy(dx, dy, attrs);\n        } else {\n            this.parent?.moveChild(this.el.id, dx, dy, attrs);\n        }\n    }\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramLineModel } from \"../../DiagramModelTypes\";\nimport {\n    DiagramObjectView,\n    DiagramLineEndingView,\n    DiagramLineHandleView\n} from \"./BaseViews\";\n\nexport abstract class DiagramLineView extends DiagramObjectView {\n\n    /**\n     * The underlying model.\n     */\n    public override el: DiagramLineModel;\n\n    /**\n     * The line's children.\n     */\n    public override children: DiagramLineObjectView[];\n\n    /**\n     * The line's source ending.\n     */\n    public get srcEnding(): DiagramLineEndingView {\n        return this.children.at(0) as DiagramLineEndingView;\n    }\n\n    /**\n     * The line's target ending.\n     */\n    public get trgEnding(): DiagramLineEndingView {\n        return this.children.at(-1) as DiagramLineEndingView;\n    }\n\n    \n    /**\n     * Creates a new {@link DiagramLineView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DiagramLineModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n        this.children = [];\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    \n    /**\n     * Moves one of the line's children relative to its current position. \n     * @param id\n     *  The id of the child.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public abstract moveChild(id: string, dx: number, dy: number, attrs?: number): void;\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ntype DiagramLineObjectView \n    = DiagramLineEndingView \n    | DiagramLineHandleView;\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../../DiagramElement\";\nimport { DiagramRootModel } from \"../../DiagramModelTypes\";\nimport {\n    DiagramAnchorView,\n    DiagramObjectView\n} from \"./BaseViews\";\n\nexport abstract class DiagramRootView extends DiagramObjectView {\n\n    /**\n     * The underlying model.\n     */\n    public override el: DiagramRootModel;\n\n    /**\n     * The root's internal object cache.\n     */\n    private _objectCache: Map<string, DiagramObjectView>;\n\n\n    /**\n     * Creates a new {@link DiagramRootView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DiagramRootModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n        this._objectCache = new Map();\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Renders the object's debug information to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     */\n    public override renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\n        ctx.save();\n        ctx.lineWidth = 1\n        ctx.fillStyle = \"#00ff00\";\n        ctx.strokeStyle = \"#ffffff\";\n        ctx.setLineDash([2, 2]);\n        super.renderDebugTo(ctx, vr);\n        ctx.restore();\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Model Synchronization  /////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Synchronizes the view with the underlying model.\n     * @returns\n     *  The view.\n     */\n    public override updateView(): DiagramRootView {\n        // Update root\n        super.updateView();\n        // Update cache\n        this._objectCache.clear();\n        for(let obj of this.getSubtree()) {\n            this._objectCache.set(obj.el.id, obj);\n        }\n        // Update anchors\n        for(let obj of this.el.anchorCache) {\n            let anchor = this.lookup<DiagramAnchorView>(obj.id)!;\n            anchor.children = new Array(obj.children.length);\n            for(let i = 0; i < anchor.children.length; i++) {\n                let child = obj.children[i]; \n                // Add object to anchor\n                anchor.children[i] = this.lookup(child.id)!;\n                // Add anchor to object\n                anchor.children[i].anchor = anchor;\n            }\n        }\n        return this;\n    }\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Object Lookup  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns an object from the diagram.\n     * @param id\n     *  The id of the object.\n     * @returns\n     *  The object or `undefined` if no object with that id exists.\n     */\n    public lookup<T extends DiagramObjectView>(id: string): T | undefined {\n        return this._objectCache.get(id) as T;\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { LineEndingPointModel } from \"../DiagramModelTypes\";\nimport { DiagramLineEndingView } from \"./BaseTypes/BaseViews\";\n\nexport class LineEndingPointView extends DiagramLineEndingView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: LineEndingPointModel;\n\n\n    /**\n     * Creates a new {@link LineEndingPointView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: LineEndingPointModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        \n        // Init\n        let { \n            radius,\n            fill_color,\n            stroke_color,\n            stroke_width\n        } = this.el.style;\n        \n        // Configure canvas\n        ctx.fillStyle = fill_color;\n        ctx.lineWidth = stroke_width;\n        ctx.strokeStyle = stroke_color;\n\n        // Draw ending\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, radius, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { LineHandlePointModel } from \"../DiagramModelTypes\";\nimport { DiagramLineHandleView } from \"./BaseTypes/BaseViews\";\n\nexport class LineHandlePointView extends DiagramLineHandleView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: LineHandlePointModel;\n\n\n    /**\n     * Creates a new {@link LineHandlePointView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: LineHandlePointModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n    \n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        \n        // Init\n        let { \n            radius,\n            fill_color,\n            stroke_color,\n            stroke_width\n        } = this.el.style;\n        \n        // Configure canvas\n        ctx.fillStyle = fill_color;\n        ctx.lineWidth = stroke_width;\n        ctx.strokeStyle = stroke_color;\n\n        // Stroke width offset\n        let wo = stroke_width % 2 ? 0.5 : 0;\n\n        // Draw handle\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, radius + wo, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n    \n    }\n\n}\n","import { drawArrowHead } from \"../Utilities\";\nimport { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { LineHorizontalElbowModel } from \"../DiagramModelTypes\";\nimport { \n    DiagramLineEndingView,\n    DiagramLineView\n} from \".\";\nimport { Select, SelectMask } from \"../Attributes\";\n\nexport class LineHorizontalElbowView extends DiagramLineView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: LineHorizontalElbowModel;\n\n\n    /**\n     * Creates a new {@link LineHorizontalElbowView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: LineHorizontalElbowModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves one of the line's children relative to its current position. \n     * @param id\n     *  The id of the child.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public moveChild(id: string, dx: number, dy: number, attrs?: number): void {\n        // Select child\n        let obj = this.children.find(o => o.el.id === id)!;\n        if(!obj)\n            return;\n        // Move ending\n        if(obj instanceof DiagramLineEndingView) {\n            obj.moveBy(dx, dy, undefined, true);\n        }\n        let [e1, h1, e2] = this.children;\n        // Move handle\n        let hdx = ((e1.x + e2.x) / 2) - h1.x,\n            hdy = ((e1.y + e2.y) / 2) - h1.y;\n        // attrs must ONLY override the child being moved, we \n        // can't override h1 unless we're explicitly moving h1\n        if(!h1.el.hasUserSetPosition(obj === h1 ? attrs : undefined)) {\n            h1.moveBy(hdx, 0, undefined, true);\n        } else if(obj === h1) {\n            h1.moveBy(dx, 0, undefined, true);\n        }\n        h1.moveBy(0, hdy, undefined, true);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        if(!this.isVisible(vr)) {\n            return;\n        }\n\n        // Init\n        let {\n            children: c\n        } = this;        \n        let {\n            cap_size: cs,\n            width,\n            color,\n            select_color\n        } = this.el.style;\n\n        // Configure line\n        ctx.lineWidth = width;\n        let lineColor;\n        switch(this.el.attrs & SelectMask) {\n            case Select.True:\n                lineColor = select_color;\n                break;\n            case Select.False:\n            default:\n                lineColor = color;\n                break;\n        }\n        ctx.fillStyle = lineColor;\n        ctx.strokeStyle = lineColor;\n\n        // Line width offset\n        let wo = width % 2 ? 0.5 : 0;\n        // End offset\n        let eo = Math.sign(c[2].x - c[1].x) * (cs >> 1);\n        \n        // Draw line\n        ctx.beginPath();\n        ctx.moveTo(c[0].x,      c[0].y + wo);\n        ctx.lineTo(c[1].x + wo, c[0].y + wo);\n        ctx.lineTo(c[1].x + wo, c[2].y + wo);\n        ctx.lineTo(c[2].x - eo, c[2].y + wo);\n        ctx.stroke();\n        \n        // Draw arrow head\n        drawArrowHead(\n            ctx, \n            c[1].x, c[2].y + wo, \n            c[2].x, c[2].y + wo, \n            cs\n        );\n        ctx.fill();\n\n        // Draw handles and ends\n        if(this.el.isSelected(attrs)) {\n            super.renderTo(ctx, vr, dsx, dsy);\n        }\n\n    }\n\n    /**\n     * Renders the object's debug information to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     */\n    public override renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\n        if(!this.isVisible(vr)) {\n            return;\n        }\n        let radius = 2;\n        let p = Math.PI * 2;\n        // Draw hitbox points\n        ctx.beginPath();\n        for(let hitbox of this.el.hitboxes) {\n            for(let i = 0; i < hitbox.length; i += 2) {\n                ctx.moveTo(hitbox[i] + radius, hitbox[i + 1]);\n                ctx.arc(hitbox[i], hitbox[i + 1], radius, 0, p);\n            }\n        }\n        ctx.fill();\n        // Draw bounding box\n        super.renderDebugTo(ctx, vr);\n    }\n\n}\n","import { drawArrowHead } from \"../Utilities\";\nimport { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { LineVerticalElbowModel } from \"../DiagramModelTypes\";\nimport { \n    DiagramLineEndingView,\n    DiagramLineView\n} from \".\";\nimport { Select, SelectMask } from \"../Attributes\";\n\nexport class LineVerticalElbowView extends DiagramLineView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: LineVerticalElbowModel;\n\n\n    /**\n     * Creates a new {@link LineVerticalElbowView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: LineVerticalElbowModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves one of the line's children relative to its current position. \n     * @param id\n     *  The id of the child.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public moveChild(id: string, dx: number, dy: number, attrs?: number): void {\n        // Select child\n        let obj = this.children.find(o => o.el.id === id)!;\n        if(!obj)\n            return;\n        // Move ending\n        if(obj instanceof DiagramLineEndingView) {\n            obj.moveBy(dx, dy, undefined, true);\n        }\n        let [e1, h1, e2] = this.children;\n        // Move handle\n        let hdx = ((e1.x + e2.x) / 2) - h1.x,\n            hdy = ((e1.y + e2.y) / 2) - h1.y;\n        // attrs must ONLY override the child being moved, we \n        // can't override h1 unless we're explicitly moving h1\n        if(!h1.el.hasUserSetPosition(obj === h1 ? attrs : undefined)) {\n            h1.moveBy(0, hdy, undefined, true);\n        } else if(obj === h1) {\n            h1.moveBy(0, dy, undefined, true);\n        }\n        h1.moveBy(hdx, 0, undefined, true);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        if(!this.isVisible(vr)) {\n            return;\n        }\n\n        // Init\n        let {\n            children: c\n        } = this;        \n        let {\n            cap_size: cs,\n            width,\n            color,\n            select_color\n        } = this.el.style;\n\n        // Configure line\n        ctx.lineWidth = width;\n        let lineColor;\n        switch(this.el.attrs & SelectMask) {            \n            case Select.True:\n                lineColor = select_color;\n                break;\n            case Select.False:\n            default:\n                lineColor = color;\n                break;\n        }\n        ctx.fillStyle = lineColor;\n        ctx.strokeStyle = lineColor;\n\n        // Line width offset\n        let wo = width % 2 ? 0.5 : 0;\n        // End offset\n        let eo = Math.sign(c[1].y - c[2].y) * (cs >> 1);\n        \n        // Draw line\n        ctx.beginPath();\n        ctx.moveTo(c[0].x + wo, c[0].y);\n        ctx.lineTo(c[0].x + wo, c[1].y + wo);\n        ctx.lineTo(c[2].x + wo, c[1].y + wo);\n        ctx.lineTo(c[2].x + wo, c[2].y + eo);\n        ctx.stroke();\n\n        // Draw arrow head\n        drawArrowHead(\n            ctx, \n            c[2].x + wo, c[1].y,\n            c[2].x + wo, c[2].y,\n            cs\n        );\n        ctx.fill();\n\n        // Draw handles and ends\n        if(this.el.isSelected(attrs)) {\n            super.renderTo(ctx, vr, dsx, dsy);\n        }\n\n    }\n\n    /**\n     * Renders the object's debug information to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     */\n    public override renderDebugTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion) {\n        if(!this.isVisible(vr)) {\n            return;\n        }\n        let radius = 2;\n        let p = Math.PI * 2;\n        // Draw hitbox points\n        ctx.beginPath();\n        for(let hitbox of this.el.hitboxes) {\n            for(let i = 0; i < hitbox.length; i += 2) {\n                ctx.moveTo(hitbox[i] + radius, hitbox[i + 1]);\n                ctx.arc(hitbox[i], hitbox[i + 1], radius, 0, p);\n            }\n        }\n        ctx.fill();\n        // Draw bounding box\n        super.renderDebugTo(ctx, vr);\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { AnchorPointModel } from \"../DiagramModelTypes\";\nimport { DiagramAnchorView } from \".\";\n\nexport class AnchorPointView extends DiagramAnchorView {\n\n    /**\n     * The underlying model.\n     */\n    public override el: AnchorPointModel;\n\n\n    /**\n     * Creates a new {@link AnchorPointView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: AnchorPointModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        // Only visible when hovered\n        if(!this.el.isHovered(attrs))\n            return;\n        ctx.fillStyle = this.el.style.color;\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.el.radius, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n}\n","import { drawRect } from \"../Utilities\";\nimport { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { DictionaryBlockModel } from \"../DiagramModelTypes\";\nimport { DiagramObjectView } from \".\";\n\nexport class DictionaryBlockView extends DiagramObjectView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: DictionaryBlockModel;\n\n    /**\n     * The block's top-left x coordinate.\n     */\n    public tlx: number;\n\n    /**\n     * The block's top-left y coordinate.\n     */\n    public tly: number;\n\n\n    /**\n     * Creates a new {@link DictionaryBlockView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: DictionaryBlockModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n        this.tlx = 0;\n        this.tly = 0;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public override moveBy(dx: number, dy: number, attrs?: number) {\n        super.moveBy(dx, dy);\n        // Move top left corner\n        this.tlx += dx;\n        this.tly += dy;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    \n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        if(!this.isVisible(vr)) {\n            return;\n        }\n\n        // Init\n        let { tlx: x, tly: y } = this;\n        let { \n            body, \n            head,\n            select_outline: so,\n            border_radius: br,\n        } = this.el.style;\n        let {\n            width: w,\n            height: h,\n            headerHeight: hh,\n            text\n        } = this.el.layout;\n        let isSplitBlock = hh !== h;\n\n        // Draw body\n        let bf, bs;\n        if(isSplitBlock) {\n            bf = body.fill_color\n            bs = body.stroke_color\n        } else {\n            bf = head.fill_color\n            bs = head.stroke_color\n        }\n        ctx.lineWidth = 1.1;\n        drawRect(ctx, x, y, w, h, br);\n        if(dsx | dsy) {\n            ctx.shadowOffsetX = dsx + (0.5 * vr.scale);\n            ctx.shadowOffsetY = dsy + (0.5 * vr.scale);\n            ctx.fillStyle = bf;\n            ctx.strokeStyle = bs;\n            ctx.fill();\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 0;\n            ctx.stroke();\n        } else {\n            ctx.fillStyle = bf;\n            ctx.strokeStyle = bs;\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        // Draw head\n        if(isSplitBlock) {\n            drawRect(ctx, x, y, w, hh, { tr: br, tl: br });\n            ctx.fillStyle = head.fill_color;\n            ctx.strokeStyle = head.stroke_color;\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        // Draw text\n        for(let set of text) {\n            ctx.font = set.font.css;\n            ctx.fillStyle = set.color;\n            for(let text of set.text) {\n                ctx.fillText(text.t, x + text.x, y + text.y)\n            }\n        }\n\n        if(this.el.isSelected(attrs)) {\n            \n            // Init\n            let { \n                color,\n                padding: p,\n                border_radius: br\n            } = so;\n            p += 1;\n\n            // Draw select border\n            drawRect(ctx, x - p, y - p, w + p*2, h + p*2, br, 1);\n            ctx.strokeStyle = color;\n            ctx.stroke();\n\n        } else if(this.el.isHovered(attrs)) {\n\n            // Init\n            let {\n                color,\n                size\n            } = this.el.style.anchor_markers;\n            \n            // Draw anchors\n            super.renderTo(ctx, vr, dsx, dsy);    \n\n            // Draw anchor markers\n            ctx.strokeStyle = color;\n            ctx.beginPath();\n            for(let o of this.children) {\n                ctx.moveTo(o.x - size, o.y - size);\n                ctx.lineTo(o.x + size, o.y + size);\n                ctx.moveTo(o.x + size, o.y - size);\n                ctx.lineTo(o.x - size, o.y + size);\n            }\n            ctx.stroke();\n        \n        }\n\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Model Synchronization  /////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Synchronizes the view with the underlying model.\n     * @returns\n     *  The view.\n     */\n    public override updateView(): DictionaryBlockView {\n        // Update view\n        super.updateView();\n        // Update top-left corner\n        this.tlx = this.el.boundingBox.xMin + this.el.layout.dx;\n        this.tly = this.el.boundingBox.yMin + this.el.layout.dy;\n        // Return\n        return this;\n    }\n\n}\n","import { drawRect } from \"../Utilities\";\nimport { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { BranchBlockModel } from \"../DiagramModelTypes\";\nimport { DiagramObjectView } from \".\";\n\nexport class BranchBlockView extends DiagramObjectView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: BranchBlockModel;\n\n    /**\n     * The block's top-left x coordinate.\n     */\n    public tlx: number;\n\n    /**\n     * The block's top-left y coordinate.\n     */\n    public tly: number;\n\n\n    /**\n     * Creates a new {@link BranchBlockView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: BranchBlockModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n        this.tlx = 0;\n        this.tly = 0;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public override moveBy(dx: number, dy: number, attrs?: number) {\n        super.moveBy(dx, dy);\n        // Move top left corner\n        this.tlx += dx;\n        this.tly += dy;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    \n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        if(!this.isVisible(vr)) {\n            return;\n        }\n\n        // Init\n        let { tlx: x, tly: y } = this;\n        let { \n            body, \n            head,\n            select_outline: so,\n            border_radius: br,\n        } = this.el.style;\n        let {\n            width: w,\n            height: h,\n            headerHeight: hh,\n            text,\n            lines\n        } = this.el.layout;\n\n        // Draw body\n        ctx.lineWidth = 1.1;\n        drawRect(ctx, x, y, w, h, br);\n        if(dsx | dsy) {\n            ctx.shadowOffsetX = dsx + (0.5 * vr.scale);\n            ctx.shadowOffsetY = dsy + (0.5 * vr.scale);\n            ctx.fillStyle = body.fill_color;\n            ctx.strokeStyle = body.stroke_color;\n            ctx.fill();\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 0;\n            ctx.stroke();\n        } else {\n            ctx.fillStyle = body.fill_color;\n            ctx.strokeStyle = body.stroke_color;\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        // Draw lines\n        for(let line of lines) {\n            ctx.moveTo(x + line.x0, y + line.y0);\n            ctx.lineTo(x + line.x1, y + line.y1);\n        }\n        ctx.stroke();\n\n        // Draw head\n        drawRect(ctx, x, y, w, hh, { tr: br, tl: br });\n        ctx.fillStyle = head.fill_color;\n        ctx.strokeStyle = head.stroke_color;\n        ctx.fill();\n        ctx.stroke();\n\n        // Draw text\n        for(let set of text) {\n            ctx.font = set.font.css;\n            ctx.fillStyle = set.color;\n            for(let text of set.text) {\n                ctx.fillText(text.t, x + text.x, y + text.y)\n            }\n        }\n\n        if(this.el.isSelected(attrs)) {\n            \n            // Init\n            let { \n                color,\n                padding: p,\n                border_radius: br\n            } = so;\n            p += 1;\n\n            // Draw select border\n            drawRect(ctx, x - p, y - p, w + p*2, h + p*2, br, 1);\n            ctx.strokeStyle = color;\n            ctx.stroke();\n\n        } else if(this.el.isHovered(attrs)) {\n\n            // Init\n            let {\n                color,\n                size\n            } = this.el.style.anchor_markers;\n            \n            // Draw anchors\n            super.renderTo(ctx, vr, dsx, dsy);    \n\n            // Draw anchor markers\n            ctx.strokeStyle = color;\n            ctx.beginPath();\n            for(let o of this.children) {\n                ctx.moveTo(o.x - size, o.y - size);\n                ctx.lineTo(o.x + size, o.y + size);\n                ctx.moveTo(o.x + size, o.y - size);\n                ctx.lineTo(o.x - size, o.y + size);\n            }\n            ctx.stroke();\n        \n        }\n\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Model Synchronization  /////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Synchronizes the view with the underlying model.\n     * @returns\n     *  The view.\n     */\n    public override updateView(): BranchBlockView {\n        // Update view\n        super.updateView();\n        // Update top-left corner\n        this.tlx = this.el.boundingBox.xMin + this.el.layout.dx;\n        this.tly = this.el.boundingBox.yMin + this.el.layout.dy;\n        // Return\n        return this;\n    }\n\n}\n","import { drawRect } from \"../Utilities\";\nimport { RasterCache, ViewportRegion } from \"../DiagramElement\";\nimport { TextBlockModel } from \"../DiagramModelTypes\";\nimport { DiagramObjectView } from \".\";\n\nexport class TextBlockView extends DiagramObjectView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: TextBlockModel;\n\n    /**\n     * The block's top-left x coordinate.\n     */\n    public tlx: number;\n\n    /**\n     * The block's top-left y coordinate.\n     */\n    public tly: number;\n\n\n    /**\n     * Creates a new {@link DictionaryBlockView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: TextBlockModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n        this.tlx = 0;\n        this.tly = 0;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param attrs\n     *  If specified, this set of attributes will override the object's\n     *  underlying attributes.\n     */\n    public override moveBy(dx: number, dy: number, attrs?: number) {\n        super.moveBy(dx, dy);\n        // Move top left corner\n        this.tlx += dx;\n        this.tly += dy;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    \n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: 0)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: 0)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = 0, dsy: number = 0, attrs?: number\n    ) { \n        if(!this.isVisible(vr)) {\n            return;\n        }\n\n        // Init\n        let { tlx: x, tly: y } = this;\n        let {\n            text,\n            fill_color,\n            stroke_color,\n            select_outline: so,\n            border_radius: br,\n        } = this.el.style;\n        let {\n            width: w,\n            height: h,\n            text: placements\n        } = this.el.layout;\n\n        // Draw body\n        ctx.lineWidth = 1.1;\n        if(dsx | dsy){\n            drawRect(ctx, x, y, w, h, br);\n            ctx.shadowOffsetX = dsx + (0.5 * vr.scale);\n            ctx.shadowOffsetY = dsy + (0.5 * vr.scale);\n            ctx.fillStyle = fill_color;\n            ctx.strokeStyle = stroke_color;\n            ctx.fill();\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 0;\n            ctx.stroke();\n        } else {\n            drawRect(ctx, x, y, w, h, br);\n            ctx.fillStyle = fill_color;\n            ctx.strokeStyle = stroke_color;\n            ctx.fill();\n            ctx.stroke();\n        }\n\n        // Draw text\n        ctx.font = text.font.css;\n        ctx.fillStyle = text.color;\n        for(let p of placements) {\n            ctx.fillText(p.t, x + p.x, y + p.y)\n        }\n\n        if(this.el.isSelected(attrs)) {\n            \n            // Init\n            let { \n                color,\n                padding: p,\n                border_radius: br\n            } = so;\n            p += 1;\n\n            // Draw select border\n            drawRect(ctx, x - p, y - p, w + p*2, h + p*2, br, 1);\n            ctx.strokeStyle = color;\n            ctx.stroke();\n\n        } else if(this.el.isHovered(attrs)) {\n\n            // Init\n            let {\n                color,\n                size\n            } = this.el.style.anchor_markers;\n            \n            // Draw anchors\n            super.renderTo(ctx, vr, dsx, dsy);    \n\n            // Draw anchor markers\n            ctx.strokeStyle = color;\n            ctx.beginPath();\n            for(let o of this.children) {\n                ctx.moveTo(o.x - size, o.y - size);\n                ctx.lineTo(o.x + size, o.y + size);\n                ctx.moveTo(o.x + size, o.y - size);\n                ctx.lineTo(o.x - size, o.y + size);\n            }\n            ctx.stroke();\n        \n        }\n\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Model Synchronization  /////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Synchronizes the view with the underlying model.\n     * @returns\n     *  The view.\n     */\n    public override updateView(): TextBlockView {\n        // Update view\n        super.updateView();\n        // Update top-left corner\n        this.tlx = this.el.boundingBox.xMin + this.el.layout.dx;\n        this.tly = this.el.boundingBox.yMin + this.el.layout.dy;\n        // Return\n        return this;\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { ViewportRegion } from \"../DiagramElement\";\nimport { PageModel } from \"../DiagramModelTypes\";\nimport { \n    DiagramObjectView,\n    DiagramRootView\n} from \".\";\n\nexport class PageView extends DiagramRootView {\n    \n    /**\n     * The underlying model.\n     */\n    public override el: PageModel;    \n    \n    /**\n     * The page's grid pattern.\n     */\n    private _gridPattern: CanvasPattern;\n\n    /**\n     * The page's current selection.\n     */\n    public get selects(): DiagramObjectView[] {\n        return [...this.getSubtree(o => o.el.isSelected())];\n    }\n\n\n    /**\n     * Creates a new {@link PageView}.\n     * @param el\n     *  The underlying model.\n     * @param rasterCache\n     *  The view's raster cache.\n     */\n    constructor(el: PageModel, rasterCache: RasterCache) {\n        super(el, rasterCache);\n        this.el = el;\n        // Create grid pattern\n        let { \n            grid_color: gc, background_color: bc\n        } = this.el.style;\n        this._gridPattern = this.createGridPattern(\n            ...this.el.grid, bc, gc\n        );\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Render  ////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Renders the page surface to a context.\n     * @param grid\n     *  [true]\n     *   Show the grid.\n     *  [false]\n     *   Hide the grid.\n     */\n    public renderPageSurfaceTo(ctx: CanvasRenderingContext2D, vr: ViewportRegion, grid: boolean) {\n        // Draw page\n        ctx.fillStyle = grid ? this._gridPattern : this.el.style.background_color;\n        ctx.fillRect(\n            vr.xMin,  vr.yMin,\n            vr.xMax - vr.xMin,\n            vr.yMax - vr.yMin\n        );\n    }\n\n    /**\n     * Renders the object to a context.\n     * @param ctx\n     *  The context to render to.\n     * @param vr\n     *  The context's viewport.\n     * @param dsx\n     *  The drop shadow's x-offset.\n     *  (Default: The page's styled x-offset)\n     * @param dsy\n     *  The drop shadow's y-offset.\n     *  (Default: The page's styled y-offset)\n     * @param attrs\n     *  If specified, these attributes will override the object's underlying\n     *  attributes.\n     */\n    public override renderTo(\n        ctx: CanvasRenderingContext2D, vr: ViewportRegion,\n        dsx: number = this.el.style.drop_shadow.offset[0], \n        dsy: number = this.el.style.drop_shadow.offset[1],\n        attrs?: number\n    ) { \n        // Configure drop shadow\n        ctx.shadowColor = this.el.style.drop_shadow.color;\n        // Draw contents\n        super.renderTo(ctx, vr, dsx * vr.scale, dsy * vr.scale);\n    }\n\n    /**\n     * Generates a grid canvas pattern.\n     * @param gridX\n     *  The grid size on the x-axis.\n     * @param gridY\n     *  The grid size on the y-axis.\n     * @param fillColor\n     *  The background color.\n     * @param strokeColor\n     *  The line color.\n     * @returns\n     *  The grid canvas pattern centered on the origin.\n     */\n    private createGridPattern(gridX: number, gridY: number, fillColor: string, strokeColor: string): CanvasPattern {\n        let can = document.createElement(\"canvas\");\n        let ctx = can.getContext(\"2d\", { alpha: false })!;\n        can.width = gridX;\n        can.height = gridY;\n        ctx.fillStyle = fillColor;\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = strokeColor;\n        ctx.fillRect(0, 0, gridX, gridY);\n        ctx.moveTo(0, 0);\n        ctx.lineTo(0, gridY);\n        ctx.lineTo(gridX, gridY);\n        ctx.stroke();\n        let ptr = ctx.createPattern(can, \"repeat\")!;\n        ptr.setTransform(new DOMMatrix().translate(0, 1));\n        return ptr;\n    }\n\n}\n","export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./DateTimeField.vue?vue&type=style&index=0&id=18405380&scoped=true&lang=css\"","import { \n    SerializedAnchorPointStyle,\n    SerializedBranchBlockStyle,\n    SerializedDictionaryBlockStyle,\n    SerializedLineEndingPointStyle,\n    SerializedLineHandlePointStyle,\n    SerializedLineStyle,\n    SerializedTextBlockStyle,\n    SerializedPageStyle\n} from \"..\";\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  1. Colors  ////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport const Colors = {\n    Blue   : { fill_color: \"#637bc9\", stroke_color: \"#708ce6\" },\n    Orange : { fill_color: \"#c26130\", stroke_color: \"#e57339\" },\n    Green  : { fill_color: \"#2a9642\", stroke_color: \"#32b34e\" },\n    Red    : { fill_color: \"#c94040\", stroke_color: \"#dd5050\" },\n    Gray   : { fill_color: \"#737373\", stroke_color: \"#8c8c8c\" }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Block Diagram Theme  ///////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nclass BlockDiagramTheme {\n\n    /**\n     * The theme definition.\n     */\n    private readonly _theme: Theme\n\n    \n    /**\n     * Creates a new {@link Theme}.\n     * @param theme\n     *  The theme definition.\n     */\n    public constructor(theme: Theme) {\n        this._theme = theme;\n    }\n\n\n    /**\n     * Returns the anchor point style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The anchor point style.\n     */\n    public AnchorPoint(\n        style: DeepPartial<SerializedAnchorPointStyle> = {}\n    ): SerializedAnchorPointStyle {\n        return this.merge(style, structuredClone(this._theme.anchor));\n    }\n\n    /**\n     * Returns the branch block style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The branch block style.\n     */\n    public BranchBlock(\n        style: DeepPartial<SerializedBranchBlockStyle> = {}\n    ): SerializedBranchBlockStyle {\n        return this.merge(style, structuredClone(this._theme.branch));\n    }\n\n    /**\n     * Returns the dictionary block style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The dictionary block style.\n     */\n    public DictionaryBlock(\n        style: DeepPartial<SerializedDictionaryBlockStyle> = {}\n    ): SerializedDictionaryBlockStyle {\n        return this.merge(style, structuredClone(this._theme.dictionary));\n    }\n\n    /**\n     * Returns the line style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The line style.\n     */\n    public Line(\n        style: DeepPartial<SerializedLineStyle> = {}\n    ): SerializedLineStyle {\n        return this.merge(style, structuredClone(this._theme.line));\n    }\n\n    /**\n     * Returns the line ending style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The line ending style.\n     */\n    public LineEnding(\n        style: DeepPartial<SerializedLineEndingPointStyle> = {}\n    ): SerializedLineEndingPointStyle {\n        return this.merge(style, structuredClone(this._theme.lineEnding));\n    }\n\n    /**\n     * Returns the line handle style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The line handle style.\n     */\n    public LineHandle(\n        style: DeepPartial<SerializedLineHandlePointStyle> = {}\n    ): SerializedLineHandlePointStyle {\n        return this.merge(style, structuredClone(this._theme.lineHandle));\n    }\n\n    /**\n     * Returns the text block style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The text block style.\n     */\n    public TextBlock(\n        style: DeepPartial<SerializedTextBlockStyle> = {}\n    ): SerializedTextBlockStyle {\n        return this.merge(style, structuredClone(this._theme.text));\n    }\n\n    /**\n     * Returns the page style.\n     * @param style\n     *  The style parameters.\n     *  (Default: {}) \n     * @returns\n     *  The page style.\n     */\n    public Page(\n        style: DeepPartial<SerializedPageStyle> = {}\n    ): SerializedPageStyle {\n        return this.merge(style, structuredClone(this._theme.page));\n    }\n\n    /**\n     * Merges object `src` into `dst`.\n     * @param src\n     *  The source object.\n     * @param dst\n     *  The destination object.\n     * @returns\n     *  The destination object.\n     */\n    private merge<T>(src: T, dst: T) {\n        for(let key in src) {\n            if(!(key in dst)) {\n                throw new Error(\"Objects do not overlap.\");\n            }\n            if(typeof src[key] !== typeof dst[key]) {\n                throw new Error(`'${ key }' has mismatching types.`);\n            }\n\n            if(typeof src[key] === \"object\") {\n                this.merge(src[key], dst[key]);\n            } else {\n                dst[key] = src[key];\n            }\n        }\n        return dst;\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. Themes  ////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Theme definition.\n */\ntype Theme = {\n    anchor: SerializedAnchorPointStyle,\n    branch: SerializedBranchBlockStyle,\n    dictionary: SerializedDictionaryBlockStyle,\n    line: SerializedLineStyle,\n    lineEnding: SerializedLineEndingPointStyle,\n    lineHandle: SerializedLineHandlePointStyle,\n    text: SerializedTextBlockStyle,\n    page: SerializedPageStyle,\n}\n\n/**\n * Dark Theme\n */\nexport const DarkTheme = new BlockDiagramTheme({\n\n    anchor: {\n        color: \"rgba(255, 255, 255, 0.25)\"\n    },\n\n    branch: {\n        max_width: 320,\n        head: {\n            fill_color: \"#000\",\n            stroke_color: \"#000\",\n            one_title: {\n                title: {\n                    font: { family: \"Inter\", size: \"10.5pt\", weight: 800 },\n                    color: \"#d8d8d8\"\n                }\n            },\n            two_title: {\n                title: {\n                    font: { family: \"Inter\", size: \"8pt\", weight: 600 },\n                    color: \"#d8d8d8\",\n                    padding: 8\n                },\n                subtitle:  {\n                    font: { family: \"Inter\", size: \"13pt\", weight: 800 },\n                    color: \"#d8d8d8\",\n                    line_height: 23\n                }\n            },\n            vertical_padding: 14\n        },\n        body: {\n            fill_color: \"#1f1f1f\",\n            stroke_color: \"#383838\",\n            field_name: {\n                font: { family: \"Inter\", size: \"8pt\", weight: 600 },\n                color: \"#b3b3b3\",\n                padding: 12\n            },\n            field_value: {\n                font: { family: \"Inter\", size: \"10.5pt\" },\n                color: \"#bfbfbf\",\n                line_height: 20,\n                padding: 22\n            },\n            vertical_padding: 18\n        },\n        branch: {\n            font: { family: \"Inter\", size: \"10.5pt\" },\n            color: \"#bfbfbf\",\n            vertical_padding: 12,\n            horizontal_padding: 30\n        },\n        select_outline: {\n            color: \"#e6d845\",\n            padding: 4,\n            border_radius: 9\n        },\n        anchor_markers: {\n            color: \"#ffffff\",\n            size: 3\n        },\n        border_radius: 5,\n        horizontal_padding: 20\n    },\n\n    dictionary: {\n        max_width: 320,\n        head: {\n            fill_color: \"#000\",\n            stroke_color: \"#000\",\n            one_title: {\n                title: {\n                    font: { family: \"Inter\", size: \"10.5pt\", weight: 800 },\n                    color: \"#d8d8d8\"\n                }\n            },\n            two_title: {\n                title: {\n                    font: { family: \"Inter\", size: \"8pt\", weight: 600 },\n                    color: \"#d8d8d8\",\n                    padding: 8\n                },\n                subtitle:  {\n                    font: { family: \"Inter\", size: \"13pt\", weight: 800 },\n                    color: \"#d8d8d8\",\n                    line_height: 23\n                }\n            },\n            vertical_padding: 14\n        },\n        body: {\n            fill_color: \"#1f1f1f\",\n            stroke_color: \"#383838\",\n            field_name: {\n                font: { family: \"Inter\", size: \"8pt\", weight: 600 },\n                color: \"#b3b3b3\",\n                padding: 12\n            },\n            field_value: {\n                font: { family: \"Inter\", size: \"10.5pt\" },\n                color: \"#bfbfbf\",\n                line_height: 20,\n                padding: 22\n            },\n            vertical_padding: 18\n        },\n        select_outline: {\n            color: \"#e6d845\",\n            padding: 4,\n            border_radius: 9\n        },\n        anchor_markers: {\n            color: \"#ffffff\",\n            size: 3\n        },\n        border_radius: 5,\n        horizontal_padding: 20\n    },\n\n    line: {\n        width: 5,\n        cap_size: 16,\n        color: \"#646464\",\n        select_color: \"#646464\"\n    },\n    \n    lineEnding: {\n        radius: 6,\n        fill_color: \"#fedb22\",\n        stroke_color: \"#141414\",\n        stroke_width: 1.5\n    },\n\n    lineHandle: {\n        radius: 6,\n        fill_color: \"#fedb22\",\n        stroke_color: \"#141414\",\n        stroke_width: 1.5\n    },\n\n    text: {\n        max_width: 320,\n        fill_color: \"#000\",\n        stroke_color: \"#000\",\n        text: {\n            font: { family: \"Inter\", size: \"14pt\", weight: 800 },\n            color: \"#d8d8d8\",\n            line_height: 24\n        },\n        border_radius: 13,\n        select_outline: {\n            color: \"#e6d845\",\n            padding: 4,\n            border_radius: 19\n        },\n        anchor_markers: {\n            color: \"#ffffff\",\n            size: 3\n        },\n        vertical_padding: 18,\n        horizontal_padding: 20\n    },\n\n    page: {\n        grid_color: \"#1d1d1d\",\n        background_color: \"#141414\",\n        drop_shadow: {\n            color: \"rgba(0,0,0,.4)\",\n            offset: [3, 3]\n        }\n    },\n    \n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  4. Type Helpers  //////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Recursive version of Partial<T>.\n */\ntype DeepPartial<T> = T extends object ? {\n    [P in keyof T]?: DeepPartial<T[P]>;\n} : T;\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./AccordionPane.vue?vue&type=style&index=0&id=22255fa2&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./HotkeyBox.vue?vue&type=style&index=0&id=5e99f3da&scoped=true&lang=css\"","import { Crypto } from \"../../Utilities/Crypto\";\nimport { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramObjectView } from \"../../DiagramViewTypes\";\nimport { \n    DiagramAnchorableModel,\n    DiagramAnchorModel\n} from \"./BaseModels\";\nimport {\n    RootProperty\n} from \"../../Property\";\nimport { \n    DiagramFactory,\n    DiagramObjectExport,\n    DiagramObjectValues,\n    ObjectTemplate,\n    SemanticRole\n} from \"../../DiagramFactory\";\nimport {\n    Alignment, AlignmentMask, Cursor, CursorMask, Hover, HoverMask,\n    InheritAlignmentMask, InheritAlignment, PositionSetByUser,\n    PositionSetByUserMask, Priority, PriorityMask, Select, SelectMask,\n    SemanticRoleMask     \n} from \"../../Attributes\";\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  1. Diagram Object Model  //////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport abstract class DiagramObjectModel {\n\n    /**\n     * The object's id.\n     */\n    public readonly id: string;\n\n    /**\n     * The object's attributes.\n     */\n    public attrs: number;\n\n    /**\n     * The object's parent.\n     */\n    public parent: DiagramObjectModel | undefined;\n\n     /**\n      * The object's children.\n      */\n    public readonly children: DiagramObjectModel[];\n\n    /**\n     * The object's properties.\n     */\n    public readonly props: RootProperty;\n\n    /**\n     * The object's diagram factory.\n     */\n    public readonly factory: DiagramFactory;\n\n    /**\n     * The template the object was configured with.\n     */\n    public readonly template: ObjectTemplate;\n\n    /**\n     * The object's bounding box.\n     */\n    public readonly boundingBox: BoundingBox;\n\n    /**\n     * The object's root.\n     */\n    public get root(): DiagramObjectModel {\n        let owner = this as DiagramObjectModel;\n        while(owner.parent) {\n            owner = owner.parent;\n        }\n        return owner;\n    }\n\n    \n    /**\n     * Creates a new {@link DiagramObjectModel}.\n     * @param factory\n     *  The object's diagram factory.\n     * @param template\n     *  The object's template.\n     * @param values\n     *  The object's values.\n     */\n    constructor(\n        factory: DiagramFactory, \n        template: ObjectTemplate,\n        values?: DiagramObjectValues\n    ) {\n        this.id = values?.id ?? Crypto.randomUUID();\n        this.attrs = values?.attrs ?? PositionSetByUser.False;\n        this.setAlignment(Alignment.Free);\n        this.setCursor(Cursor.Default);\n        this.setInheritAlignment(InheritAlignment.True);\n        this.setSemanticRole(SemanticRole.None);\n        this.children = [];\n        this.factory = factory;\n        this.template = template;\n        this.boundingBox = new BoundingBox();\n        this.boundingBox.xMid = values?.x ?? 0;\n        this.boundingBox.yMid = values?.y ?? 0;\n        // Value configuration\n        this.props = new RootProperty(\n            this, template?.properties ?? {}, values?.properties\n        );\n        if(values?.children) {\n            for(let i = 0; i < values.children.length; i++) {\n                this.addChild(values.children[i], i, false);\n            }\n        }\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Structure  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns this object and all child objects (in a breadth-first fashion).\n     * @param match\n     *  A predicate which is applied to each object. If the predicate returns\n     *  false, the object is not included in the enumeration.\n     * @returns\n     *  This object and all child objects.\n     */\n    public *getSubtree(\n        match?: (o: DiagramObjectModel) => boolean\n    ): IterableIterator<DiagramObjectModel> {\n        let visited = new Set<string>([this.id]);\n        let queue: DiagramObjectModel[] = [this];\n        while(queue.length != 0) {\n            let obj = queue.shift()!;\n            // Yield object\n            if(!match || match(obj)) {\n                yield obj;\n            }\n            // Don't traverse anchors\n            if(obj instanceof DiagramAnchorModel) {\n                continue;\n            }\n            // Enumerate children\n            for(let child of obj.children){\n                if(!visited.has(child.id)) {\n                    visited.add(child.id);\n                    queue.push(child);\n                }\n            }\n        }\n    }\n\n    /**\n     * Adds a child object.\n     * @param obj\n     *  The object to add.\n     * @param index\n     *  The child object's location in the array.\n     *  (Default: End of the array)\n     * @param update\n     *  If the layout should be updated.\n     *  (Default: true)\n     */\n    public addChild(\n        obj: DiagramObjectModel,\n        index: number = this.children.length,\n        update: boolean = true,\n    ) {\n        // Ensure it isn't already added\n        if(this.children.indexOf(obj) !== -1) {\n            throw new DiagramObjectModelError(\n                `Object already has a child with the id '${ obj.id }'.`, this\n            )\n        }\n        // Set object's parent\n        obj.parent = this;\n        // Add object to children\n        this.children.splice(index, 0, obj);\n        // Update layout\n        if(update) {\n            this.updateLayout(LayoutUpdateReason.ChildAdded);\n        }\n    }\n\n    /**\n     * Removes a child object.\n     * @param obj\n     *  The object to remove.\n     * @param update\n     *  If the layout should be updated.\n     *  (Default: true)\n     * @param safely\n     *  If the object should be checked for external attachments. Ordinarily,\n     *  all external attachments should be removed before removing an object to\n     *  ensure references to the object aren't kept elsewhere. However, when \n     *  executing a mass removal, removing ALL external attachments may not be\n     *  needed or wanted. Only disable this if you know what you're doing. \n     *  (Default: true)\n     */\n    public removeChild(obj: DiagramObjectModel, update: boolean = true, safely: boolean = true) {\n        let i = this.children.indexOf(obj);\n        if(i === -1) {\n            throw new DiagramObjectModelError(\n                `'${ obj.id }' is not a child of '${ this.id }'.`, obj\n            );\n        }\n        // Check for external attachments\n        if(safely && obj.hasExternalAttachments()) {\n            throw new DiagramObjectModelError(\n                `'${ obj.id }' still maintains external attachments.`, obj\n            );\n        }\n        // Clear object's parent\n        obj.parent = undefined;\n        // Remove object from children\n        this.children.splice(i, 1);\n        // Update layout\n        if(update) {\n            this.updateLayout(LayoutUpdateReason.ChildDeleted);\n        }\n    }\n\n    /**\n     * Reorders a child object.\n     * @param id\n     *  The id of the object.\n     * @param index\n     *  The object's new location.\n     */\n    public reorderChild(id: string, index: number) {\n        let i = this.children.findIndex(o => o.id === id);\n        let obj = this.children[i];\n        if(!obj) {\n            throw new DiagramObjectModelError(\n                `Object has no child with the id '${ id }'.`\n            );\n        }\n        // Remove child\n        this.children.splice(i, 1);\n        // Reinsert child\n        this.children.splice(index, 0, obj);\n    }\n\n    /**\n     * Tests if the object has any external attachments.\n     * @returns\n     *  True if the object has external attachments, false otherwise.\n     */\n    protected hasExternalAttachments(): boolean {\n        // Compile list of anchors and anchor-ables\n        let map = new Map<string, DiagramObjectModel>();\n        for(let obj of this.getSubtree()) {\n            if(\n                obj instanceof DiagramAnchorModel ||\n                obj instanceof DiagramAnchorableModel\n            ) {\n                map.set(obj.id, obj);\n            }\n        }\n        // Look for any dependencies that can't be found in the list\n        for(let obj of map.values()) {\n            if(obj instanceof DiagramAnchorableModel) {\n                if(obj.isAttached() && !map.has(obj.anchor!.id))\n                    return true;\n                continue;\n            }\n            if(obj instanceof DiagramAnchorModel) {\n                for(let c of obj.children) {\n                    if(!map.has(c.id))\n                        return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns the object's location in its parent.\n     * @returns\n     *  The object's location, -1 if it doesn't have a parent.\n     */\n    public getIndexInParent() {\n        return this.parent?.children.indexOf(this) ?? -1;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        let object = undefined;\n        let select = undefined;\n        for(let i = this.children.length - 1; 0 <= i; i--) {\n            let child = this.children[i];\n            if(child instanceof DiagramAnchorableModel && child.isAttached()) {\n                // If child is attached to an anchor, selection is decided by anchor\n                continue;\n            }\n            select = child.getObjectAt(x, y);\n            if(select && (!object || select.hasHigherPriorityThan(object))) {\n                object = select;\n                if(object.getPriority() === Priority.High) {\n                    break;\n                }\n            }\n        }\n        return object;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object to a specific coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public moveTo(x: number, y: number, updateParent: boolean = true) {\n        this.moveBy(\n            x - this.boundingBox.xMid,\n            y - this.boundingBox.yMid,\n            updateParent\n        );\n    }\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public moveBy(dx: number, dy: number, updateParent: boolean = true) {\n        // Move self\n        this.boundingBox.xMin += dx;\n        this.boundingBox.xMid += dx;\n        this.boundingBox.xMax += dx;\n        this.boundingBox.yMin += dy;\n        this.boundingBox.yMid += dy;\n        this.boundingBox.yMax += dy;\n        // Move non-anchored children\n        let atBaseOfMovement = true;\n        for(let obj of this.children) {\n            if(obj instanceof DiagramAnchorableModel && obj.isAttached()) {\n                continue;\n            }\n            atBaseOfMovement = false;\n            obj.moveBy(dx, dy);\n        }\n        // Update layout\n        if(atBaseOfMovement) {\n            this.updateLayout(LayoutUpdateReason.Movement, updateParent);\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  4. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Completely recalculates the object's layout from the ground up.\n     */\n    public recalculateLayout() {\n        let atBaseOfLayout = true;\n        for(let obj of this.children) {\n            atBaseOfLayout = false;\n            obj.recalculateLayout();\n        }\n        if(atBaseOfLayout){\n            this.updateLayout(LayoutUpdateReason.Initialization);\n        }\n    }\n\n    /**\n     * Updates the object's alignment and bounding box.\n     * @param reasons\n     *  The reasons the layout was updated. \n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public updateLayout(reasons: number, updateParent: boolean = true) {\n        let bb = this.boundingBox;\n        // Reset bounding box\n        bb.xMin = Infinity;\n        bb.yMin = Infinity;\n        bb.xMax = -Infinity;\n        bb.yMax = -Infinity;\n        // Reset alignment\n        let align = Alignment.Free;\n        // Update bounding box\n        for(let obj of this.children) {\n            bb.xMin = Math.min(bb.xMin, obj.boundingBox.xMin);\n            bb.yMin = Math.min(bb.yMin, obj.boundingBox.yMin);\n            bb.xMax = Math.max(bb.xMax, obj.boundingBox.xMax);\n            bb.yMax = Math.max(bb.yMax, obj.boundingBox.yMax);\n            align = Math.max(align, obj.getAlignment());\n        }\n        // Update center\n        bb.xMid = Math.floor((bb.xMin + bb.xMax) / 2);\n        bb.yMid = Math.floor((bb.yMin + bb.yMax) / 2);\n        // Update alignment\n        if(this.isAlignmentInherited()) {\n            this.setAlignment(align);\n        }\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public abstract createView(cache: RasterCache): DiagramObjectView;\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  5. Attribute Getters  /////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the object's alignment.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  The object's alignment.\n     */\n    public getAlignment(attrs: number = this.attrs): number {\n        return attrs & AlignmentMask\n    }\n\n    /**\n     * Returns the object's cursor.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  The object's cursor.\n     */\n    public getCursor(attrs: number = this.attrs): number {\n        return attrs & CursorMask;\n    }\n\n    /**\n     * Tests if the object is hovered.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  True if the object is hovered, false otherwise.\n     */\n    public isHovered(attrs: number = this.attrs): boolean {\n        return (attrs & HoverMask) !== Hover.Off;\n    }\n\n    /**\n     * Tests if the object is hovered or selected.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  True if the object is either hovered or selected, false otherwise.\n     */\n    public isHoveredOrSelected(attrs: number = this.attrs): boolean {\n        return 0 < (attrs & (SelectMask | HoverMask));\n    }\n    \n    /**\n     * Test if the object inherits alignment from it's children.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @return\n     *  True if the object inherits alignment, false otherwise.\n     */\n    public isAlignmentInherited(attrs: number = this.attrs): boolean {\n        return (attrs & InheritAlignmentMask) === InheritAlignment.True;\n    }\n\n    /**\n     * Tests if the user has explicitly set the object's position.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  True if the user has set the object's position, false otherwise.\n     */\n    public hasUserSetPosition(attrs: number = this.attrs): boolean {\n        return (attrs & PositionSetByUserMask) === PositionSetByUser.True;\n    }\n\n    /**\n     * Returns the object's 'position set by user' attribute. \n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  The object's 'position set by user' attribute.\n     */\n    public getPositionSetByUser(attrs: number = this.attrs): number {\n        return attrs & PositionSetByUserMask\n    }\n\n    /**\n     * Returns the object's selection priority.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  The object's selection priority;\n     */\n    public getPriority(attrs: number = this.attrs): number  {\n        return attrs & PriorityMask;\n    }\n    \n    /**\n     * Tests which object has the higher selection priority.\n     * @param obj\n     *  The object to compare to.\n     * @returns\n     *  True if this object has a higher selection priority, false otherwise.\n     */\n    public hasHigherPriorityThan(obj: DiagramObjectModel): boolean {\n        return this.getPriority() > obj.getPriority();\n    }\n\n    /**\n     * Tests if the object is selected.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  True if the object is selected, false otherwise.\n     */\n    public isSelected(attrs: number = this.attrs): boolean {\n        return (attrs & SelectMask) === Select.True;\n    }\n\n    /**\n     * Returns the object's semantic role.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  The object's semantic role.\n     */\n    public getSemanticRole(attrs: number = this.attrs): number {\n        return attrs & SemanticRoleMask;\n    }\n\n    /**\n     * Tests if the object has a semantic role.\n     * @param role\n     *  The role.\n     * @param attrs\n     *  If specified, these attributes will override the object's attributes.\n     * @returns\n     *  True if the object has the role, false otherwise.\n     */\n    public hasRole(role: number, attrs: number = this.attrs): boolean {\n        return (attrs & SemanticRoleMask) === role;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  6. Attribute Setters  /////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Sets the object's alignment.\n     * @param alignment\n     *  The alignment.\n     */\n    public setAlignment(alignment: number) {\n        this.attrs = (this.attrs & ~AlignmentMask) | alignment;\n    }\n\n    /**\n     * Sets the object's cursor.\n     * @param cursor\n     *  The cursor.\n     */\n    public setCursor(cursor: number) {\n        this.attrs = (this.attrs & ~CursorMask) | cursor;\n    }\n\n    /**\n     * Sets the object's hover state.\n     * @param hover\n     *  The hover state.\n     */\n    public setHover(hover: number) {\n        this.attrs = (this.attrs & ~HoverMask) | hover;\n    }\n\n    /**\n     * Sets the object's 'inherit alignment' attribute.\n     * @param inherit\n     *  The attribute.\n     */\n    public setInheritAlignment(inherit: number) {\n        this.attrs = (this.attrs & ~InheritAlignmentMask) | inherit;\n    }\n\n    /**\n     * Sets the object's 'position set by user' attribute.\n     * @param positionSetByUser\n     *  The attribute.\n     */\n    public setPositionSetByUser(positionSetByUser: number) {\n        this.attrs = (this.attrs & ~PositionSetByUserMask) | positionSetByUser;\n    }\n\n    /**\n     * Sets the object's selection priority.\n     * @param priority\n     *  The selection priority.\n     */\n    public setPriority(priority: number) {\n        this.attrs = (this.attrs & ~PriorityMask) | priority;\n    }\n\n    /**\n     * Sets the object's selection state.\n     * @param select\n     *  The selection state.\n     */\n    public setSelect(select: number) {\n        this.attrs = (this.attrs & ~SelectMask) | select;\n    }\n\n    /**\n     * Sets the object's semantic role.\n     * @param role\n     *  The role.\n     */\n    public setSemanticRole(role: number) {\n        this.attrs = (this.attrs & ~SemanticRoleMask) | role;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  7. Content  ///////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n\n    /**\n     * Exports the {@link DiagramObjectModel}.\n     * @returns\n     *  The {@link DiagramObjectExport}.\n     */\n    public toExport(): DiagramObjectExport {\n        return {\n            id: this.id,\n            x: this.boundingBox.xMid,\n            y: this.boundingBox.yMid,\n            attrs: this.getPositionSetByUser(),\n            template: this.template.id,\n            children: this.children.map(el => el.id),\n            properties: this.props.toRawValue()\n        }\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Diagram Object Model Error  ////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport class DiagramObjectModelError extends Error {\n\n    /**\n     * The error's subject.\n     */\n    public subject: DiagramObjectModel | undefined;\n\n    /**\n     * Creates a new {@link DiagramObjectModel}.\n     * @param subject\n     *  The error's subject.\n     */\n    constructor(message: string, subject?: DiagramObjectModel) {\n        super(message);\n        this.subject = subject;\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. Bounding Box  //////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport class BoundingBox {\n\n    /**\n     * The bounding region's minimum x coordinate.\n     */\n    public xMin: number\n\n    /**\n     * The bounding region's minimum y coordinate.\n     */\n    public yMin: number\n\n    /**\n     * The bounding region's center x coordinate.\n     */\n    public xMid: number;\n\n    /**\n     * The bounding region's center y coordinate.\n     */\n    public yMid: number;\n\n    /**\n     * The bounding region's maximum x coordinate.\n     */\n    public xMax: number\n\n    /**\n     * The bounding region's maximum y coordinate.\n     */\n    public yMax: number;\n\n    /**\n     * Creates a new {@link BoundingBox}.\n     */\n    constructor() {\n        this.xMin = 0;\n        this.yMin = 0;\n        this.xMid = 0;\n        this.yMid = 0;\n        this.xMax = 0;\n        this.yMax = 0;\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  4. Layout Update Reason  //////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport const LayoutUpdateReason = {\n    Initialization : 0b00001,\n    Movement       : 0b00010,\n    ChildAdded     : 0b00100,\n    ChildDeleted   : 0b01000,\n    PropUpdate     : 0b10000\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramAnchorView } from \"../../DiagramViewTypes\";\nimport { \n    DiagramAnchorableModel,\n    DiagramLineModel,\n    DiagramObjectModel,\n    DiagramObjectModelError,\n    LayoutUpdateReason\n} from \"./BaseModels\";\nimport {\n    AnchorAngle,\n    AnchorTemplate, \n    DiagramAnchorExport, \n    DiagramAnchorValues,\n    DiagramFactory\n} from \"../../DiagramFactory\";\nimport { Priority } from \"../../Attributes\";\n\nexport abstract class DiagramAnchorModel extends DiagramObjectModel {\n\n    /**\n     * The anchor's children.\n     */\n    // @ts-ignore Children will be initialized in DiagramObjectModel\n    public override readonly children: DiagramAnchorableModel[];\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: AnchorTemplate;\n\n    /**\n     * The anchor's angle.\n     */\n    public angle: AnchorAngle;\n\n    /**\n     * The anchor's radius.\n     */\n    public readonly radius: number;\n\n    /**\n     * The anchor's line templates.\n     */\n    public readonly lineTemplates: { [key: number]: string }\n\n\n    /**\n     * Creates a new {@link DiagramAnchorModel}.\n     * @param factory\n     *  The anchor's diagram factory.\n     * @param template\n     *  The anchor's template.\n     * @param values\n     *  The anchor's values. \n     */\n    constructor(\n        factory: DiagramFactory, \n        template: AnchorTemplate,\n        values?: DiagramAnchorValues\n    ) {\n        super(factory, template, values);\n        this.radius = template.radius;\n        this.template = template;\n        this.lineTemplates = template.line_templates;\n        this.angle = values?.angle ?? AnchorAngle.DEG_0;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Structure  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Links an anchorable to the anchor.\n     * @param obj\n     *  The anchorable object.\n     * @param index\n     *  The child object's location in the array.\n     *  (Default: End of the array)\n     * @throws { DiagramObjectModelError }\n     *  If `obj` is already anchored to another anchor.\n     */\n    public override addChild(\n        obj: DiagramObjectModel,\n        index: number = this.children.length\n    ): void {\n        // Ensure object is DiagramAnchorableModel\n        if(!(obj instanceof DiagramAnchorableModel)) {\n            let name = DiagramAnchorModel.name;\n            throw new DiagramObjectModelError(\n                `Child must be of type '${ name }.'`, obj\n            );\n        }\n        // Ensure object is not attached to something else\n        if(obj.isAttached()) {\n            throw new DiagramObjectModelError(\n                `'${ obj.id }' is already anchored.`, obj\n            );\n        }\n        // Add anchor to object\n        obj.anchor = this;\n        // Add object to anchor\n        this.children.splice(index, 0, obj);\n    }\n\n    /**\n     * Unlinks an anchorable from the anchor. \n     * @param obj\n     *  The anchorable object.\n     */\n    public override removeChild(obj: DiagramAnchorableModel): void {\n        let i = this.children.indexOf(obj);\n        if(i === -1) {\n            throw new DiagramObjectModelError(\n                `'${ obj.id }' is not attached to the '${ this.id }'.`, obj\n            );\n        }\n        // Remove anchor from object\n        obj.anchor = undefined;\n        // Remove object from anchor\n        this.children.splice(i, 1);\n    }\n\n    /**\n     * Tests if the anchor has attachments.\n     * @returns\n     *  True if the anchor has attachments, false otherwise.\n     */\n    public hasAttachments(): boolean {\n        return 0 < this.children.length\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        let object = undefined;\n        let select = undefined;\n        for(let i = this.children.length - 1; 0 <= i; i--) {\n            select = this.children[i].getObjectAt(x, y)\n            if(select && (!object || select.hasHigherPriorityThan(object))) {\n                object = select;\n                if(object.getPriority() === Priority.High) {\n                    break;\n                }\n            }\n        }\n        let r = this.radius;\n        let dx = x - this.boundingBox.xMid;\n        let dy = y - this.boundingBox.yMid;\n        if(object && object.getPriority() > Priority.Normal) {\n            return object;\n        } else if(dx * dx + dy * dy < r * r) {\n            return this;\n        } else {\n            return undefined;\n        }\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override moveBy(dx: number, dy: number, updateParent: boolean = true) {\n        // Move self\n        this.boundingBox.xMin += dx;\n        this.boundingBox.xMid += dx;\n        this.boundingBox.xMax += dx;\n        this.boundingBox.yMin += dy;\n        this.boundingBox.yMid += dy;\n        this.boundingBox.yMax += dy;\n        // Move anchored children\n        for(let obj of this.children) {\n            if(!obj.isAttached(this)) {\n                console.warn(`'${ obj.id }' incorrectly attached to anchor.`);\n                continue;\n            }\n            obj.moveTo(this.boundingBox.xMid, this.boundingBox.yMid);\n        }\n        // Update layout\n        this.updateLayout(LayoutUpdateReason.Movement, updateParent);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  4. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the anchor's bounding box.\n     * @param reasons\n     *  The reasons the layout was updated. \n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let bb = this.boundingBox;\n        // Update bounding box\n        bb.xMin = bb.xMid - this.radius;\n        bb.yMin = bb.yMid - this.radius;\n        bb.xMax = bb.xMid + this.radius;\n        bb.yMax = bb.yMid + this.radius;\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public abstract override createView(cache: RasterCache): DiagramAnchorView;\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  5. Content  ///////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Exports the {@link DiagramAnchorModel}.\n     * @returns\n     *  The {@link DiagramAnchorExport}.\n     */\n    public override toExport(): DiagramAnchorExport {\n        return {\n            ...super.toExport(),\n            angle: this.angle\n        }\n    }\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  6. Object Creation  ///////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Creates a new line according to the anchor's current angle.\n     * @returns\n     *  The newly created line.\n     * @throws { DiagramObjectModelError }\n     *  If the configured template type is not a line.\n     */\n    public makeLine(): DiagramLineModel {\n        // Create line\n        let tem = this.lineTemplates[this.angle];\n        let obj = this.factory.createObject(tem);\n        // Return object\n        if(obj instanceof DiagramLineModel){\n            return obj;\n        } else {\n            throw new DiagramObjectModelError(\n                `Template '${ tem }' is not a line.`, obj\n            );\n        }\n    }\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramAnchorableView } from \"../../DiagramViewTypes\";\nimport { \n    DiagramAnchorModel,\n    DiagramObjectModel,\n    DiagramObjectModelError\n} from \"./BaseModels\";\nimport { \n    DiagramFactory,\n    DiagramObjectValues,\n    ObjectTemplate\n} from \"../../DiagramFactory\";\n\nexport abstract class DiagramAnchorableModel extends DiagramObjectModel {\n\n    /**\n     * The anchorable's anchor.\n     */\n    public anchor: DiagramAnchorModel | undefined; \n\n\n    /**\n     * Creates a new {@link DiagramAnchorableModel}.\n     * @param factory\n     *  The anchorable's diagram factory.\n     * @param template\n     *  The anchorable's template.\n     * @param values\n     *  The anchorable's values. \n     */\n    constructor(\n        factory: DiagramFactory,\n        template: ObjectTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.anchor = undefined;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Structure  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n    \n    /**\n     * Adds a child object.\n     */\n    public override addChild() {\n        throw new DiagramObjectModelError(\n            `Anchorable objects cannot have children.`, this\n        );\n    }\n\n    /**\n     * Removes a child object.\n     */\n    public override removeChild() {\n        throw new DiagramObjectModelError(\n            `Anchorable objects cannot have children.`, this\n        );\n    }\n\n    /**\n     * Reorders a child object.\n     */\n    public override reorderChild() {\n        throw new DiagramObjectModelError(\n            `Anchorable objects cannot be reordered.`, this\n        );\n    }\n\n    /**\n     * Tests if this object is attached to an anchor.\n     * @returns\n     *  True if this object is attached to an anchor, false otherwise.\n     */\n    public isAttached(): boolean;\n\n    /**\n     * Tests if this object is attached to the given anchor.\n     * @param anchor\n     *  The anchor.\n     * @returns\n     *  True if this object is attached to the given anchor, false otherwise.\n     */\n    public isAttached(anchor: DiagramAnchorModel): boolean;\n    public isAttached(anchor?: DiagramAnchorModel): boolean {\n        return anchor ? this.anchor === anchor : this.anchor !== undefined;\n    }\n\n    /**\n     * Returns the object's location in its anchor.\n     * @returns\n     *  The object's location, -1 if it isn't attached to an anchor.\n     */\n    public getIndexInAnchor() {\n        return this.anchor?.children.indexOf(this) ?? -1;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public abstract override createView(cache: RasterCache): DiagramAnchorableView;\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramLineEndingView } from \"../../DiagramViewTypes\";\nimport {\n    DiagramLineModel,\n    DiagramAnchorableModel\n} from \"./BaseModels\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    ObjectTemplate\n} from \"../../DiagramFactory\";\n\nexport abstract class DiagramLineEndingModel extends DiagramAnchorableModel {\n\n    /**\n     * The line ending's parent.\n     */\n    public override parent: DiagramLineModel | undefined;\n\n\n    /**\n     * Creates a new {@link DiagramLineEndingModel}.\n     * @param factory\n     *  The line ending's diagram factory.\n     * @param template\n     *  The line ending's template.\n     * @param values\n     *  The line ending's values. \n     */\n    constructor(\n        factory: DiagramFactory,\n        template: ObjectTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     * @param useSuper\n     *  If true, the object will use its inherited `moveBy()` function.\n     *  (Default: false)\n     */\n    public override moveBy(\n        dx: number, dy: number, updateParent: boolean = true, useSuper: boolean = false\n    ): void {\n        if(useSuper) {\n            super.moveBy(dx, dy, updateParent);\n        } else {\n            this.parent?.moveChild(this.id, dx, dy, updateParent);\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public abstract override createView(cache: RasterCache): DiagramLineEndingView;\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramLineHandleView } from \"../../DiagramViewTypes\";\nimport {\n    DiagramLineModel,\n    DiagramObjectModel\n} from \"./BaseModels\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    ObjectTemplate\n} from \"../../DiagramFactory\";\n\nexport abstract class DiagramLineHandleModel extends DiagramObjectModel {\n\n    /**\n     * The line handle's parent.\n     */\n    public override parent: DiagramLineModel | undefined;\n\n\n    /**\n     * Creates a new {@link DiagramLineHandleModel}.\n     * @param factory\n     *  The line handle's diagram factory.\n     * @param template\n     *  The line handle's template.\n     * @param values\n     *  The line handle's values. \n     */\n    constructor(\n        factory: DiagramFactory,\n        template: ObjectTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves the object relative to its current position. \n     * @param dx\n     *  The change in x.\n     * @param dy \n     *  The change in y.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     * @param useSuper\n     *  If true, the object will use its inherited `moveBy()` function.\n     *  (Default: false)\n     */\n    public override moveBy(\n        dx: number, dy: number, updateParent: boolean = true, useSuper: boolean = false\n    ): void {\n        if(useSuper) {\n            super.moveBy(dx, dy, updateParent);\n        } else {\n            this.parent?.moveChild(this.id, dx, dy, updateParent);\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public abstract override createView(cache: RasterCache): DiagramLineHandleView;\n\n}\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramLineView } from \"../../DiagramViewTypes\";\nimport {\n    DiagramObjectModel,\n    DiagramLineEndingModel,\n    DiagramLineHandleModel,\n    DiagramObjectModelError\n} from \"./BaseModels\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    LineStyle,\n    LineTemplate\n} from \"../../DiagramFactory\";\nimport { Priority } from \"../../Attributes\";\n\nexport abstract class DiagramLineModel extends DiagramObjectModel {\n\n    /**\n     * The line's children.\n     */\n    // @ts-ignore Children will be initialized in DiagramObjectModel\n    public override readonly children: DiagramLineObjectModel[];\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: LineTemplate;\n\n    /**\n     * The line's hitbox width.\n     */\n    protected readonly hitboxWidth: number;\n\n    /**\n     * The line's style.\n     */\n    public readonly style: LineStyle;\n\n    /**\n     * The line's source ending.\n     */\n    public get srcEnding(): DiagramLineEndingModel {\n        return this.children.at(0) as DiagramLineEndingModel;\n    }\n    \n    /**\n     * The line's target ending.\n     */\n    public get trgEnding(): DiagramLineEndingModel {\n        return this.children.at(-1) as DiagramLineEndingModel;\n    }\n\n    \n    /**\n     * Creates a new {@link DiagramLineModel}.\n     * @param factory\n     *  The line's diagram factory.\n     * @param template\n     *  The line's template.\n     * @param values\n     *  The line's values.\n     */\n     constructor(\n        factory: DiagramFactory, \n        template: LineTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.style = template.style;\n        this.template = template;\n        this.hitboxWidth = template.hitbox_width;\n    }\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Structure //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Adds a child object.\n     * @param obj\n     *  The object to add.\n     * @param index\n     *  The child object's location in the array.\n     *  (Default: End of the array)\n     * @param update\n     *  If the layout should be updated.\n     *  (Default: true)\n     * @throws { Error }\n     *  If `obj` is not of type {@link DiagramLineObjectModel}.\n     */\n    public override addChild(\n        obj: DiagramObjectModel,\n        index: number = this.children.length,\n        update: boolean = true\n    ): void {\n        if(obj instanceof DiagramLineEndingModel || obj instanceof DiagramLineHandleModel) {\n            super.addChild(obj, index, update);\n        } else {\n            let le = DiagramLineEndingModel.name;\n            let lh = DiagramLineHandleModel.name;\n            throw new DiagramObjectModelError(\n                `Child must be of type '${ le }' or '${ lh }.'`, obj\n            );\n        }\n    }\n\n    /**\n     * Reorders a child object.\n     * @param id\n     *  The id of the object.\n     * @param index\n     *  The object's new location.\n     * @param update\n     *  If the layout should be updated.\n     *  (Default: true)\n     */\n    public override reorderChild(id: string, index: number, update: boolean= true) {\n        throw new DiagramObjectModelError(\n            `Line objects cannot be reordered.`, this\n        );\n    }\n\n    /**\n     * Tests if the line is anchored on either end.\n     * @returns\n     *  True if the line is anchored on either end, false otherwise.\n     */\n    protected isAnchored() {\n        for(let obj of this.children) {\n            if(obj instanceof DiagramLineEndingModel && obj.isAttached()) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves one of the line's children relative to its current position. \n     * @param id\n     *  The id of the child.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public abstract moveChild(id: string, dx: number, dy: number, updateParent?: boolean): void;\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public abstract override createView(cache: RasterCache): DiagramLineView;\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  4. Attribute Setters  /////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Sets the object's selection state.\n     * @param select\n     *  The selection state.\n     */\n    public override setSelect(select: number) {\n        super.setSelect(select);\n        // Promote priority of children when selected\n        let priority = this.isSelected() \n            ? Priority.High\n            : Priority.Normal;\n        for(let obj of this.children) {\n            obj.setPriority(priority);\n        }\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type DiagramLineObjectModel \n    = DiagramLineEndingModel \n    | DiagramLineHandleModel;\n","import { RasterCache } from \"../../DiagramElement/RasterCache\";\nimport { DiagramRootView } from \"../../DiagramViewTypes\";\nimport {\n    DiagramAnchorModel,\n    DiagramObjectModel,\n    LayoutUpdateReason\n} from \"./BaseModels\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    ObjectTemplate\n} from \"../../DiagramFactory\";\n\nexport abstract class DiagramRootModel extends DiagramObjectModel {\n    \n    /**\n     * The root's internal anchor cache.\n     */\n    public readonly anchorCache: DiagramAnchorModel[];\n    \n    /**\n     * The root's internal object cache.\n     */\n    private readonly _objectCache: Map<string, DiagramObjectModel>;\n\n\n    /**\n     * Creates a new {@link DiagramRootModel}.\n     * @param factory\n     *  The root's diagram factory.\n     * @param template\n     *  The root's template.\n     * @param values \n     *  The root's values.\n     */\n    constructor(factory: DiagramFactory, template: ObjectTemplate, values?: DiagramObjectValues) {\n        super(factory, template, values);\n        this.anchorCache = [];\n        this._objectCache = new Map([[this.id, this]]);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Diagram Object Lookup  /////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns an object from the diagram.\n     * @param id\n     *  The id of the object.\n     * @returns\n     *  The object or `undefined` if no object with that id exists.\n     */\n    public lookup<T extends DiagramObjectModel>(id: string): T | undefined {\n        return this._objectCache.get(id) as T;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the root's alignment, bounding box, and object cache.\n     * @param reasons\n     *  The reasons the layout was updated. \n     */\n    public override updateLayout(reasons: number): void {\n        let { ChildAdded, ChildDeleted, Initialization } = LayoutUpdateReason;\n        // Update layout\n        super.updateLayout(reasons);\n        // Rebuild caches\n        if(reasons & (Initialization | ChildAdded | ChildDeleted)){\n            this._objectCache.clear();\n            this.anchorCache.splice(0, this.anchorCache.length);\n            for(let obj of this.getSubtree()) {\n                if(obj instanceof DiagramAnchorModel) {\n                    this.anchorCache.push(obj);\n                }\n                this._objectCache.set(obj.id, obj);\n            }\n        }\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public abstract override createView(cache: RasterCache): DiagramRootView;\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { LineEndingPointView } from \"../DiagramViewTypes\";\nimport { \n    DiagramLineEndingModel,\n    DiagramObjectModel,\n    LayoutUpdateReason\n} from \"./BaseTypes/BaseModels\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    LineEndingPointStyle,\n    LineEndingPointTemplate\n} from \"../DiagramFactory\";\nimport { Cursor } from \"../Attributes\";\n\nexport class LineEndingPointModel extends DiagramLineEndingModel {\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: LineEndingPointTemplate;\n\n    /**\n     * The line ending's style.\n     */\n    public readonly style: LineEndingPointStyle;\n\n\n    /**\n     * Creates a new {@link LineEndingPointModel}.\n     * @param factory\n     *  The line ending point's diagram factory.\n     * @param template\n     *  The line ending point's template.\n     * @param values\n     *  The line ending point's values.\n     */\n    constructor(\n        factory: DiagramFactory,\n        template: LineEndingPointTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.setCursor(Cursor.Pointer);\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        this.style = template.style;\n        // Update Layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        let dx = x - this.boundingBox.xMid;\n        let dy = y - this.boundingBox.yMid;\n        let r = this.style.radius;\n        return dx * dx + dy * dy < r * r ? this : undefined;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the line ending's bounding box.\n     * @param reasons\n     *  The reasons the layout was updated. \n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let bb = this.boundingBox;\n        // Update bounding box\n        bb.xMin = bb.xMid - this.style.radius;\n        bb.yMin = bb.yMid - this.style.radius;\n        bb.xMax = bb.xMid + this.style.radius;\n        bb.yMax = bb.yMid + this.style.radius;\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public createView(cache: RasterCache): LineEndingPointView {\n        return new LineEndingPointView(this, cache);\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { LineHandlePointView } from \"../DiagramViewTypes\";\nimport {\n    DiagramLineHandleModel,\n    DiagramObjectModel,\n    LayoutUpdateReason\n} from \"./BaseTypes/BaseModels\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    LineHandlePointStyle,\n    LineHandlePointTemplate\n} from \"../DiagramFactory\";\nimport { Cursor } from \"../Attributes\";\n\nexport class LineHandlePointModel extends DiagramLineHandleModel {\n    \n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: LineHandlePointTemplate;\n\n    /**\n     * The line handle's style.\n     */\n    public readonly style: LineHandlePointStyle;\n\n\n    /**\n     * Creates a new {@link LineHandlePointModel}.\n     * @param factory\n     *  The line handle point's diagram factory.\n     * @param template\n     *  The line handle point's template.\n     * @param values\n     *  The line handle point's values.\n     */\n    constructor(\n        factory: DiagramFactory,\n        template: LineHandlePointTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.setCursor(Cursor.Move);\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        this.style = template.style;\n        // Update Layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        let dx = x - this.boundingBox.xMid;\n        let dy = y - this.boundingBox.yMid;\n        let r = this.style.radius;\n        return dx * dx + dy * dy < r * r ? this : undefined;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the line handle's bounding box.\n     * @param reasons\n     *  The reasons the layout was updated.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let bb = this.boundingBox;\n        // Update bounding box\n        bb.xMin = bb.xMid - this.style.radius;\n        bb.yMin = bb.yMid - this.style.radius;\n        bb.xMax = bb.xMid + this.style.radius;\n        bb.yMax = bb.yMid + this.style.radius;\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public createView(cache: RasterCache): LineHandlePointView {\n        return new LineHandlePointView(this, cache);\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { LineHorizontalElbowView } from \"../DiagramViewTypes\";\nimport { getLineHitbox, isInsideRegion } from \"../Utilities\";\nimport {\n    DiagramLineModel,\n    DiagramObjectModel,\n    LayoutUpdateReason,\n    LineEndingPointModel,\n    LineHandlePointModel\n} from \".\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    LineHorizontalElbowTemplate\n} from \"../DiagramFactory\";\nimport { Cursor } from \"../Attributes\";\n\nexport class LineHorizontalElbowModel extends DiagramLineModel {\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: LineHorizontalElbowTemplate;\n\n    /**\n     * The line's hitboxes.\n     *  [0] = The 1st horizontal segment's hitbox.\n     *  [1] = The vertical segment's hitbox.\n     *  [2] = The 2nd horizontal segment's hitbox.\n     */\n    public readonly hitboxes: number[][];\n\n\n    /**\n     * Creates a new {@link LineHorizontalElbowModel}.\n     * @param factory\n     *  The line's diagram factory.\n     * @param template\n     *  The line's template.\n     * @param values\n     *  The line's values.\n     */\n     constructor(\n        factory: DiagramFactory, \n        template: LineHorizontalElbowTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.hitboxes = [[],[],[]];\n        this.setCursor(Cursor.Move);\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        // Define children \n        if(!this.children.length) {\n            let x = this.boundingBox.xMid;\n            let y = this.boundingBox.yMid;\n            // Define Caps and Handles\n            let src = template.line_ending_template.source;\n            let han = template.line_handle_template;\n            let trg = template.line_ending_template.target;\n            this.addChild(factory.createObject(src) as LineEndingPointModel, 0, false);\n            this.addChild(factory.createObject(han) as LineHandlePointModel, 1, false);\n            this.addChild(factory.createObject(trg) as LineEndingPointModel, 2, false);\n            // Define position\n            for(let obj of this.children) {\n                obj.moveTo(x, y);\n            }\n            this.children[0].moveBy(-100, 50);\n            this.children[2].moveBy(100, -50);\n        }        \n        // Update layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        if(this.isAnchored()) {\n            // Try points\n            let obj = super.getObjectAt(x, y);\n            if(obj) {\n                return obj;\n            }\n            // Try segments\n            for(let i = 0; i < this.hitboxes.length; i++) {\n                if(!isInsideRegion(x, y, this.hitboxes[i]))\n                    continue;\n                if(i === 1) {\n                    return this.children[i];\n                } else {\n                    return this;\n                }\n            }\n        } else {\n            if(this.isSelected()) {\n                // Try points\n                let obj = super.getObjectAt(x, y);\n                if(obj) {\n                    return obj;\n                }\n            }\n            // Try segments\n            for(let hitbox of this.hitboxes) {\n                if(isInsideRegion(x, y, hitbox)) {\n                    return this;\n                }\n            }\n        }\n        return undefined;\n    }   \n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves one of the line's children relative to its current position. \n     * @param id\n     *  The id of the child.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public moveChild(id: string, dx: number, dy: number, updateParent: boolean = true) {\n        // Select child\n        let obj = this.children.find(o => o.id === id)!;\n        if(!obj)\n            return;\n        // Move ending\n        if(obj instanceof LineEndingPointModel) {\n            obj.moveBy(dx, dy, updateParent, true);\n        }\n        // Move handle\n        let [e1, h1, e2] = this.children;\n        let e1x = e1.boundingBox.xMid,\n            e1y = e1.boundingBox.yMid,\n            e2x = e2.boundingBox.xMid,\n            e2y = e2.boundingBox.yMid,\n            h1x = h1.boundingBox.xMid,\n            h2y = h1.boundingBox.yMid,\n            hdx = ((e1x + e2x) / 2) - h1x,\n            hdy = ((e1y + e2y) / 2) - h2y;\n        if(!h1.hasUserSetPosition()) {\n            h1.moveBy(hdx, 0, updateParent, true);\n        } else if(obj === h1) {\n            h1.moveBy(dx, 0, updateParent, true);\n        }\n        h1.moveBy(0, hdy, updateParent, true);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n\n    /**\n     * Updates the line's alignment, cursor, bounding box, and hitbox.\n     * @param reasons\n     *  The reasons the layout was updated.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let [e1, h1, e2] = this.children.map(o => o.boundingBox);\n        // Update hitboxes\n        let w = this.hitboxWidth;\n        this.hitboxes[0] = getLineHitbox(e1.xMid, e1.yMid, h1.xMid, e1.yMid, w);\n        this.hitboxes[1] = getLineHitbox(h1.xMid, e1.yMid, h1.xMid, e2.yMid, w);\n        this.hitboxes[2] = getLineHitbox(h1.xMid, e2.yMid, e2.xMid, e2.yMid, w);\n        // Update cursor\n        this.children[1].setCursor(Cursor.Col_Resize);\n        // Update bounding box\n        super.updateLayout(reasons, updateParent);\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public createView(cache: RasterCache): LineHorizontalElbowView {\n        return new LineHorizontalElbowView(this, cache);\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { LineVerticalElbowView } from \"../DiagramViewTypes\";\nimport { getLineHitbox, isInsideRegion } from \"../Utilities\";\nimport {\n    DiagramLineModel,\n    DiagramObjectModel,\n    LayoutUpdateReason,\n    LineEndingPointModel,\n    LineHandlePointModel\n} from \".\";\nimport {\n    DiagramFactory,\n    DiagramObjectValues,\n    LineVerticalElbowTemplate\n} from \"../DiagramFactory\";\nimport { Cursor } from \"../Attributes\";\n\nexport class LineVerticalElbowModel extends DiagramLineModel {\n    \n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: LineVerticalElbowTemplate;\n\n    /**\n     * The line's hitboxes.\n     *  [0] = The 1st vertical segment's hitbox.\n     *  [1] = The horizontal segment's hitbox.\n     *  [2] = The 2nd vertical segment's hitbox.\n     */\n    public readonly hitboxes: number[][];\n\n\n    /**\n     * Creates a new {@link LineVerticalElbowModel}.\n     * @param factory\n     *  The line's diagram factory.\n     * @param template\n     *  The line's template.\n     * @param values\n     *  The line's values.\n     */\n     constructor(\n        factory: DiagramFactory, \n        template: LineVerticalElbowTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.hitboxes = [[],[],[]];\n        this.setCursor(Cursor.Move);\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        // Define children \n        if(!this.children.length) {\n            let x = this.boundingBox.xMid;\n            let y = this.boundingBox.yMid;\n            // Define Caps and Handles\n            let src = template.line_ending_template.source;\n            let han = template.line_handle_template;\n            let trg = template.line_ending_template.target;\n            this.addChild(factory.createObject(src) as LineEndingPointModel, 0, false);\n            this.addChild(factory.createObject(han) as LineHandlePointModel, 1, false);\n            this.addChild(factory.createObject(trg) as LineEndingPointModel, 2, false);\n            // Define position\n            for(let obj of this.children) {\n                obj.moveTo(x, y);\n            }\n            this.children[0].moveBy(-50, 100);\n            this.children[2].moveBy(50, -100);\n        }        \n        // Update layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        if(this.isAnchored()) {\n            // Try points\n            let obj = super.getObjectAt(x, y);\n            if(obj) {\n                return obj;\n            }\n            // Try segments\n            for(let i = 0; i < this.hitboxes.length; i++) {\n                if(!isInsideRegion(x, y, this.hitboxes[i]))\n                    continue;\n                if(i === 1) {\n                    return this.children[i];\n                } else {\n                    return this;\n                }\n            }\n        } else {\n            if(this.isSelected()) {\n                // Try points\n                let obj = super.getObjectAt(x, y);\n                if(obj) {\n                    return obj;\n                }\n            }\n            // Try segments\n            for(let hitbox of this.hitboxes) {\n                if(isInsideRegion(x, y, hitbox)) {\n                    return this;\n                }\n            }\n        }\n        return undefined;\n    }   \n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Movement  //////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Moves one of the line's children relative to its current position. \n     * @param id\n     *  The id of the child.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public moveChild(id: string, dx: number, dy: number, updateParent: boolean = true) {\n        // Select child\n        let obj = this.children.find(o => o.id === id)!;\n        if(!obj)\n            return;\n        // Move ending\n        if(obj instanceof LineEndingPointModel) {\n            obj.moveBy(dx, dy, updateParent, true);\n        }\n        // Move handle\n        let [e1, h1, e2] = this.children;\n        let e1x = e1.boundingBox.xMid,\n            e1y = e1.boundingBox.yMid,\n            e2x = e2.boundingBox.xMid,\n            e2y = e2.boundingBox.yMid,\n            h1x = h1.boundingBox.xMid,\n            h2y = h1.boundingBox.yMid,\n            hdx = ((e1x + e2x) / 2) - h1x,\n            hdy = ((e1y + e2y) / 2) - h2y;\n        if(!h1.hasUserSetPosition()) {\n            h1.moveBy(0, hdy, updateParent, true);\n        } else if(obj === h1) {\n            h1.moveBy(0, dy, updateParent, true);\n        }\n        h1.moveBy(hdx, 0, updateParent, true);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n\n    /**\n     * Updates the line's alignment, cursor, bounding box, and hitbox.\n     * @param reasons\n     *  The reasons the layout was updated.\n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let [e1, h1, e2] = this.children.map(o => o.boundingBox);\n        // Update hitboxes\n        let w = this.hitboxWidth;\n        this.hitboxes[0] = getLineHitbox(e1.xMid, e1.yMid, e1.xMid, h1.yMid, w);\n        this.hitboxes[1] = getLineHitbox(e1.xMid, h1.yMid, e2.xMid, h1.yMid, w);\n        this.hitboxes[2] = getLineHitbox(e2.xMid, h1.yMid, e2.xMid, e2.yMid, w);\n        // Update cursor\n        this.children[1].setCursor(Cursor.Row_Resize);\n        // Update bounding box\n        super.updateLayout(reasons, updateParent);\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public createView(cache: RasterCache): LineVerticalElbowView {\n        return new LineVerticalElbowView(this, cache);\n    }\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { AnchorPointView } from \"../DiagramViewTypes\";\nimport { \n    DiagramAnchorModel,\n    LayoutUpdateReason\n} from \".\";\nimport {\n    AnchorPointStyle,\n    AnchorPointTemplate,\n    DiagramAnchorValues,\n    DiagramFactory\n} from \"../DiagramFactory\";\n\nexport class AnchorPointModel extends DiagramAnchorModel {\n    \n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: AnchorPointTemplate;\n\n    /**\n     * The point's style.\n     */\n    public readonly style: AnchorPointStyle;\n\n\n    /**\n     * Creates a new {@link AnchorPointModel}.\n     * @param factory\n     *  The anchor point's diagram factory.\n     * @param template\n     *  The anchor point's template.\n     * @param values\n     *  The anchor point's values.\n     */\n    constructor(\n        factory: DiagramFactory,\n        template: AnchorPointTemplate,\n        values?: DiagramAnchorValues\n    ) {\n        super(factory, template, values);\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        this.style = template.style;\n        // Update Layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the anchor point's bounding box.\n     * @param reasons\n     *  The reasons the layout was updated. \n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let bb = this.boundingBox;\n        // Update bounding box\n        bb.xMin = bb.xMid - this.radius;\n        bb.yMin = bb.yMid - this.radius;\n        bb.xMax = bb.xMid + this.radius;\n        bb.yMax = bb.yMid + this.radius;\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }   \n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public override createView(cache: RasterCache): AnchorPointView {\n        return new AnchorPointView(this, cache);\n    }\n    \n}\n","import { Font, titleCase } from \"../Utilities\";\nimport { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { DictionaryBlockView } from \"../DiagramViewTypes\";\nimport {\n    AnchorPointModel,\n    DiagramObjectModel,\n    LayoutUpdateReason\n} from \".\";\nimport {\n    AnchorAngle,\n    DiagramFactory,\n    DiagramObjectValues,\n    DictionaryBlockStyle,\n    DictionaryBlockTemplate\n} from \"../DiagramFactory\";\nimport {\n    Alignment,\n    Cursor,\n    InheritAlignment\n} from \"../Attributes\";\n\nexport class DictionaryBlockModel extends DiagramObjectModel {\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: DictionaryBlockTemplate;\n\n    /**\n     * The block's style.\n     */\n    public readonly style: DictionaryBlockStyle\n\n    /**\n     * The block's render layout.\n     */\n    public layout: DictionaryBlockRenderLayout;\n\n\n    /**\n     * Creates a new {@link DictionaryBlockModel}.\n     * @param factory\n     *  The block's diagram factory.\n     * @param template\n     *  The block's template.\n     * @param values\n     *  The block's values.\n     */\n    constructor(\n        factory: DiagramFactory, \n        template: DictionaryBlockTemplate, \n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.setInheritAlignment(InheritAlignment.False);\n        this.setAlignment(Alignment.Grid);\n        this.setCursor(Cursor.Move);\n        this.layout = {} as any;\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        this.style = template.style;\n        // Anchor configuration\n        if(!this.children.length) {\n            let t = template.anchor_template;\n            let a = [AnchorAngle.DEG_90, AnchorAngle.DEG_0];\n            for(let i = 0, anchor; i < 12; i++) {\n                anchor = factory.createObject(t) as AnchorPointModel;\n                anchor.angle = a[Math.floor(i / 3) % 2];\n                this.addChild(anchor, i, false);\n            }\n        }\n        // Property configuration\n        this.props.onUpdate(() => {\n            this.updateLayout(LayoutUpdateReason.PropUpdate);\n        });\n        // Update Layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        // Try anchors\n        let obj = super.getObjectAt(x, y);\n        if(obj) {\n            return obj;\n        }\n        // Try object\n        let bb = this.boundingBox;\n        if(\n            bb.xMin <= x && x <= bb.xMax &&\n            bb.yMin <= y && y <= bb.yMax  \n        ) {\n            return this;\n        } else {\n            return undefined;\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the block's bounding box and render layout.\n     * @param reasons\n     *  The reasons the layout was updated. \n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let contentHash = this.props.toHashValue();\n        let contentChanged = this.layout.contentHash !== contentHash;\n        let fullLayoutRequired = reasons & LayoutUpdateReason.Initialization;\n        \n        // Update layout\n        if(fullLayoutRequired || contentChanged) {\n\n            let {\n                max_width,\n                head,\n                body,\n                horizontal_padding\n            } = this.style;\n            let fnf = body.field_name;\n            let fvf = body.field_value;\n            let text: TextSet[] = [];\n            let strokeWidth = 1;\n            \n            // Configure title and subtitle\n            let titleText = titleCase(this.template.id).toLocaleUpperCase();\n            let subtitleText = this.props.isDefined() ? this.props.toString() : \"\";\n            let hasSubtitle = subtitleText !== \"\";\n            let hasBody = this.hasFields();\n            let tf = (hasSubtitle ? head.two_title : head.one_title).title;\n\n            // Calculate max width\n            let mw = max_width;\n            mw = Math.max(mw, tf.font.measureWidth(titleText));\n            for(let key of this.props.value.keys()) {\n                mw = Math.max(mw, body.field_name.font.measureWidth(key));\n            }\n\n            // Calculate text\n            let m = null;\n            let w = 0;\n            let x = strokeWidth + horizontal_padding;\n            let y = strokeWidth + head.vertical_padding;\n            \n            // Create title text set\n            let title: TextSet = {\n                font: tf.font,\n                color: tf.color,\n                text: []\n            }\n            text.push(title);\n            \n            // Calculate title text\n            m = tf.font.measure(titleText);\n            w = Math.max(w, m.width);\n            y += m.ascent;\n            title.text.push({ x, y, t: titleText });\n            y += m.descent + ((tf as any).padding ?? 0);\n            \n            // Calculate subtitle text\n            if(hasSubtitle) {\n                let stf = head.two_title.subtitle;\n\n                // Create subtitle text set\n                let subtitle: TextSet = {\n                    font: stf.font,\n                    color: stf.color,\n                    text: []\n                }\n                text.push(subtitle);\n\n                // Calculate subtitle text\n                let lines = stf.font.wordWrap(subtitleText, mw);\n                m = stf.font.measure(lines[0]);\n                w = Math.max(w, m.width);\n                y += m.ascent;\n                subtitle.text.push({ x, y, t: lines[0] });\n                for(let i = 1; i < lines.length; i++) {\n                    m = stf.font.measure(lines[i]);\n                    w = Math.max(w, m.width);\n                    y += stf.line_height;\n                    subtitle.text.push({ x, y, t: lines[i] });\n                }\n\n            }\n            y += head.vertical_padding + strokeWidth;\n\n            // Calculate header height\n            let headerHeight = Math.round(y);\n\n            // Calculate fields\n            if(hasBody) {\n\n                // Create field name & value text sets\n                let fieldName: TextSet = {\n                    font: fnf.font,\n                    color: fnf.color,\n                    text: []\n                }\n                let fieldValue: TextSet = {\n                    font: fvf.font,\n                    color: fvf.color,\n                    text: []\n                }\n                text.push(fieldName);\n                text.push(fieldValue);\n\n                // Calculate fields\n                y += body.vertical_padding;\n                for(let [key, value] of this.props.value) {\n\n                    // Ignore empty fields\n                    if(!value.isDefined())\n                        continue;\n\n                    // Ignore hidden fields \n                    if(!(value.descriptor.is_visible ?? true))\n                        continue;\n                    \n                    // Ignore the primary key\n                    if(key === this.props.primaryKey)\n                        continue;\n                    \n                    // Calculate field name text\n                    key = key.toLocaleUpperCase();\n                    m = fnf.font.measure(key);\n                    w = Math.max(w, m.width);\n                    y += m.ascent;\n                    fieldName.text.push({ x, y, t: key });\n                    y += m.descent + body.field_name.padding;\n                    \n                    // Calculate field value text\n                    let lines = fvf.font.wordWrap(value.toString(), mw);\n                    m = fvf.font.measure(lines[0]);\n                    w = Math.max(w, m.width);\n                    y += m.ascent;\n                    fieldValue.text.push({ x, y, t: lines[0] });\n                    for(let i = 1; i < lines.length; i++) {\n                        m = fvf.font.measure(lines[i]);\n                        w = Math.max(w, m.width);\n                        y += fvf.line_height;\n                        fieldValue.text.push({ x, y, t: lines[i] });\n                    }\n                    y += body.field_value.padding;\n                    \n                }\n                y -= body.field_value.padding;\n                y += body.vertical_padding;\n\n            } else {\n                y -= strokeWidth;\n            }\n\n            // Calculate block's size\n            let width = Math.round(w + ((horizontal_padding + strokeWidth) * 2));\n            let height = Math.round(y + strokeWidth);\n            \n            // Calculate block's bounding box\n            let bb = this.boundingBox;\n            let xMin = Math.round(bb.xMid - (width / 2));\n            let yMin = Math.round(bb.yMid - (height / 2));\n            let xMax = Math.round(bb.xMid + (width / 2));\n            let yMax = Math.round(bb.yMid + (height / 2));\n\n            // Update anchors\n            let xo = (bb.xMid - xMin) / 2;\n            let yo = (bb.yMid - yMin) / 2;\n            let anchors = [\n                bb.xMid - xo, yMin,\n                bb.xMid, yMin,\n                bb.xMid + xo, yMin,\n                xMax, bb.yMid - yo,\n                xMax, bb.yMid,\n                xMax, bb.yMid + yo,\n                bb.xMid + xo, yMax,\n                bb.xMid, yMax,\n                bb.xMid - xo, yMax,\n                xMin, bb.yMid + yo,\n                xMin, bb.yMid,\n                xMin, bb.yMid - yo\n            ];\n            for(let i = 0; i < anchors.length; i += 2) {\n                this.children[i / 2].moveTo(anchors[i], anchors[i + 1], false);\n            }\n\n            // Update object's bounding box\n            super.updateLayout(reasons, false);\n\n            // Update layout\n            this.layout = {\n                contentHash,\n                dx: xMin - bb.xMin,\n                dy: yMin - bb.yMin,\n                width,\n                height,\n                headerHeight,\n                text\n            };\n\n        }\n\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }\n        \n    }\n\n    /**\n     * Tests if the block has defined fields.\n     * @returns\n     *  True if the block has defined fields, false otherwise.\n     */\n    public hasFields() {\n        for(let [key, value] of this.props.value) {\n            if(key === this.props.primaryKey)\n                continue;\n            if(!(value.descriptor.is_visible ?? true))\n                continue;\n            if(value.isDefined())\n                return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public override createView(cache: RasterCache): DictionaryBlockView {\n        return new DictionaryBlockView(this, cache);\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ntype DictionaryBlockRenderLayout = {\n    \n    /**\n     * The layout's content hash.\n     */\n    contentHash: number\n    \n    /**\n     * The block's x offset from the top-left corner of the bounding box.\n     */\n    dx: number;\n\n    /**\n     * The block's y offset from the top-left corner of the bounding box.\n     */\n    dy: number;\n\n    /**\n     * The block's width.\n     */\n    width: number,\n\n    /**\n     * The blocks's height.\n     */\n    height: number,\n\n    /**\n     * The block's header height.\n     */\n    headerHeight: number\n\n    /**\n     * The text to draw.\n     */\n    text: TextSet[]\n\n}\n\ntype TextSet = {\n\n    /**\n     * The text's fonts.\n     */\n    font: Font,\n\n    /**\n     * The text's color.\n     */\n    color: string,\n\n    /**\n     * The text placements.\n     */\n    text: TextPlacement[]\n\n}\n\ntype TextPlacement = { \n    \n    /**\n     * The x-axis coordinate relative to the top-left coordinate of the block.\n     */\n    x: number,\n\n    /**\n     * The y-axis coordinate relative to the top-left coordinate of the block.\n     */\n    y: number,\n\n    /**\n     * The text.\n     */\n    t: string\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { BranchBlockView } from \"../DiagramViewTypes\";\nimport {\n    AnchorPointModel,\n    DiagramObjectModel,\n    LayoutUpdateReason\n} from \".\";\nimport {\n    AnchorAngle,\n    BranchBlockStyle,\n    BranchBlockTemplate,\n    DiagramFactory,\n    DiagramObjectValues\n} from \"../DiagramFactory\";\nimport {\n    Alignment,\n    Cursor,\n    InheritAlignment\n} from \"../Attributes\";\nimport { Font, titleCase } from \"../Utilities\";\n\nexport class BranchBlockModel extends DiagramObjectModel {\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: BranchBlockTemplate;\n\n    /**\n     * The block's style.\n     */\n    public readonly style: BranchBlockStyle\n\n    /**\n     * The block's render layout.\n     */\n    public layout: DictionaryBlockRenderLayout;\n\n\n    /**\n     * Creates a new {@link BranchBlockModel}.\n     * @param factory\n     *  The block's diagram factory.\n     * @param template\n     *  The block's template.\n     * @param values\n     *  The block's values.\n     */\n    constructor(\n        factory: DiagramFactory, \n        template: BranchBlockTemplate, \n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.setInheritAlignment(InheritAlignment.False);\n        this.setAlignment(Alignment.Grid);\n        this.setCursor(Cursor.Move);\n        this.layout = {} as any;\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        this.style = template.style;\n        // Anchor configuration\n        if(!this.children.length) {\n            let anchor;\n            let t = template.anchor_template;\n            let a = [AnchorAngle.DEG_0, AnchorAngle.DEG_90];\n            // Standard anchors\n            for(let i = 0; i < 9; i++) {\n                anchor = factory.createObject(t) as AnchorPointModel;\n                anchor.angle = a[Math.floor(i / 3) % 2];\n                this.addChild(anchor, i, false);\n            }\n            // Branch anchors\n            for(let b of this.template.branches) {\n                anchor = factory.createObject(b.anchor_template) as AnchorPointModel;\n                anchor.angle = AnchorAngle.DEG_90,\n                this.addChild(anchor, this.children.length, false);\n            }\n        }\n        // Property configuration\n        this.props.onUpdate(() => {\n            this.updateLayout(LayoutUpdateReason.PropUpdate);\n        })\n        // Update Layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        // Try anchors\n        let obj = super.getObjectAt(x, y);\n        if(obj) {\n            return obj;\n        }\n        // Try object\n        let bb = this.boundingBox;\n        if(\n            bb.xMin <= x && x <= bb.xMax &&\n            bb.yMin <= y && y <= bb.yMax  \n        ) {\n            return this;\n        } else {\n            return undefined;\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the block's bounding box and render layout.\n     * @param reasons\n     *  The reasons the layout was updated. \n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let contentHash = this.props.toHashValue();\n        let contentChanged = this.layout.contentHash !== contentHash;\n        let fullLayoutRequired = reasons & LayoutUpdateReason.Initialization;\n        \n        // Update layout\n        if(fullLayoutRequired || contentChanged) {\n\n            let {\n                max_width,\n                head,\n                body,\n                branch,\n                horizontal_padding\n            } = this.style;\n            let {\n                branches\n            } = this.template;\n            let fnf = body.field_name;\n            let fvf = body.field_value;\n            let text: TextSet[] = [];\n            let lines: Line[] = [];\n            let strokeWidth = 1;\n            \n            // Configure title and subtitle\n            let titleText = titleCase(this.template.id).toLocaleUpperCase();\n            let subtitleText = this.props.isDefined() ? this.props.toString() : \"\";\n            let hasSubtitle = subtitleText !== \"\";\n            let hasBody = this.hasFields();\n            let tf = (hasSubtitle ? head.two_title : head.one_title).title;\n\n            // Calculate base width\n            let bw = 0;\n            for(let b of branches) {\n                bw += branch.horizontal_padding;\n                bw += branch.font.measureWidth(b.text);\n                bw += branch.horizontal_padding + strokeWidth;\n            }\n            bw -= strokeWidth + (2 * horizontal_padding);\n\n            // Calculate max width\n            let mw = max_width;\n            mw = Math.max(mw, tf.font.measureWidth(titleText));\n            for(let key of this.props.value.keys()) {\n                mw = Math.max(mw, body.field_name.font.measureWidth(key));\n            }\n            mw = Math.max(mw, bw);\n\n            // Calculate text\n            let m = null;\n            let w = 0;\n            let x = strokeWidth + horizontal_padding;\n            let y = strokeWidth + head.vertical_padding;\n            \n            // Create title text set\n            let title: TextSet = {\n                font: tf.font,\n                color: tf.color,\n                text: []\n            }\n            text.push(title);\n            \n            // Calculate title text\n            m = tf.font.measure(titleText);\n            w = Math.max(w, m.width);\n            y += m.ascent;\n            title.text.push({ x, y, t: titleText });\n            y += m.descent + ((tf as any).padding ?? 0);\n\n            // Calculate subtitle text\n            if(hasSubtitle) {\n                let stf = head.two_title.subtitle;\n\n                // Create subtitle text set\n                let subtitle: TextSet = {\n                    font: stf.font,\n                    color: stf.color,\n                    text: []\n                }\n                text.push(subtitle);\n\n                // Calculate subtitle text\n                let lines = stf.font.wordWrap(subtitleText, mw);\n                m = stf.font.measure(lines[0]);\n                w = Math.max(w, m.width);\n                y += m.ascent;\n                subtitle.text.push({ x, y, t: lines[0] });\n                for(let i = 1; i < lines.length; i++) {\n                    m = stf.font.measure(lines[i]);\n                    w = Math.max(w, m.width);\n                    y += stf.line_height;\n                    subtitle.text.push({ x, y, t: lines[i] });\n                }\n\n            }\n            y += head.vertical_padding + strokeWidth;\n\n            // Calculate header height\n            let headerHeight =  Math.round(y);\n\n            // Calculate fields\n            if(hasBody) {\n\n                // Create field name & value text sets\n                let fieldName: TextSet = {\n                    font: fnf.font,\n                    color: fnf.color,\n                    text: []\n                }\n                let fieldValue: TextSet = {\n                    font: fvf.font,\n                    color: fvf.color,\n                    text: []\n                }\n                text.push(fieldName);\n                text.push(fieldValue);\n\n                // Calculate fields\n                y += body.vertical_padding;\n                for(let [key, value] of this.props.value) {\n\n                    // Ignore empty fields\n                    if(!value.isDefined())\n                        continue;\n\n                    // Ignore hidden fields \n                    if(!(value.descriptor.is_visible ?? true))\n                        continue;\n                    \n                    // Ignore the primary key\n                    if(key === this.props.primaryKey)\n                        continue;\n                    \n                    // Calculate field name text\n                    key = key.toLocaleUpperCase();\n                    m = fnf.font.measure(key);\n                    w = Math.max(w, m.width);\n                    y += m.ascent;\n                    fieldName.text.push({ x, y, t: key });\n                    y += m.descent + body.field_name.padding;\n                    \n                    // Calculate field value text\n                    let lines = fvf.font.wordWrap(value.toString(), mw);\n                    m = fvf.font.measure(lines[0]);\n                    w = Math.max(w, m.width);\n                    y += m.ascent;\n                    fieldValue.text.push({ x, y, t: lines[0] });\n                    for(let i = 1; i < lines.length; i++) {\n                        m = fvf.font.measure(lines[i]);\n                        w = Math.max(w, m.width);\n                        y += fvf.line_height;\n                        fieldValue.text.push({ x, y, t: lines[i] });\n                    }\n                    y += body.field_value.padding;\n                    \n                }\n                y -= body.field_value.padding;\n                y += body.vertical_padding;\n\n            } else {\n                y -= strokeWidth;\n            }\n\n            // Create branch text set\n            let branchText: TextSet = {\n                font: branch.font,\n                color: branch.color,\n                text: []\n            }\n            text.push(branchText);\n\n            // Calculate branches\n            y += strokeWidth;\n            w = Math.max(w, bw) + (2 * horizontal_padding);\n            let vp = branch.vertical_padding;\n            let _x = strokeWidth;\n            let _m = branches.map(b => branch.font.measure(b.text));\n            let _h = Math.max(..._m.map(m => m.ascent + m.descent)) + vp * 2;\n            let _hh = _h / 2;\n            let _hw = w / _m.length / 2;\n            \n            // Text and line placements\n            let x0, y0;\n            for(let i = 0; i < _m.length; i++) {\n                _x += _hw;\n                branchText.text.push({ \n                    x: Math.round(_x - _m[i].width / 2),\n                    y: y + Math.round(_hh + (_m[i].ascent / 2)),\n                    t: branches[i].text\n                });\n                _x += _hw;\n                x0 = Math.round(_x) + 0.5;\n                lines.push({ x0, y0: y, x1: x0, y1: y + _h });\n            }\n            lines.pop();\n            y0 = Math.round(y) - 0.5;\n            y += _h;\n            \n            // Calculate block's size\n            let width = Math.round(w + (strokeWidth * 2));\n            let height = Math.round(y + strokeWidth);\n\n            // Add block line\n            lines.push({ x0: 0, y0, x1: width, y1: y0 });\n\n            // Calculate block's bounding box\n            let bb = this.boundingBox;\n            let xMin = Math.round(bb.xMid - (width / 2));\n            let yMin = Math.round(bb.yMid - (height / 2));\n            let xMax = Math.round(bb.xMid + (width / 2));\n            let yMax = Math.round(bb.yMid + (height / 2));\n\n            // Update anchors\n            let xo = (bb.xMid - xMin) / 2;\n            let yo = (bb.yMid - yMin) / 2;\n            let anchors = [\n                xMin, bb.yMid + yo,\n                xMin, bb.yMid,\n                xMin, bb.yMid - yo,\n                bb.xMid - xo, yMin,\n                bb.xMid, yMin,\n                bb.xMid + xo, yMin,\n                xMax, bb.yMid - yo,\n                xMax, bb.yMid,\n                xMax, bb.yMid + yo\n            ];\n            for(let i = 0; i < anchors.length; i += 2) {\n                this.children[i / 2].moveTo(anchors[i], anchors[i + 1], false);\n            }\n            _x = xMin + strokeWidth;\n            for(let i = 9; i < this.children.length; i++) {\n                _x += _hw;\n                this.children[i].moveTo(Math.round(_x), yMax, false);\n                _x += _hw;\n            }\n\n            // Update object's bounding box\n            super.updateLayout(reasons, false);\n\n            // Update layout\n            this.layout = {\n                contentHash,\n                dx: xMin - bb.xMin,\n                dy: yMin - bb.yMin,\n                width,\n                height,\n                headerHeight,\n                text,\n                lines\n            };\n\n        }\n\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }\n        \n    }\n\n    /**\n     * Tests if the block has defined fields.\n     * @returns\n     *  True if the block has defined fields, false otherwise.\n     */\n    public hasFields() {\n        for(let [key, value] of this.props.value) {\n            if(key === this.props.primaryKey)\n                continue;\n            if(!(value.descriptor.is_visible ?? true))\n                continue;\n            if(value.isDefined())\n                return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public override createView(cache: RasterCache): BranchBlockView {\n        return new BranchBlockView(this, cache);\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ntype DictionaryBlockRenderLayout = {\n    \n    /**\n     * The layout's content hash.\n     */\n    contentHash: number\n    \n    /**\n     * The block's x offset from the top-left corner of the bounding box.\n     */\n    dx: number;\n\n    /**\n     * The block's y offset from the top-left corner of the bounding box.\n     */\n    dy: number;\n\n    /**\n     * The block's width.\n     */\n    width: number,\n\n    /**\n     * The blocks's height.\n     */\n    height: number,\n\n    /**\n     * The block's header height.\n     */\n    headerHeight: number\n\n    /**\n     * The text to draw.\n     */\n    text: TextSet[],\n\n    /**\n     * The lines to draw\n     */\n    lines: Line[]\n\n}\n\ntype Line = {\n\n    /**\n     * The starting x.\n     */\n    x0: number,\n\n    /**\n     * The starting y.\n     */\n    y0: number,\n\n    /**\n     * The ending x.\n     */\n    x1: number,\n\n    /**\n     * The ending y.\n     */\n    y1: number\n\n}\n\ntype TextSet = {\n\n    /**\n     * The text's fonts.\n     */\n    font: Font,\n\n    /**\n     * The text's color.\n     */\n    color: string,\n\n    /**\n     * The text placements.\n     */\n    text: TextPlacement[]\n\n}\n\ntype TextPlacement = { \n    \n    /**\n     * The x-axis coordinate relative to the top-left coordinate of the block.\n     */\n    x: number,\n\n    /**\n     * The y-axis coordinate relative to the top-left coordinate of the block.\n     */\n    y: number,\n\n    /**\n     * The text.\n     */\n    t: string\n\n}\n","import { computeHash } from \"../Utilities\";\nimport { RasterCache } from \"../DiagramElement\";\nimport { TextBlockView } from \"../DiagramViewTypes\";\nimport {\n    AnchorPointModel,\n    DiagramObjectModel,\n    LayoutUpdateReason\n} from \".\";\nimport {\n    AnchorAngle,\n    DiagramFactory,\n    DiagramObjectValues,\n    TextBlockStyle,\n    TextBlockTemplate\n} from \"../DiagramFactory\";\nimport { Alignment, Cursor, InheritAlignment } from \"../Attributes\";\n\nexport class TextBlockModel extends DiagramObjectModel {\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: TextBlockTemplate;\n\n    /**\n     * The block's style.\n     */\n    public readonly style: TextBlockStyle\n\n    /**\n     * The block's render layout.\n     */\n    public layout: TextBlockRenderLayout;\n\n\n    /**\n     * Creates a new {@link DictionaryBlockModel}.\n     * @param factory\n     *  The block's diagram factory.\n     * @param template\n     *  The block's template.\n     * @param values\n     *  The block's values.\n     */\n    constructor(\n        factory: DiagramFactory, \n        template: TextBlockTemplate, \n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        this.setInheritAlignment(InheritAlignment.False);\n        this.setAlignment(Alignment.Grid);\n        this.setCursor(Cursor.Move);\n        this.layout = {} as any;\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        this.style = template.style;\n        // Anchor configuration\n        if(!this.children.length) {\n            let t = template.anchor_template;\n            let a = [AnchorAngle.DEG_90, AnchorAngle.DEG_0];\n            for(let i = 0, anchor; i < 12; i++) {\n                anchor = factory.createObject(t) as AnchorPointModel;\n                anchor.angle = a[Math.floor(i / 3) % 2];\n                this.addChild(anchor, i, false);\n            }\n        }\n        // Property configuration\n        this.props.onUpdate(() => {\n            this.updateLayout(LayoutUpdateReason.PropUpdate);\n        });\n        // Update Layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Selection  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns the topmost object at the given coordinate.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     * @returns\n     *  The topmost object, undefined if there isn't one.\n     */\n    public override getObjectAt(x: number, y: number): DiagramObjectModel | undefined {\n        // Try anchors\n        let obj = super.getObjectAt(x, y);\n        if(obj) {\n            return obj;\n        }\n        // Try object\n        let bb = this.boundingBox;\n        if(\n            bb.xMin <= x && x <= bb.xMax &&\n            bb.yMin <= y && y <= bb.yMax  \n        ) {\n            return this;\n        } else {\n            return undefined;\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Updates the block's bounding box and render layout.\n     * @param reasons\n     *  The reasons the layout was updated. \n     * @param updateParent\n     *  If the parent's layout should be updated.\n     *  (Default: true)\n     */\n    public override updateLayout(reasons: number, updateParent: boolean = true) {\n        let contentHash = computeHash(this.props.toString());\n        let contentChanged = this.layout.contentHash !== contentHash;\n        let fullLayoutRequired = reasons & LayoutUpdateReason.Initialization;\n        \n        // Update layout\n        if(fullLayoutRequired || contentChanged)  {\n\n            let {\n                max_width,\n                text: t,\n                vertical_padding: vp,\n                horizontal_padding: hp\n            } = this.style;\n            let strokeWidth = 1;\n\n            // Calculate text\n            let text = [];\n            let lines = t.font.wordWrap(this.props.toString(), max_width);\n            let m = t.font.measure(lines[0]);\n            let w = m.width;\n            let x = strokeWidth + hp;\n            let y = strokeWidth + vp + m.ascent;\n            text.push({ x, y, t: lines[0] });\n            for(let i = 1; i < lines.length; i++) {\n                m = t.font.measure(lines[i]);\n                w = Math.max(w, m.width);\n                y += t.line_height;\n                text.push({ x, y, t: lines[i] });\n            }\n            y += vp + strokeWidth;\n            x += w + x;\n\n            // Calculate block's size\n            let width = Math.round(x);\n            let height = Math.round(y);\n\n            // Calculate block's bounding box\n            let bb = this.boundingBox;\n            let xMin = Math.round(bb.xMid - (width / 2));\n            let yMin = Math.round(bb.yMid - (height / 2));\n            let xMax = Math.round(bb.xMid + (width / 2));\n            let yMax = Math.round(bb.yMid + (height / 2));\n\n            // Update anchors\n            let xo = (bb.xMid - xMin) / 2;\n            let yo = (bb.yMid - yMin) / 2;\n            let anchors = [\n                bb.xMid - xo, yMin,\n                bb.xMid, yMin,\n                bb.xMid + xo, yMin,\n                xMax, bb.yMid - yo,\n                xMax, bb.yMid,\n                xMax, bb.yMid + yo,\n                bb.xMid + xo, yMax,\n                bb.xMid, yMax,\n                bb.xMid - xo, yMax,\n                xMin, bb.yMid + yo,\n                xMin, bb.yMid,\n                xMin, bb.yMid - yo\n            ]\n            for(let i = 0; i < anchors.length; i += 2) {\n                this.children[i / 2].moveTo(anchors[i], anchors[i + 1], false);\n            }\n\n            // Update object's bounding box\n            super.updateLayout(reasons, false);\n\n            // Update layout\n            this.layout = {\n                contentHash,\n                dx: xMin - bb.xMin,\n                dy: yMin - bb.yMin,\n                width,\n                height,\n                text\n            };\n\n        }\n\n        // Update parent\n        if(updateParent) {\n            this.parent?.updateLayout(reasons);\n        }\n        \n    }\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public override createView(cache: RasterCache): TextBlockView {\n        return new TextBlockView(this, cache);\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ntype TextBlockRenderLayout = {\n    \n    /**\n     * The layout's content hash.\n     */\n    contentHash: number\n    \n    /**\n     * The block's x offset from the top-left corner of the bounding box.\n     */\n    dx: number;\n\n    /**\n     * The block's y offset from the top-left corner of the bounding box.\n     */\n    dy: number;\n\n    /**\n     * The block's width.\n     */\n    width: number,\n\n    /**\n     * The blocks's height.\n     */\n    height: number,\n\n    /**\n     * The text to draw.\n     */\n    text: TextPlacement[]\n\n}\n\ntype TextPlacement = { \n    \n    /**\n     * The x-axis coordinate relative to the top-left coordinate of the block.\n     */\n    x: number,\n\n    /**\n     * The y-axis coordinate relative to the top-left coordinate of the block.\n     */\n    y: number,\n\n    /**\n     * The text.\n     */\n    t: string\n\n}\n","import { RasterCache } from \"../DiagramElement/RasterCache\";\nimport { PageView } from \"../DiagramViewTypes\";\nimport {\n    DiagramRootModel,\n    LayoutUpdateReason\n} from \"./BaseTypes/BaseModels\"\nimport {\n    DiagramFactory,\n    PageStyle,\n    PageTemplate,\n    TemplateType,\n    SemanticRole,\n    DiagramObjectValues\n} from \"../DiagramFactory\";\n\nexport class PageModel extends DiagramRootModel {\n\n    /**\n     * The template the object was configured with.\n     */\n    public override readonly template: PageTemplate;\n    \n    /**\n     * The page's grid size.\n     */\n    public readonly grid: [number, number];\n    \n    /**\n     * The page's style.\n     */\n    public readonly style: PageStyle;\n\n\n    /**\n     * Creates a new {@link PageModel}.\n     * @param factory\n     *  The page's diagram factory.\n     * @param template\n     *  The page's template.\n     * @param values\n     *  The page's values.\n     */\n    constructor(\n        factory: DiagramFactory,\n        template: PageTemplate,\n        values?: DiagramObjectValues\n    ) {\n        super(factory, template, values);\n        // Template configuration\n        this.setSemanticRole(template.role);\n        this.template = template;\n        this.grid = template.grid;\n        this.style = template.style;\n        // Update layout\n        this.updateLayout(LayoutUpdateReason.Initialization);\n    }\n\n\n    /**\n     * Returns a dummy {@link PageModel} not associated with any document.\n     * @returns\n     *  A dummy {@link PageModel}.\n     */\n    public static createDummy(): PageModel {\n        return new this(\n            DiagramFactory.createDummy(),\n            { \n                id: \"\",\n                type: TemplateType.Page, \n                role: SemanticRole.None,\n                grid: [10, 10],\n                style: { \n                    grid_color: \"#1d1d1d\",\n                    background_color: \"#141414\",\n                    drop_shadow: {\n                        color: \"rgba(0,0,0,.4)\",\n                        offset: [3, 3]\n                    }\n                }\n            }\n        );\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Layout & View  /////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Returns this object wrapped inside a view object.\n     *  @param cache\n     *   The view's raster cache.\n     *  @returns\n     *   This object wrapped inside a view object.\n     */\n    public override createView(cache: RasterCache): PageView {\n        return new PageView(this, cache);\n    }\n\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"frame center\" }\nconst _hoisted_2 = { class: \"frame right\" }\nconst _hoisted_3 = { class: \"frame bottom\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_AppTitleBar = _resolveComponent(\"AppTitleBar\")!\n  const _component_BlockDiagram = _resolveComponent(\"BlockDiagram\")!\n  const _component_EditorSidebar = _resolveComponent(\"EditorSidebar\")!\n  const _component_AppFooterBar = _resolveComponent(\"AppFooterBar\")!\n  const _component_AppHotkeyBox = _resolveComponent(\"AppHotkeyBox\")!\n\n  return (_openBlock(), _createBlock(_component_AppHotkeyBox, { id: \"main\" }, {\n    default: _withCtx(() => [\n      _createVNode(_component_AppTitleBar, { id: \"app-title-bar\" }),\n      _createElementVNode(\"div\", {\n        id: \"app-body\",\n        ref: \"body\",\n        style: _normalizeStyle(_ctx.gridLayout)\n      }, [\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createVNode(_component_BlockDiagram, { id: \"block-diagram\" })\n        ]),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", {\n            class: \"resize-handle\",\n            onPointerdown: _cache[0] || (_cache[0] = ($event: any) => (_ctx.startResize($event, _ctx.Handle.Right)))\n          }, null, 32),\n          _createVNode(_component_EditorSidebar, { id: \"app-sidebar\" })\n        ]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createVNode(_component_AppFooterBar, { id: \"app-footer-bar\" })\n        ])\n      ], 4)\n    ]),\n    _: 1\n  }))\n}","import { ValidationErrorResult } from \"./ValidationErrorResult\";\nimport { ValidationWarningResult } from \"./ValidationWarningResult\";\nimport {\n    DiagramObjectModel,\n    GraphObjectExport\n} from \"../BlockDiagram\";\n\nexport class DiagramValidator {\n\n    /**\n     * The validator's error list.\n     */\n    private _errors: ValidationErrorResult[];\n\n    /**\n     * The validator's warning list.\n     */\n    private _warnings: ValidationWarningResult[];\n\n\n    /**\n     * Creates a new {@link DiagramValidator}.\n     */\n    constructor() {\n        this._errors = [];\n        this._warnings = [];\n    } \n\n\n    /**\n     * Resets and runs the validator.\n     * @param object\n     *  The diagram object to validate.\n     */\n    public run(object: DiagramObjectModel) {\n        this.reset();\n        this.validate(object);\n    }\n\n    /**\n     * Validates a diagram.\n     * @param diagram\n     *  The diagram to validate.\n     */\n    protected validate(diagram: DiagramObjectModel) {}\n\n    /**\n     * Returns the validator's current set of warnings.\n     * @returns\n     *  The validator's current set of warnings.\n     */\n    public getWarnings(): ValidationWarningResult[] {\n        return this._warnings;\n    }\n\n    /**\n     * Returns the validator's current set of errors.\n     * @returns\n     *  The validator's current set of errors.\n     */\n    public getErrors(): ValidationErrorResult[] {\n        return this._errors;\n    }\n\n    /**\n     * Adds a warning to the validator.\n     * @param object\n     *  The id of the object that failed to validate.\n     * @param reason\n     *  The reason the object failed to validate.\n     */\n    public addWarning(object: string, reason: string) {\n        this._warnings.push({ object, reason });\n    }\n\n    /**\n     * Adds an error to the validator.\n     * @param object\n     *  The id of the object that failed to validate.\n     * @param reason\n     *  The reason the object failed to validate.\n     */\n    protected addError(object: string, reason: string) {\n        this._errors.push({ object, reason });\n    }\n\n    /**\n     * Tests if the validator is in a valid state.\n     * @returns\n     *  True if the validator is in a valid state, false otherwise.\n     */\n    public inValidState(): boolean {\n        return this._errors.length === 0;\n    }\n\n    /**\n     * Resets the validator's state.\n     */\n    public reset() {\n        this._errors = [];\n        this._warnings = [];\n    }\n\n}\n","import { DiagramValidator } from \"./scripts/DiagramValidator/DiagramValidator\";\nimport { \n    DiagramObjectModel, \n    DictionaryProperty, \n    GraphObjectExport, \n    ListProperty, \n    Property, \n    PropertyType,\n    SemanticAnalyzer \n} from \"./scripts/BlockDiagram\";\n\nclass AttackFlowValidator extends DiagramValidator {\n\n    /**\n     * Validates a diagram.\n     * @param diagram\n     *  The diagram to validate.\n     */\n    protected override validate(diagram: DiagramObjectModel): void {\n        let graph = SemanticAnalyzer.toGraph(diagram);\n        // Validate nodes\n        for (let [id, node] of graph.nodes) {\n            this.validateNode(id, node);\n        }\n        // Validate edges\n        for (let [id, edge] of graph.edges) {\n            this.validateEdge(id, edge);\n        }\n    }\n\n    /**\n     * Validates a node.\n     * @param id\n     *  The node's id.\n     * @param node\n     *  The node.\n     */\n    protected validateNode(id: string, node: GraphObjectExport) {\n        // Validate properties\n        for (const [key, value] of node.props.value) {\n            this.validateProperty(id, key, value)\n        }\n        // Validate links\n        switch(node.template.id) {\n            case \"note\":\n                if(node.next.length === 0) {\n                    this.addError(id, \"A Note must point to at least one object.\");\n                }\n                break;\n        }\n    }\n\n    /**\n     * Validates a property against its descriptor.\n     * @param id\n     *  The property's node id.\n     * @param name\n     *  The property's name.\n     * @param property\n     *  The property.\n     */\n    protected validateProperty(id: string, name: string, property: Property) {\n        switch (property.type) {\n            case PropertyType.Int:\n            case PropertyType.Float:\n            case PropertyType.String:\n            case PropertyType.Date:\n            case PropertyType.Enum:\n                let descriptor = property.descriptor as any;\n                if(descriptor.is_required && !property.isDefined()) {\n                    this.addError(id, `Missing required field: '${ name }'`);\n                }\n                break;\n            case PropertyType.Dictionary:\n                if(property instanceof DictionaryProperty) {\n                    for(let [k, v] of property.value) {\n                        this.validateProperty(id, `${ name }.${ k }`, v);\n                    }\n                }\n                break;\n            case PropertyType.List:\n                if(property instanceof ListProperty) {\n                    for(let v of property.value.values()) {\n                        switch(v.type) {\n                            case PropertyType.Int:\n                            case PropertyType.Float:\n                            case PropertyType.String:\n                            case PropertyType.Date:\n                            case PropertyType.Enum:\n                                let descriptor = v.descriptor as any;\n                                if(descriptor.is_required && !v.isDefined()) {\n                                    this.addError(id, `Empty item in list: '${ name }'.`);\n                                }\n                                break;\n                            case PropertyType.List:\n                                throw new Error(\"Unexpected list property.\");\n                            case PropertyType.Dictionary:\n                                this.validateProperty(id, name, v);\n                                break;\n                        }\n                    }\n                }\n                break;\n        }\n    }\n\n    /**\n     * Validates an edge.\n     * @param id\n     *  The edge's id.\n     * @param edge\n     *  The edge.\n     */\n    protected validateEdge(id: string, edge: GraphObjectExport) {\n        if (edge.prev.length === 0 || edge.next.length === 0) {\n            this.addWarning(id, \"Edge should connect on both ends.\");\n        }\n    }\n\n}\n\nexport default AttackFlowValidator;\n","import { DiagramObjectModel } from \"../BlockDiagram\";\n\nexport class DiagramPublisher {\n\n    /**\n     * Returns the published diagram in text form.\n     * @param diagram\n     *  The diagram to publish.\n     * @returns\n     *  The published diagram in text form.\n     */\n    public publish(diagram: DiagramObjectModel): string {\n        return \"\";\n    };\n\n}\n","import { Crypto } from \"./scripts/BlockDiagram/Utilities/Crypto\";\nimport { DiagramPublisher } from \"./scripts/DiagramPublisher/DiagramPublisher\";\nimport {\n    CollectionProperty,\n    DiagramObjectModel,\n    DictionaryProperty,\n    EnumProperty,\n    GraphObjectExport,\n    ListProperty,\n    Property,\n    PropertyType,\n    RawEntries,\n    SemanticAnalyzer\n} from \"./scripts/BlockDiagram\";\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Publisher Constants  //////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nconst AttackFlowExtensionId\n    = \"fb9c968a-745b-4ade-9b25-c324172197f4\";\n\nconst AttackFlowSchemaUrl\n    = \"https://center-for-threat-informed-defense.github.io/attack-flow/stix/attack-flow-schema-2.0.0.json\";\n\nconst AttackFlowSchemaVersion\n    = \"2.0.0\";\n\nconst AttackFlowExtensionCreatedDate\n    = \"2022-08-02T19:34:35.143Z\";\n\nconst AttackFlowExtensionModifiedDate\n    = AttackFlowExtensionCreatedDate;\n\nconst AttackFlowDocsExternalReference =\n    {\n        source_name: \"Documentation\",\n        description: \"Documentation for Attack Flow\",\n        url: \"https://center-for-threat-informed-defense.github.io/attack-flow\"\n    };\n\nconst AttackFlowGitHubExternalReference =\n    {\n        source_name: \"GitHub\",\n        description: \"Source code repository for Attack Flow\",\n        url: \"https://github.com/center-for-threat-informed-defense/attack-flow\"\n    };\n\nconst AttackFlowExtensionCreatorName\n    = \"MITRE Engenuity Center for Threat-Informed Defense\";\n\nconst AttackFlowSdos\n    = new Set<string>([\n        \"attack-flow\",\n        \"attack-action\",\n        \"attack-asset\",\n        \"attack-condition\",\n        \"attack-operator\"\n    ]);\n\nconst AttackFlowTemplatesMap: Map<string, string>\n    = new Map([\n        [\"flow\", \"attack-flow\"],\n        [\"action\", \"attack-action\"],\n        [\"asset\", \"attack-asset\"],\n        [\"condition\", \"attack-condition\"],\n        [\"or\", \"attack-operator\"],\n        [\"and\", \"attack-operator\"],\n    ]);\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Attack Flow Publisher  ////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nclass AttackFlowPublisher extends DiagramPublisher {\n\n    /**\n     * Returns the published diagram in text form.\n     * @param diagram\n     *  The diagram to publish.\n     * @returns\n     *  The published diagram in text form.\n     */\n    public override publish(diagram: DiagramObjectModel): string {\n        let graph = SemanticAnalyzer.toGraph(diagram);\n\n        // Extract page\n        let pageId = diagram.id;\n        let page = graph.nodes.get(pageId);\n        if(page) {\n            graph.nodes.delete(pageId);\n        } else {\n            throw new Error(\"Page object missing from export.\")\n        }\n\n        // Create bundle\n        let stixBundle = this.createStixBundle();\n        let author = this.createFlowAuthorSdo(page);\n        let flow = this.createFlowSdo(pageId, page, author.id);\n        stixBundle.objects.push(flow);\n        stixBundle.objects.push(author);\n\n        // Graph ID -> STIX node.\n        let stixNodes = new Map<string, Sdo>();\n        // Parent STIX node -> Child Links\n        let stixChildren = new Map<Sdo, Link[]>();\n\n        // Create SDOs and SCOs from graph nodes\n        for (let [id, node] of graph.nodes) {\n            let stixNode = this.toStixNode(id, node);\n            stixBundle.objects.push(stixNode);\n            stixNodes.set(id, stixNode);\n            stixChildren.set(stixNode, []);\n        }\n\n        // Create adjacency list from graph edges\n        for (let edge of graph.edges.values()) {\n            let prev = edge.prev;\n            let next = edge.next;\n            // Skip edges that don't connect two nodes\n            if(prev.length !== 1 || next.length !== 1)\n                continue;\n            // Register link\n            let prevNode = stixNodes.get(prev[0]);\n            let nextNode = stixNodes.get(next[0]);\n            if (prevNode && nextNode) {\n                stixChildren.get(prevNode)!.push({\n                    obj: nextNode,\n                    via: edge.prevLinkMap.keys().next().value\n                });\n            } else {\n                throw new Error(`Edge '${ edge }' is missing one or more nodes.`);\n            }\n        }\n\n        // Embed references\n        for (let [node, children] of stixChildren) {\n            let SROs = this.tryEmbed(node, children);\n            // If any embeds failed, append SROs\n            stixBundle.objects.push(...SROs);\n        }\n\n        // Configure flow roots\n        for(let [id, value] of graph.nodes) {\n            let type = value.template.id;\n            // Node must be an action or condition\n            switch(type) {\n                case \"action\":\n                case \"condition\":\n                    break;\n                default:\n                    continue;\n            }\n            // Node parent cannot be an action or condition\n            let invalidParentType = false;\n            for(let edgeId of value.prev) {\n                // Resolve parent\n                let edge = graph.edges.get(edgeId)!;\n                let nodeId = edge.prev[0];\n                if(!nodeId) {\n                    continue;\n                }\n                // Check parent type\n                let node = graph.nodes.get(nodeId)!;\n                switch(node.template.id) {\n                    case \"action\":\n                    case \"condition\":\n                        invalidParentType = true;\n                        break;\n                }\n            }\n            if(invalidParentType) {\n                continue;\n            }\n            // Add flow root\n            let stixId = stixNodes.get(id)!.id;\n            flow.start_refs.push(stixId);\n        }\n\n        // Return bundle as string\n        return JSON.stringify(stixBundle, null, 2);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Stix Node Creation  ////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Exports a graph object to an SDO or SCO.\n     * @param id\n     *  The graph object's id.\n     * @param node\n     *  The graph object.\n     * @returns\n     *  The exported SDO or SCO.\n     */\n    private toStixNode(id: string, node: GraphObjectExport): Sdo {\n        let obj = this.createSdo(node.template.id, id);\n        switch(obj.type) {\n            case \"attack-action\":\n                this.mergeActionProperty(obj, node.props);\n                break;\n            default:\n                this.mergeBasicDictProperty(obj, node.props);\n                break;\n        }\n        return obj;\n    }\n\n    /**\n     * Merges an action's properties into a STIX action node.\n     * @param node\n     *  The STIX action node.\n     * @param property\n     *  The action's properties.\n     */\n    private mergeActionProperty(node: Sdo, property: DictionaryProperty) {\n        for(let [key, prop] of property.value) {\n            switch(key) {\n                case \"confidence\":\n                    if(!(prop instanceof EnumProperty)) {\n                        throw new Error(\"'confidence' is improperly defined.\");\n                    }\n                    if(!prop.isDefined()) {\n                        break;\n                    }\n                    prop = prop.toReferenceValue()!;\n                    if(!(prop instanceof DictionaryProperty)) {\n                        throw new Error(\"'confidence' is improperly defined.\");\n                    }\n                    [ prop ] = this.getSubproperties(prop, \"value\");\n                    // Fall through\n                default:\n                    if(prop.isDefined()) {\n                        node[key] = prop.toRawValue();\n                    }\n            }\n        }\n    }\n\n    /**\n     * Merges a basic dictionary into a STIX node.\n     * @param node\n     *  The STIX node.\n     * @param property\n     *  The dictionary property.\n     */\n    private mergeBasicDictProperty(node: Sdo, property: DictionaryProperty) {\n        for(let [key, prop] of property.value) {\n            switch(prop.type) {\n                case PropertyType.Dictionary:\n                    throw new Error(\"Basic dictionaries cannot contain dictionaries.\");\n                case PropertyType.Enum:\n                    if (prop instanceof EnumProperty && prop.isDefined()) {\n                        let value = prop.toReferenceValue()!.toRawValue()!;\n                        node[key] = value === \"True\";\n                    }\n                    break;\n                case PropertyType.List:\n                    if (prop.isDefined()) {\n                        this.mergeBasicListProperty(node, key, prop as ListProperty);\n                    }\n                    break;\n                default:\n                    if(prop.isDefined()) {\n                        node[key] = prop.toRawValue();\n                    }\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Merges a basic list into a STIX node.\n     * @param node\n     *  The STIX node.\n     * @param key\n     *  The list property's key.\n     * @param property\n     *  The list property.\n     */\n    private mergeBasicListProperty(node: Sdo, key: string, property: ListProperty) {\n        node[key] = [];\n        for(let prop of property.value.values()) {\n            switch(prop.type) {\n                case PropertyType.Dictionary:\n                    throw new Error(\"Basic lists cannot contain dictionaries.\");\n                case PropertyType.List:\n                    throw new Error(\"Basic lists cannot contain lists.\");\n                case PropertyType.Enum:\n                    throw new Error(\"Basic lists cannot contain enums.\");\n                default:\n                    if(prop.isDefined()) {\n                        node[key].push(prop.toRawValue());\n                    }\n                    break;\n            }\n        }\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Relationships Embeddings  //////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Embed a reference to each child in the parent. If any of the children\n     * cannot be embedded, return a new SRO in its place.\n     *\n     * @remarks\n     * While processing each node, we also process the in edges and out edges of that\n     * node. Some edges may be represented as embedded refs in the node's SDO, and\n     * others may be represented as separate relationship objects (i.e. SROs), therefore\n     * this method can return multiple objects.\n     *\n     * @param parent\n     *  The STIX node.\n     * @param children\n     *  The STIX node's children.\n     * @returns\n     *  Zero or more SROs.\n     */\n    private tryEmbed(parent: Sdo, children: Link[]): Sro[] {\n        let SROs = [];\n        // Attempt to embed children in parent\n        for (const c of children) {\n            let sro = null;\n            switch (parent.type) {\n                case \"attack-action\":\n                    sro = this.tryEmbedInAction(parent, c.obj);\n                    break;\n                case \"attack-asset\":\n                    sro = this.tryEmbedInAsset(parent, c.obj);\n                    break;\n                case \"attack-condition\":\n                    sro = this.tryEmbedInCondition(parent, c.obj, c.via);\n                    break;\n                case \"attack-operator\":\n                    sro = this.tryEmbedInOperator(parent, c.obj);\n                    break;\n                case \"note\":\n                    this.tryEmbedInNote(parent, c.obj);\n                    break;\n                default:\n                    sro = this.tryEmbedInDefault(parent, c.obj);\n            }\n            // If embed failed, append SRO\n            if (sro) {\n                SROs.push(sro);\n            }\n        }\n        return SROs;\n    }\n\n    /**\n     * Embed a reference to the child in the action. If the child cannot be\n     * embedded, return a new SRO.\n     * @param parent\n     *  A STIX action node.\n     * @param child\n     *  A STIX child node.\n     * @returns\n     *  An SRO, if one was created.\n     */\n    private tryEmbedInAction(parent: Sdo, child: Sdo): Sro | undefined {\n        let sro;\n        switch (child.type) {\n            case \"process\":\n                /**\n                 * Note:\n                 * If there are multiple children with type \"process\", only the\n                 * first one will be set as the command ref. The others will be\n                 * set as SROs.\n                 */\n                if (parent.command_ref) {\n                    sro = this.createSro(parent, child);\n                } else {\n                    parent.command_ref = child.id;\n                }\n                break;\n            case \"attack-asset\":\n                if (!parent.asset_refs) {\n                    parent.asset_refs = [];\n                }\n                parent.asset_refs.push(child.id);\n                break;\n            case \"attack-action\":\n                // Falls through\n            case \"attack-operator\":\n                // Falls through\n            case \"attack-condition\":\n                if (!parent.effect_refs) {\n                    parent.effect_refs = [];\n                }\n                parent.effect_refs.push(child.id);\n                break;\n            default:\n                sro = this.createSro(parent, child);\n        }\n        return sro;\n    }\n\n    /**\n     * Embed a reference to the child in the asset. If the child cannot be\n     * embedded, return a new SRO.\n     * @param parent\n     *  A STIX asset node.\n     * @param child\n     *  A STIX child node.\n     * @returns\n     *  An SRO, if one was created.\n     */\n    private tryEmbedInAsset(parent: Sdo, child: Sdo): Sro | undefined {\n        let sro;\n        /**\n         * Note:\n         * If there are multiple children, only the first one will be set as\n         * the object_ref. The others will be set as SROs.\n         */\n        if (parent.object_ref) {\n            sro = this.createSro(parent, child);\n        } else {\n            parent.object_ref = child.id;\n        }\n        return sro;\n    }\n\n    /**\n     * Embed a reference to the child in the condition. If the child cannot be\n     * embedded, return a new SRO.\n     * @param parent\n     *  A STIX condition node.\n     * @param child\n     *  A STIX child node.\n     * @param via\n     *  The route the child is connected through.\n     * @returns\n     *  An SRO, if one was created.\n     */\n    private tryEmbedInCondition(parent: Sdo, child: Sdo, via: string): Sro | undefined {\n        let sro;\n        switch (child.type) {\n            case \"attack-action\":\n                // Falls through\n            case \"attack-operator\":\n                // Falls through\n            case \"attack-condition\":\n                switch(via) {\n                    case \"true_anchor\":\n                        if (!parent.on_true_refs) {\n                            parent.on_true_refs = [];\n                        }\n                        parent.on_true_refs.push(child.id);\n                        break;\n                    case \"false_anchor\":\n                        if (!parent.on_false_refs) {\n                            parent.on_false_refs = [];\n                        }\n                        parent.on_false_refs.push(child.id);\n                        break;\n                    default:\n                        sro = this.createSro(parent, child);\n                        break;\n                }\n                break;\n            default:\n                sro = this.createSro(parent, child);\n        }\n        return sro;\n    }\n\n    /**\n     * Embed a reference to the child in the operator. If the child cannot be\n     * embedded, return a new SRO.\n     * @param parent\n     *  A STIX operator node.\n     * @param child\n     *  A STIX child node.\n     * @returns\n     *  An SRO, if one was created.\n     */\n    private tryEmbedInOperator(parent: Sdo, child: Sdo): Sro | undefined {\n        let sro;\n        switch (child.type) {\n            case \"attack-action\":\n                // Falls through\n            case \"attack-operator\":\n                // Falls through\n            case \"attack-condition\":\n                if (!parent.effect_refs) {\n                    parent.effect_refs = [];\n                }\n                parent.effect_refs.push(child.id);\n                break;\n            default:\n                sro = this.createSro(parent, child);\n        }\n        return sro;\n    }\n\n    /**\n     * Embed a reference to the child in the note. If the child cannot be\n     * embedded, return a new SRO.\n     * @param parent\n     *  A STIX note node.\n     * @param child\n     *  A STIX child node.\n     * @returns\n     *  An SRO, if one was created.\n     */\n    private tryEmbedInNote(parent: Sdo, child: Sdo): void {\n        if(!parent.object_refs) {\n            parent.object_refs = [];\n        }\n        parent.object_refs.push(child.id);\n    }\n\n    /**\n     * Embed a reference to the child in the parent. If the child cannot be\n     * embedded, return a new SRO.\n     * @param parent\n     *  A STIX parent node.\n     * @param child\n     *  A STIX child node.\n     * @returns\n     *  An SRO, if one was created.\n     */\n    private tryEmbedInDefault(parent: Sdo, child: Sdo): Sro {\n        return this.createSro(parent, child);\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Stix Bundle  ///////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Create the initial STIX bundle with required extension/creator SDOs.\n     * @returns\n     *  The initial STIX bundle with required extension/creator SDOs.\n     */\n    private createStixBundle(): BundleSdo {\n        const extensionAuthor = this.createExtensionAuthorSdo();\n        const extension = this.createExtensionSdo(extensionAuthor.id);\n        return {\n            ...this.createSdo(\"bundle\"),\n            objects             : [extension, extensionAuthor]\n        };\n    }\n\n    /**\n     * Creates the extension-definition SDO.\n     * @param creatorId\n     *  The creator's id.\n     * @returns\n     *  The extension-definition SDO.\n     */\n    private createExtensionSdo(creatorId: string): ExtensionSdo {\n        let obj = this.createSdo(\"extension-definition\", AttackFlowExtensionId);\n        return {\n            ...obj,\n            name                : \"Attack Flow\",\n            description         : \"Extends STIX 2.1 with features to create Attack Flows.\",\n            created             : AttackFlowExtensionCreatedDate,\n            modified            : AttackFlowExtensionModifiedDate,\n            created_by_ref      : creatorId,\n            schema              : AttackFlowSchemaUrl,\n            version             : AttackFlowSchemaVersion,\n            extension_types     : [\"new-sdo\"],\n            external_references : [\n                AttackFlowDocsExternalReference,\n                AttackFlowGitHubExternalReference,\n            ]\n        }\n    }\n\n    /**\n     * Creates the extension-definition author SDO.\n     * @returns\n     *  The extension-definition author SDO.\n     */\n    private createExtensionAuthorSdo(): ExtensionAuthorSdo {\n        let obj = this.createSdo(\"identity\", AttackFlowExtensionId);\n        return {\n            ...obj,\n            create_by_ref       : obj.id,\n            name                : AttackFlowExtensionCreatorName,\n            identity_class      : \"organization\",\n            created             : AttackFlowExtensionCreatedDate,\n            modified            : AttackFlowExtensionModifiedDate\n        };\n    }\n\n    /**\n     * Creates the attack flow SDO.\n     * @param id\n     *  The page's id.\n     * @param page\n     *  The page object.\n     * @param authorId\n     *  The author's id.\n     */\n    private createFlowSdo(id: string, page: GraphObjectExport, authorId: string): Sdo {\n\n        // Create flow\n        let flow: Sdo = {\n            ...this.createSdo(page.template.id, id),\n            created_by_ref      : authorId,\n            start_refs          : []\n        }\n\n        // Merge properties\n        for(let [key, prop] of page.props.value) {\n            switch(key) {\n                case \"author\":\n                    // Author SDO is exported separately\n                    break;\n                case \"external_references\":\n                    if(!(prop instanceof ListProperty)) {\n                        throw new Error(`'${ key }' is improperly defined.`);\n                    }\n                    if(prop.descriptor.form.type !== PropertyType.Dictionary) {\n                        throw new Error(`'${ key }' is improperly defined.`);\n                    }\n                    flow[key] = [];\n                    for(let ref of prop.value.values()) {\n                        let entries = ref.toRawValue() as RawEntries;\n                        flow[key].push(Object.fromEntries(entries));\n                    }\n                    break;\n                case \"scope\":\n                    if(!(prop instanceof EnumProperty)) {\n                        throw new Error(`'${ key }' is improperly defined.`);\n                    }\n                    if(!prop.isDefined()) {\n                        break;\n                    }\n                    flow[key] = prop\n                        .toReferenceValue()!\n                        .toString()\n                        .toLocaleLowerCase();\n                    break;\n                default:\n                    if(prop.isDefined()) {\n                        flow[key] = prop.toRawValue()\n                    }\n                    break;\n            }\n        }\n\n        // Return flow\n        return flow;\n\n    }\n\n    /**\n     * Creates the attack flow author SDO.\n     * @param page\n     *  The page object.\n     * @returns\n     *  The attack flow author SDO.\n     */\n    private createFlowAuthorSdo(page: GraphObjectExport): Sdo {\n        let props = page.props.value.get(\"author\");\n\n        // Create author\n        let author = this.createSdo(\"identity\");\n\n        // Merge properties\n        if(props instanceof CollectionProperty) {\n            for(let [key, prop] of props.value) {\n                switch(key) {\n                    case \"identity_class\":\n                        if(!(prop instanceof EnumProperty)) {\n                            throw new Error(`'${ key }' is improperly defined.`);\n                        }\n                        if(!prop.isDefined()) {\n                            break;\n                        }\n                        author[key] = prop\n                            .toReferenceValue()!\n                            .toString()\n                            .toLocaleLowerCase();\n                        break;\n                    default:\n                        if(prop.isDefined()) {\n                            author[key] = prop.toRawValue()\n                        }\n                        break;\n                }\n            }\n        } else {\n            throw new Error(\"'author' is improperly defined.\");\n        }\n\n        // Return author\n        return author;\n\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  4. SDO & SRO  /////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Creates a STIX Domain Object (SDO).\n     * @param template\n     *  The STIX object's template.\n     * @param stixId\n     *  The STIX object's id.\n     *  (Default: Randomly generated)\n     * @returns\n     *  The SDO object.\n     */\n    private createSdo(template: string, stixId: string = Crypto.randomUUID()): Sdo {\n        let now = new Date().toISOString();\n        let type = (AttackFlowTemplatesMap.get(template) ?? template).replace(/_/g, \"-\");\n\n        // Create SDO\n        let sdo: Sdo = {\n            type                : type,\n            id                  : `${ type }--${ stixId }`,\n            spec_version        : \"2.1\",\n            created             : now,\n            modified            : now,\n        }\n\n        // Declare extension on Attack Flow SDOs.\n        if (AttackFlowSdos.has(type)) {\n            sdo.extensions = {\n                [`extension-definition--${ AttackFlowExtensionId }`] : {\n                    extension_type: \"new-sdo\",\n                }\n            };\n        }\n\n        // Return SDO\n        return sdo;\n    }\n\n    /**\n     * Creates a STIX Relationship Object (SRO).\n     * @param parent\n     *  The parent STIX node.\n     * @param child\n     *  The child STIX node.\n     * @param type\n     *  The relationship type.\n     *  (Default: related-to)\n     * @returns\n     *  The SRO object.\n     */\n    private createSro(parent: Sdo, child: Sdo, type: string = \"related-to\"): Sro {\n        const stixId = Crypto.randomUUID();\n        const now = new Date().toISOString();\n        return {\n            type                : \"relationship\",\n            id                  : `relationship--${ stixId }`,\n            spec_version        : \"2.1\",\n            created             : now,\n            modified            : now,\n            relationship_type   : type,\n            source_ref          : parent.id,\n            target_ref          : child.id\n        };\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  5. Helpers  ///////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Resolves a set of subproperties from a collection property.\n     * @param property\n     *  The collection property.\n     * @param ids\n     *  The subproperty id's.\n     * @returns\n     *  The subproperties.\n     */\n    private getSubproperties(property: CollectionProperty, ...ids: string[]): Property[] {\n        let subproperties = [];\n        for(let id of ids) {\n            let prop = property.value.get(id);\n            if(prop) {\n                subproperties.push(prop);\n            } else {\n                throw new Error(`${ id } was not defined on root property.`);\n            }\n        }\n        return subproperties;\n    }\n\n}\n\nexport default AttackFlowPublisher;\n\n\n///////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n\n\ntype Sdo = {\n    type         : string,\n    id           : string,\n    spec_version : string,\n    created      : string,\n    modified     : string,\n    extensions?   : {\n        [key: string] : {\n            extension_type: string\n        }\n    },\n    [key: string]: any\n}\n\ntype Sro = {\n    type              : string,\n    id                : string,\n    spec_version      : string,\n    created           : string,\n    modified          : string,\n    relationship_type : string,\n    source_ref        : string,\n    target_ref        : string\n}\n\ntype ExtensionSdo = Sdo & {\n    name                : string,\n    description         : string,\n    created             : string,\n    modified            : string,\n    created_by_ref      : string,\n    schema              : string,\n    version             : string,\n    extension_types     : string[],\n    external_references : {\n        source_name: string,\n        description: string,\n        url: string\n    }[]\n}\n\ntype ExtensionAuthorSdo = Sdo & {\n    create_by_ref  : string,\n    name           : string,\n    identity_class : string,\n    created        : string,\n    modified       : string\n}\n\ntype BundleSdo = Sdo & {\n    objects : [ExtensionSdo, ExtensionAuthorSdo, ...Sdo[]]\n}\n\ntype Link = {\n    obj: Sdo,\n    via: string\n}\n","import validator from \"./builder.config.validator\";\nimport publisher from \"./builder.config.publisher\";\nimport { AppConfiguration } from \"@/store/StoreTypes\";\nimport { Colors, DarkTheme } from \"./scripts/BlockDiagram/DiagramFactory/Themes\";\nimport {\n    AnchorAngle,\n    EnumPropertyDescriptor,\n    PropertyType,\n    SemanticRole,\n    TemplateType\n} from \"./scripts/BlockDiagram\";\n\nconst BoolEnum: EnumPropertyDescriptor = {\n    type: PropertyType.Enum,\n    options: {\n        type  : PropertyType.List,\n        form  : { type: PropertyType.String },\n        value : [[\"true\", \"True\"], [\"false\", \"False\"]]\n    }\n};\n\nconst config: AppConfiguration = {\n    is_web_hosted: false,\n    file_type_name: \"Attack Flow\",\n    file_type_extension: \"afb\",\n    schema: {\n        page_template: \"flow\",\n        templates: [\n            {\n                id: \"flow\",\n                type: TemplateType.Page,\n                role: SemanticRole.Node,\n                grid: [10, 10],\n                properties: {\n                    name                         : { type: PropertyType.String, value: \"Untitled Document\", is_primary: true },\n                    description                  : { type: PropertyType.String },\n                    author                       : {\n                        type: PropertyType.Dictionary,\n                        form: {\n                            name: { type: PropertyType.String, is_primary: true },\n                            identity_class: {\n                                type: PropertyType.Enum,\n                                options: {\n                                    type  : PropertyType.List,\n                                    form  : { type: PropertyType.String },\n                                    value : [\n                                        [\"individual\", \"Individual\"],\n                                        [\"group\", \"Group\"],\n                                        [\"system\", \"System\"],\n                                        [\"organization\", \"Organization\"],\n                                        [\"class\", \"Class\"],\n                                        [\"unknown\", \"Unknown\"]\n                                    ]\n                                }\n                            },\n                            contact_information: { type: PropertyType.String }\n                        }\n                    },\n                    scope                        : {\n                        type: PropertyType.Enum,\n                        options: {\n                            type: PropertyType.List,\n                            form: { type: PropertyType.String },\n                            value: [\n                                [\"incident\", \"Incident\"],\n                                [\"campaign\", \"Campaign\"],\n                                [\"threat-actor\", \"Threat Actor\"],\n                                [\"malware\", \"Malware\"],\n                                [\"other\", \"Other\"]\n                            ]\n                        },\n                        value: \"incident\"\n                    },\n                    external_references          : {\n                        type: PropertyType.List,\n                        form: {\n                            type: PropertyType.Dictionary,\n                            form: {\n                                source_name: { type: PropertyType.String, is_primary: true, is_required: true },\n                                description: { type: PropertyType.String },\n                                url: { type: PropertyType.String },\n                            }\n                        }\n                    },\n                    created                      : { type: PropertyType.Date, value: new Date(), is_visible: false }\n                },\n                style: DarkTheme.Page()\n            },\n            {\n                id: \"true_anchor\",\n                type: TemplateType.AnchorPoint,\n                role: SemanticRole.None,\n                radius: 10,\n                line_templates: {\n                    [AnchorAngle.DEG_0] : `@__builtin__line_horizontal_elbow`,\n                    [AnchorAngle.DEG_90]: `@__builtin__line_vertical_elbow`\n                },\n                style: DarkTheme.AnchorPoint()\n            },\n            {\n                id: \"false_anchor\",\n                type: TemplateType.AnchorPoint,\n                role: SemanticRole.None,\n                radius: 10,\n                line_templates: {\n                    [AnchorAngle.DEG_0] : `@__builtin__line_horizontal_elbow`,\n                    [AnchorAngle.DEG_90]: `@__builtin__line_vertical_elbow`\n                },\n                style: DarkTheme.AnchorPoint()\n            },\n            {\n                id: \"action\",\n                namespace: \"attack_flow.action\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    tactic_id                    : { type: PropertyType.String },\n                    tactic_ref                   : { type: PropertyType.String },\n                    technique_id                 : { type: PropertyType.String },\n                    technique_ref                : { type: PropertyType.String },\n                    description                  : { type: PropertyType.String },\n                    confidence                   : {\n                        type: PropertyType.Enum,\n                        options: {\n                            type: PropertyType.List,\n                            form: {\n                                type: PropertyType.Dictionary,\n                                form: {\n                                    text  : { type: PropertyType.String, is_primary: true },\n                                    value : { type: PropertyType.Int }\n                                }\n                            },\n                            value: [\n                                [\"speculative\",   { text: \"Speculative\", value: 0 }],\n                                [\"very-doubtful\", { text: \"Very Doubtful\", value: 10 }],\n                                [\"doubtful\",      { text: \"Doubtful\", value: 30 }],\n                                [\"even-odds\",     { text: \"Even Odds\", value: 50 }],\n                                [\"probable\",      { text: \"Probable\", value: 70 }],\n                                [\"very-probable\", { text: \"Very Probable\", value: 90 }],\n                                [\"certain\",       { text: \"Certain\", value: 100 }]\n                            ]\n                        },\n                        value: null\n                    },\n                    execution_start              : { type: PropertyType.Date },\n                    execution_end                : { type: PropertyType.Date },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Blue }})\n            },\n            {\n                id: \"asset\",\n                namespace: \"attack_flow.asset\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true},\n                    description                  : { type: PropertyType.String }\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Orange }})\n            },\n            {\n                id: \"condition\",\n                namespace: \"attack_flow.condition\",\n                type: TemplateType.BranchBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    description                  : { type: PropertyType.String, is_primary: true, is_required: true },\n                    pattern                      : { type: PropertyType.String },\n                    pattern_type                 : { type: PropertyType.String },\n                    pattern_version              : { type: PropertyType.String },\n                    date                         : { type: PropertyType.Date }\n                },\n                branches: [\n                    {\n                        text: \"True\",\n                        anchor_template: \"true_anchor\",\n                    },\n                    {\n                        text: \"False\",\n                        anchor_template: \"false_anchor\"\n                    }\n                ],\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.BranchBlock({ head: { ...Colors.Green }})\n            },\n            {\n                id: \"or\",\n                namespace: \"attack_flow.OR_operator\",\n                type: TemplateType.TextBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    operator: {\n                        type: PropertyType.String,\n                        value: \"OR\",\n                        is_primary: true,\n                        is_visible: false,\n                        is_editable: false,\n                    }\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.TextBlock({ ...Colors.Red, horizontal_padding: 35 })\n            },\n            {\n                id: \"and\",\n                namespace: \"attack_flow.AND_operator\",\n                type: TemplateType.TextBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    operator: {\n                        type: PropertyType.String,\n                        value: \"AND\",\n                        is_primary: true,\n                        is_visible: false,\n                        is_editable: false,\n                    }\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.TextBlock({ ...Colors.Red, horizontal_padding: 35 })\n            },\n            {\n                id: \"attack_pattern\",\n                namespace: \"stix_object.attack_pattern\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    aliases                      : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    kill_chain_phases            : { type: PropertyType.List, form: { type: PropertyType.String }},\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"campaign\",\n                namespace: \"stix_object.campaign\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    aliases                      : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    first_seen                   : { type: PropertyType.Date },\n                    last_seen                    : { type: PropertyType.Date },\n                    objective                    : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"course_of_action\",\n                namespace: \"stix_object.course_of_action\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    action_type                  : { type: PropertyType.String },\n                    os_execution_envs            : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    action_bin                   : { type: PropertyType.String }\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"grouping\",\n                namespace: \"stix_object.grouping\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true },\n                    description                  : { type: PropertyType.String },\n                    context                      : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"identity\",\n                namespace: \"stix_object.identity\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_required: true, is_primary: true },\n                    description                  : { type: PropertyType.String },\n                    roles                        : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    identity_class               : { type: PropertyType.String, is_required: true },\n                    sectors                      : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    contact_information          : { type: PropertyType.String }\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"indicator\",\n                namespace: \"stix_object.indicator\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true },\n                    description                  : { type: PropertyType.String },\n                    indicator_types              : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true } },\n                    pattern                      : { type: PropertyType.String, is_required: true },\n                    pattern_type                 : { type: PropertyType.String, is_required: true },\n                    patter_version               : { type: PropertyType.String },\n                    valid_from                   : { type: PropertyType.Date, is_required: true},\n                    valid_until                  : { type: PropertyType.Date },\n                    kill_chain_phases            : { type: PropertyType.List, form: { type: PropertyType.String }},\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"infrastructure\",\n                namespace: \"stix_object.infrastructure\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    infrastructure_types         : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true }},\n                    aliases                      : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    kill_chain_phases            : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    first_seen                   : { type: PropertyType.Date },\n                    last_seen                    : { type: PropertyType.Date }\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"intrusion_set\",\n                namespace: \"stix_object.intrusion_set\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    aliases                      : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true }},\n                    first_seen                   : { type: PropertyType.Date },\n                    last_seen                    : { type: PropertyType.Date },\n                    goals                        : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    resource_level               : { type: PropertyType.String},\n                    primary_motivation           : { type: PropertyType.String},\n                    secondary_motivations        : { type: PropertyType.List, form: { type: PropertyType.String }},\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"location\",\n                namespace: \"stix_object.location\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true },\n                    description                  : { type: PropertyType.String },\n                    latitude                     : { type: PropertyType.Float, min: -90, max: 90 },\n                    longitude                    : { type: PropertyType.Float, min: -180, max: 180 },\n                    precision                    : { type: PropertyType.Float },\n                    region                       : { type: PropertyType.String },\n                    country                      : { type: PropertyType.String },\n                    administrative_area          : { type: PropertyType.String },\n                    city                         : { type: PropertyType.String },\n                    street_address               : { type: PropertyType.String },\n                    postal_code                  : { type: PropertyType.String }\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"malware\",\n                namespace: \"stix_object.malware\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true },\n                    description                  : { type: PropertyType.String },\n                    malware_types                : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true }},\n                    is_family                    : { ...BoolEnum, is_required: true },\n                    aliases                      : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    kill_chain_phases            : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    first_seen                   : { type: PropertyType.Date },\n                    last_seen                    : { type: PropertyType.Date },\n                    os_execution_envs            : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    architecture_execution_envs  : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    implementation_languages     : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    capabilities                 : { type: PropertyType.List, form: { type: PropertyType.String } },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"malware_analysis\",\n                namespace: \"stix_object.malware_analysis\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    product                      : { type: PropertyType.String, is_primary: true, is_required: true },\n                    version                      : { type: PropertyType.String },\n                    configuration_version        : { type: PropertyType.String },\n                    modules                      : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    analysis_engine_version      : { type: PropertyType.String },\n                    analysis_definition_version  : { type: PropertyType.String },\n                    submitted                    : { type: PropertyType.Date },\n                    analysis_started             : { type: PropertyType.Date },\n                    analysis_ended               : { type: PropertyType.Date },\n                    av_result                    : { type: PropertyType.String},\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"note\",\n                namespace: \"stix_object.note\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    abstract                     : { type: PropertyType.String, is_primary: true },\n                    content                      : { type: PropertyType.String, is_required: true },\n                    authors                      : { type: PropertyType.List, form: { type: PropertyType.String } },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"observed_data\",\n                namespace: \"stix_object.observed_data\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    first_observed               : { type: PropertyType.Date, is_required: true },\n                    last_observed                : { type: PropertyType.Date, is_required: true },\n                    number_observed              : { type: PropertyType.Int, min: 0, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"opinion\",\n                namespace: \"stix_object.opinion\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    explanation                  : { type: PropertyType.String, is_primary: true },\n                    authors                      : { type: PropertyType.List, form: { type: PropertyType.String } },\n                    opinion                      : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"report\",\n                namespace: \"stix_object.report\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    report_types                 : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true }},\n                    published                    : { type: PropertyType.Date, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"threat_actor\",\n                namespace: \"stix_object.threat_actor\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    threat_actor_types           : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true }},\n                    aliases                      : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    first_seen                   : { type: PropertyType.Date },\n                    last_seen                    : { type: PropertyType.Date },\n                    roles                        : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    goals                        : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    sophistication               : { type: PropertyType.String },\n                    resource_level               : { type: PropertyType.String },\n                    primary_motivation           : { type: PropertyType.String },\n                    secondary_motivations        : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    personal_motivations         : { type: PropertyType.List, form: { type: PropertyType.String }},\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"tool\",\n                namespace: \"stix_object.tool\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                    tool_types                   : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true }},\n                    aliases                      : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    kill_chain_phases            : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    tool_version                 : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"vulnerability\",\n                namespace: \"stix_object.vulnerability\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    description                  : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"artifact\",\n                namespace: \"stix_observable.artifact\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    mime_type                    : { type: PropertyType.String },\n                    payload_bin                  : { type: PropertyType.String },\n                    url                          : { type: PropertyType.String },\n                    hashes                       : { type: PropertyType.String },\n                    encryption_algorithm         : { type: PropertyType.String },\n                    decryption_key               : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"autonomous_system\",\n                namespace: \"stix_observable.autonomous_system\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    number                       : { type: PropertyType.String, is_primary: true, is_required: true },\n                    name                         : { type: PropertyType.String },\n                    rir                          : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"directory\",\n                namespace: \"stix_observable.directory\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    path                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    path_enc                     : { type: PropertyType.String },\n                    ctime                        : { type: PropertyType.Date },\n                    mtime                        : { type: PropertyType.Date },\n                    atime                        : { type: PropertyType.Date },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"domain_name\",\n                namespace: \"stix_observable.domain_name\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    value                        : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"email_address\",\n                namespace: \"stix_observable.email_address\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    value                        : { type: PropertyType.String, is_required: true },\n                    display_name                 : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"email_message\",\n                namespace: \"stix_observable.email_message\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    is_multipart                 : { ...BoolEnum, is_required: true },\n                    date                         : { type: PropertyType.String },\n                    content_type                 : { type: PropertyType.String },\n                    message_id                   : { type: PropertyType.String },\n                    subject                      : { type: PropertyType.String, is_primary: true },\n                    received_lines               : { type: PropertyType.String },\n                    additional_header_fields     : { type: PropertyType.String },\n                    body                         : { type: PropertyType.String },\n                    body_multipart               : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"file\",\n                namespace: \"stix_observable.file\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    hashes                       : { type: PropertyType.String },\n                    size                         : { type: PropertyType.String },\n                    name                         : { type: PropertyType.String, is_primary: true },\n                    name_enc                     : { type: PropertyType.String },\n                    magic_number_hex             : { type: PropertyType.String },\n                    mime_type                    : { type: PropertyType.String },\n                    ctime                        : { type: PropertyType.Date },\n                    mtime                        : { type: PropertyType.Date },\n                    atime                        : { type: PropertyType.Date },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"ipv4_addr\",\n                namespace: \"stix_observable.ipv4_addr\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    value                        : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"ipv6_addr\",\n                namespace: \"stix_observable.ipv6_addr\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    value                        : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"mac_addr\",\n                namespace: \"stix_observable.mac_addr\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    value                        : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"mutex\",\n                namespace: \"stix_observable.mutex\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"network_traffic\",\n                namespace: \"stix_observable.network_traffic\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    start                        : { type: PropertyType.Date },\n                    end                          : { type: PropertyType.Date },\n                    is_active                    : BoolEnum,\n                    src_port                     : { type: PropertyType.Int, min: 0, max: 65535 },\n                    dst_port                     : { type: PropertyType.Int, min: 0, max: 65535 },\n                    protocols                    : { type: PropertyType.List, form: { type: PropertyType.String, is_required: true }},\n                    src_byte_count               : { type: PropertyType.Int, min: 0 },\n                    dst_byte_count               : { type: PropertyType.Int, min: 0 },\n                    src_packets                  : { type: PropertyType.Int, min: 0 },\n                    dst_packets                  : { type: PropertyType.Int, min: 0 },\n                    ipfix                        : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"process\",\n                namespace: \"stix_observable.process\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    is_hidden                    : BoolEnum,\n                    pid                          : { type: PropertyType.Int, min: 0 },\n                    created_time                 : { type: PropertyType.Date },\n                    cwd                          : { type: PropertyType.String },\n                    command_line                 : { type: PropertyType.String, is_required: true },\n                    environment_variables        : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"software\",\n                namespace: \"stix_observable.software\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    name                         : { type: PropertyType.String, is_primary: true, is_required: true },\n                    cpe                          : { type: PropertyType.String },\n                    languages                    : { type: PropertyType.List, form: {type: PropertyType.String}},\n                    vendor                       : { type: PropertyType.String },\n                    version                      : { type: PropertyType.String },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"url\",\n                namespace: \"stix_observable.url\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    value                        : { type: PropertyType.String, is_required: true },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"user_account\",\n                namespace: \"stix_observable.user_account\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    user_id                      : { type: PropertyType.String },\n                    credential                   : { type: PropertyType.String },\n                    account_login                : { type: PropertyType.String },\n                    account_type                 : { type: PropertyType.String },\n                    display_name                 : { type: PropertyType.String, is_primary: true, is_required: true },\n                    is_service_account           : BoolEnum,\n                    is_privileged                : BoolEnum,\n                    can_escalate_privs           : BoolEnum,\n                    is_disabled                  : BoolEnum,\n                    account_created              : { type: PropertyType.Date },\n                    account_expires              : { type: PropertyType.Date },\n                    credential_last_changed      : { type: PropertyType.Date },\n                    account_first_login          : { type: PropertyType.Date },\n                    account_last_login           : { type: PropertyType.Date },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"windows_registry_key\",\n                namespace: \"stix_observable.windows_registry_key\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    key                          : { type: PropertyType.String, is_primary: true },\n                    values                       : { type: PropertyType.List, form: { type: PropertyType.String }},\n                    modified_time                : { type: PropertyType.Date },\n                    number_of_subkeys            : { type: PropertyType.Int, min: 0 },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            },\n            {\n                id: \"x509_certificate\",\n                namespace: \"stix_observable.x509_certificate\",\n                type: TemplateType.DictionaryBlock,\n                role: SemanticRole.Node,\n                properties: {\n                    subject                      : { type: PropertyType.String, is_primary: true, is_required: true },\n                    is_self_signed               : BoolEnum,\n                    hashes                       : { type: PropertyType.String },\n                    version                      : { type: PropertyType.String },\n                    serial_number                : { type: PropertyType.String },\n                    signature_algorithm          : { type: PropertyType.String },\n                    issuer                       : { type: PropertyType.String },\n                    validity_not_before          : { type: PropertyType.Date },\n                    validity_not_after           : { type: PropertyType.Date },\n                    subject_public_key_algorithm : { type: PropertyType.String },\n                    subject_public_key_modulus   : { type: PropertyType.String },\n                    subject_public_key_exponent  : { type: PropertyType.Int, min: 0 },\n                },\n                anchor_template: \"@__builtin__anchor\",\n                style: DarkTheme.DictionaryBlock({ head: { ...Colors.Gray }})\n            }\n        ]\n    },\n    menus: {\n        help_menu: {\n            help_links: [\n                {\n                    text: \"Attack Flow Website\",\n                    url: \"https://center-for-threat-informed-defense.github.io/attack-flow/\"\n                },\n                {\n                    text: \"Attack Flow Builder Help\",\n                    url: \"https://center-for-threat-informed-defense.github.io/attack-flow/builder/\"\n                },\n                {\n                    text: \"MITRE ATT&CK Framework\",\n                    url: \"https://attack.mitre.org/\"\n                },\n                {\n                    text: \"GitHub Repository\",\n                    url: \"https://github.com/center-for-threat-informed-defense/attack-flow\"\n                },\n                {\n                    text: \"Change Log\",\n                    url: \"https://center-for-threat-informed-defense.github.io/attack-flow/builder/\"\n                }\n            ]\n        }\n    },\n    validator,\n    publisher\n};\n\nexport default config;\n","import { ApplicationStore } from \"@/store/StoreTypes\";\n\nexport abstract class AppCommand  {\n\n    /**\n     * The application context.\n     */\n    protected _context: ApplicationStore;\n\n\n    /**\n     * Creates a new {@link AppCommand}.\n     * @param context\n     *  The application context.\n     */\n    constructor(context: ApplicationStore) {\n        this._context = context;\n    }\n\n\n    /**\n     * Executes an application command.\n     */\n    public abstract execute(): void;\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class CopySelectedChildren extends AppCommand {\n\n    /**\n     * The objects to add to the clipboard.\n     */\n    private _objects: DiagramObjectModel[];\n\n\n    /**\n     * Copies an object's selected children to the application's clipboard.\n     * @param context\n     *  The application context.\n     * @param object\n     *  The object.\n     */\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\n        super(context);\n        // Get selected children\n        let objects = object.children.filter(c => c.isSelected());\n        // Clone selection\n        let o = context.settings.edit.clone_offset;\n        let clones = object.factory.cloneObjects(...objects);\n        for(let obj of clones) {\n            obj.moveBy(o[0], o[1]);\n        }\n        this._objects = clones;\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        this._context.clipboard = this._objects;\n    }\n\n}\n","export class Browser {\n    \n\n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Download Files  ////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * The internal download link used to initiate downloads.\n     */\n    private static _aLink = document.createElement(\"a\");\n\n    /**\n     * Downloads a text file.\n     * @param filename\n     *  The text file's name.\n     * @param text\n     *  The text file's contents.\n     * @param ext\n     *  The text file's extension.\n     *  (Default: 'txt')\n     */\n    public static downloadTextFile(filename: string, text: string, ext = \"txt\") {\n        let blob = new Blob([text], { type: \"octet/stream\" });\n        let url = window.URL.createObjectURL(blob);\n        this._aLink.href = url;\n        this._aLink.download = `${ filename }.${ ext }`;\n        this._aLink.click();\n        window.URL.revokeObjectURL(url);\n    }\n\n    /**\n     * Downloads an image file.\n     * @param filename\n     *  The image file's name.\n     * @param canvas\n     *  The image file's contents.\n     */\n    public static downloadImageFile(filename: string, canvas: HTMLCanvasElement) {\n        canvas.toBlob(blob => {\n            if(!blob)\n                return;\n            let url = window.URL.createObjectURL(blob);\n            this._aLink.href = url;\n            this._aLink.download = `${ filename }.png`\n            this._aLink.click();\n            window.URL.revokeObjectURL(url);\n        }, \"image/octet-stream\")\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. File Selection Dialogs  ////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    \n    \n    /**\n     * Prompts the user to select a text file from their file system.\n     * @returns\n     *  A Promise that resolves with the chosen text file.\n     */\n    public static openTextFileDialog(): Promise<TextFile> {\n            \n        // Create file input\n        let fileInput = document.createElement(\"input\");\n        fileInput.type = \"file\";\n        \n        // Configure file input\n        let result = new Promise<TextFile>((resolve) => {\n            fileInput.addEventListener(\"change\", (event) => {\n                let file = (event.target as any).files[0];\n                let reader = new FileReader();\n                reader.onload = (e: ProgressEvent<FileReader>) => {\n                    resolve({\n                        filename: file.name,\n                        contents: e.target?.result\n                    });\n                }\n                reader.readAsText(file);\n            });\n        });\n        \n        // Click file input\n        fileInput.click();\n        \n        // Return result\n        return result;\n\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Browser Window Control  ////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Opens an element in fullscreen.\n     * @param el\n     *  The element to fullscreen.\n     *  (Default: `document.body`)\n     */\n    public static fullscreen(el: HTMLElement = document.body) {\n        let cast = el as any;\n        if (cast.requestFullscreen) {\n            cast.requestFullscreen();\n        } else if (cast.webkitRequestFullscreen) {\n            // Safari\n            cast.webkitRequestFullscreen();\n        } else if (cast.msRequestFullscreen) {\n            // IE11\n            cast.msRequestFullscreen();\n        }\n    }\n    \n    \n}\n\n\n///////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////\n\n\ntype TextFile = {\n    filename: string,\n    contents: string | ArrayBuffer | null | undefined\n}\n","import pkg from \"~/package.json\";\nimport Configuration from \"@/assets/builder.config\";\nimport { PageCommand } from \"./Commands/PageCommand\";\nimport { markRaw, ref, Ref } from \"vue\";\nimport {\n    DiagramValidator,\n    ValidationErrorResult,\n    ValidationWarningResult\n} from \"@/assets/scripts/DiagramValidator\";\nimport { \n    BlockDiagramSchema,\n    CameraLocation,\n    DiagramFactory,\n    DiagramObjectExport,\n    DiagramObjectModel,\n    PageModel\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class PageEditor {\n\n    /**\n     * The page's id.\n     */\n    public id: string;\n\n    /**\n     * The page.\n     */\n    public page: PageModel;\n\n    /**\n     * The editor's update trigger.\n     */\n    public trigger: Ref<number>;\n    \n    /**\n     * The editor's front-end view parameters.\n     */\n    public view: EditorViewParameters;\n\n    /**\n     * The editor's pointer location.\n     */\n    public pointer: Ref<PointerLocation>;\n\n    /**\n     * The editor's camera location.\n     */\n    public location: Ref<CameraLocation>;\n\n    /**\n     * The editor's undo stack.\n     */\n    private _undoStack: PageCommand[];\n\n    /**\n     * The editor's redo stack.\n     */\n    private _redoStack: PageCommand[];\n\n    /**\n     * The editor's page validator.\n     */\n    private _validator: DiagramValidator | undefined;\n\n\n    /**\n     * Creates a new {@link PageEditor}.\n     * @param page\n     *  The page to manage.\n     */\n    private constructor(page: PageModel);\n\n    /**\n     * Creates a new {@link PageEditor}.\n     * @param page\n     *  The page to manage.\n     * @param location\n     *  The editor's camera location.\n     */\n    private constructor(page: PageModel, location: CameraLocation);\n    private constructor(page: PageModel, location?: CameraLocation) {\n        this.id = page.id;\n        this.page = page;\n        this.trigger = ref(0);\n        this.view = { x: 0, y:0, k: 1, w: 0, h: 0 };\n        this.pointer = ref({ x: 0, y: 0 });\n        this.location = ref(location ?? { x: 0, y: 0, k: 1 });\n        this._undoStack = [];\n        this._redoStack = [];\n        if(Configuration.validator) {\n            this._validator = new Configuration.validator();\n            this._validator.run(page);\n        }\n    }\n    \n\n    /**\n     * Returns a dummy {@link PageEditor}.\n     * @returns\n     *  A dummy {@link PageEditor}.\n     */\n    public static createDummy(): PageEditor {\n        return markRaw(new this(PageModel.createDummy()));\n    }\n\n    \n    ///////////////////////////////////////////////////////////////////////////\n    //  1. Command Execution  /////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Executes a page command.\n     * @param command\n     *  The command.\n     */\n    public execute(command: PageCommand) {\n        if(command.page !== this.page.id) {\n            throw new Error(\n                \"Command is not configured to operate on this page.\"\n            );\n        }\n        if(command.execute()) {\n            this._redoStack = [];\n            this._undoStack.push(command);\n        }\n        this._validator?.run(this.page);\n        this.trigger.value++;\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  2. Page History  //////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Undoes the last page command.\n     */\n    public undo() {\n        if(this._undoStack.length) {\n            this._undoStack.at(-1)!.undo();\n            this._redoStack.push(this._undoStack.pop()!);\n        }\n    }\n\n    /**\n     * Tests if the last command can be undone.\n     * @returns\n     *  True if the last command can be undone, false otherwise.\n     */\n    public canUndo(): boolean {\n        return 0 < this._undoStack.length;\n    }\n\n    /**\n     * Redoes the last undone page command.\n     */\n    public redo() {\n        if(this._redoStack.length) {\n            this._redoStack.at(-1)!.execute();\n            this._undoStack.push(this._redoStack.pop()!);\n        }\n    }\n\n    /**\n     * Tests if the last undone command can be redone.\n     * @returns\n     *  True if the last undone command can be redone, false otherwise.\n     */\n    public canRedo(): boolean {\n        return 0 < this._redoStack.length;\n    }   \n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  3. Page Validation  ///////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Tests if the page represents a valid diagram per the configured\n     * validator. If the application is not configured with a validator, `true`\n     * is returned by default.\n     * @returns\n     *  True if the page is valid, false otherwise.\n     */\n    public isValid() {\n        return this._validator?.inValidState() ?? true;\n    }\n\n    /**\n     * Returns the page's validation errors per the configured validator.\n     * @returns\n     *  The page's validation errors.\n     */\n    public getValidationErrors(): ValidationErrorResult[] {\n        return this._validator?.getErrors() ?? [];\n    }\n\n    /**\n     * Returns the page's validation warnings per the configured validator.\n     * @returns\n     *  The page's validation errors.\n     */\n    public getValidationWarnings(): ValidationWarningResult[] {\n        return this._validator?.getWarnings() ?? [];\n    }\n\n\n    ///////////////////////////////////////////////////////////////////////////\n    //  4. Page Import & Export  //////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    /**\n     * Creates a new page.\n     * @param schema\n     *  The page's internal schema.\n     * @returns\n     *  The page's editor.\n     */\n    public static async createNew(schema: BlockDiagramSchema): Promise<PageEditor> {\n        let factory = await DiagramFactory.create(schema);\n        let page = factory.createObject(schema.page_template) as PageModel;\n        return markRaw(new PageEditor(page));\n    }\n\n    /**\n     * Deserializes a page export.\n     * @param file\n     *  The page export.\n     * @returns\n     *  The page's editor.\n     */\n    public static async fromFile(file: string): Promise<PageEditor> {\n        \n        // Parse document\n        let page = JSON.parse(file) as PageExport;\n\n        // Initialize diagram factory\n        let factory = await DiagramFactory.create(page.schema);\n        \n        // Compile export index\n        let index = new Map<string, DiagramObjectExport>();\n        for(let obj of page.objects) {\n            index.set(obj.id, obj);\n        }\n\n        // Initialize page model\n        let pageExp = index.get(page.id)!\n        let pageObj = (function deserialize(\n            exp: DiagramObjectExport,\n            expIndex: Map<string, DiagramObjectExport>,\n            objIndex: Map<string, DiagramObjectModel>,\n            factory: DiagramFactory\n        ): DiagramObjectModel {\n\n            // Create object\n            if(!objIndex.has(exp.id)) {\n                let children: DiagramObjectModel[] = []\n                for(let id of exp.children) {\n                    children.push(deserialize(\n                        index.get(id)!,\n                        expIndex,\n                        objIndex,\n                        factory\n                    ));\n                }\n                let obj = factory.createObject({ ...exp, children });\n                objIndex.set(obj.id, obj);\n            }\n            \n            // Return object\n            return objIndex.get(exp.id)!;\n\n        })(pageExp, index, new Map(), factory) as PageModel;\n\n        // Recalculate layout\n        pageObj.recalculateLayout();\n\n        // Return editor\n        return markRaw(new PageEditor(pageObj, page.location));\n\n    }\n\n    /**\n     * Exports the page as a text file.\n     * @returns\n     *  The serialized page.\n     */\n    public toFile(): string {\n        // Calculate camera location\n        let v = this.view;\n        let location = {\n            x: ((v.w / 2) - v.x) / v.k,\n            y: ((v.h / 2) - v.y) / v.k,\n            k: v.k\n        }\n        // Compile export\n        let doc: PageExport = {\n            version: pkg.version,\n            id: this.page.id,\n            schema: this.page.factory.getSchema(),\n            objects: [...this.page.getSubtree()].map(o => o.toExport()),\n            location: location\n        }\n        return JSON.stringify(doc);\n    }\n\n    /**\n     * TODO:\n     * In the future, a document will bundle multiple pages together. One or\n     * more pages can be exported into a document bundle and multiple document\n     * bundles can be imported at once. Documents \"unwrap\" and dump their pages\n     * into the application. Documents contain no information other than the\n     * pages.  \n     */\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Editor View Parameters  ///////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport type EditorViewParameters = {\n\n    /**\n     * The editor view's left x-coordinate.\n     */\n    x: number\n\n    /**\n     * The editor view's top y-coordinate.\n     */\n    y: number\n\n    /**\n     * The editor view's scale.\n     */\n    k: number\n\n    /**\n     * The editor view's width.\n     */\n    w: number\n\n    /**\n     * The editor view's height.\n     */\n    h: number\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  Internal Types  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ntype PointerLocation = {\n\n    /**\n     * The pointer's x coordinate.\n     */\n    x: number,\n\n    /**\n     * The pointer's y coordinate.\n     */\n    y: number\n\n}\n\ntype PageExport = {\n\n    /**\n     * The application's version number.\n     */\n    version: string\n    \n    /**\n     * The page's id.\n     */\n    id: string\n\n    /**\n     * The page's internal schema.\n     */\n    schema: BlockDiagramSchema\n\n    /**\n     * The page's diagram objects.\n     */\n    objects: DiagramObjectExport[]\n\n    /**\n     * The page's camera location.\n     */\n    location: CameraLocation\n\n}\n","import Configuration from \"@/assets/builder.config\";\nimport { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { Browser } from \"@/assets/scripts/Browser\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class LoadFile extends AppCommand {\n\n    /**\n     * The page editor to load.\n     */\n    private _editor: PageEditor;\n\n\n    /**\n     * Loads a page editor into the application.\n     * @param context\n     *  The application context.\n     * @param file\n     *  The page editor to load.\n     */\n    constructor(context: ApplicationStore, file: PageEditor) {\n        super(context);\n        this._editor = file;\n    }\n\n\n    /**\n     * Loads an empty page file into the application.\n     * @param context\n     *  The application context.\n     * @returns\n     *  The {@link LoadFile} command.\n     */\n    public static async fromNew(context: ApplicationStore): Promise<LoadFile> {\n        let schema = structuredClone(Configuration.schema);\n        let page = await PageEditor.createNew(schema);\n        return new LoadFile(context, page);\n    }\n\n    /**\n     * Loads a page export into the application.\n     * @param context\n     *  The application context.\n     * @param file\n     *  The page export.\n     * @returns\n     *  The {@link LoadFile} command.\n     */\n    public static async fromFile(context: ApplicationStore, file: string): Promise<LoadFile> {\n        let page = await PageEditor.fromFile(file);\n        return new LoadFile(context, page);\n    }\n\n    /**\n     * Loads a page file from the file system, into the application.\n     * @param context\n     *  The application context.\n     * @returns\n     *  The {@link LoadFile} command.\n     */\n    public static async fromFileSystem(context: ApplicationStore): Promise<LoadFile> {\n        let file = (await Browser.openTextFileDialog()).contents as string;\n        let page = await PageEditor.fromFile(file);\n        return new LoadFile(context, page);\n    }\n\n    /**\n     * Loads a page file from a remote url, into the application.\n     * @param context\n     *  The application context.\n     * @param url\n     *  The remote url.\n     * @returns\n     *  The {@link LoadFile} command.\n     */\n    public static async fromUrl(context: ApplicationStore, url: string): Promise<LoadFile> {\n        let file = await (await fetch(url, { credentials: \"omit\" })).text();\n        let page = await PageEditor.fromFile(file);\n        return new LoadFile(context, page);\n    }\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        // NOTE: For now, only one page will be loaded at a time.\n        this._context.pages.clear();\n        this._context.pages.set(this._editor.id, this._editor);\n        this._context.activePage = this._editor;\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore, AppSettings } from \"@/store/StoreTypes\";\n\nexport class LoadSettings extends AppCommand {\n\n    /**\n     * The application's settings.\n     */\n    private _settings: AppSettings;\n\n\n    /**\n     * Configures the application's settings.\n     * @param context\n     *  The application context.\n     * @param settings\n     *  The application's settings.\n     */\n    constructor(context: ApplicationStore, settings: AppSettings) {\n        super(context);\n        this._settings = settings;\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        this._context.settings = this._settings; \n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\n\nexport class OpenHyperlink extends AppCommand {\n\n    /**\n     * The hyperlink's url.\n     */\n    private _url: string;\n\n\n    /**\n     * Opens an external hyperlink.\n     * @param context\n     *  The application context.\n     * @param url\n     *  The hyperlink's url.\n     */\n    constructor(context: ApplicationStore, url: string) {\n        super(context);\n        this._url = url;\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        window.open(this._url, \"_blank\");\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { Browser } from \"@/assets/scripts/Browser\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class PublishPageToDevice extends AppCommand {\n\n    /**\n     * The page's editor.\n     */\n    private _editor: PageEditor;\n\n\n    /**\n     * Publishes a page to the user's file system.\n     * @param context\n     *  The application context.\n     * @param id\n     *  The id of the page.\n     */\n    constructor(context: ApplicationStore, id: string) {\n        super(context);\n        let editor = context.pages.get(id);\n        if(!editor) {\n            throw new Error(`Page '${ id }' not found.`);\n        } else if(!editor.isValid()) {\n            throw new Error(`Page '${ id }' is not valid.`);\n        } else if(!this._context.publisher) {\n            throw new Error(`App is not configured with a publisher.`);\n        } else {\n            this._editor = editor;\n        }\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        Browser.downloadTextFile(\n            this._editor.page.props.toString(),\n            this._context.publisher!.publish(this._editor.page),\n            \"json\"\n        );\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { Browser } from \"@/assets/scripts/Browser\";\nimport { PageImage } from \"@/assets/scripts/BlockDiagram/PageImage\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class SavePageImageToDevice extends AppCommand {\n\n    /**\n     * The page's editor.\n     */\n    private _editor: PageEditor;\n\n\n    /**\n     * Saves a page as an image to the user's file system.\n     * @param context\n     *  The application context.\n     * @param id\n     *  The id of the page.\n     */\n    constructor(context: ApplicationStore, id: string) {\n        super(context);\n        let editor = context.pages.get(id);\n        if(!editor) {\n            throw new Error(`Page '${ id }' not found.`);\n        } else {\n            this._editor = editor;\n        }\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        let d = this._context.settings.view.diagram;         \n        let e = this._context.settings.file.image_export;\n        let image = new PageImage(\n            this._editor.page,\n            e.padding,\n            d.display_grid,\n            d.display_shadows,\n            d.display_debug_mode\n        );\n        Browser.downloadImageFile(\n            this._editor.page.props.toString(),\n            image.capture()\n        );\n    }\n\n}\n","import Configuration from \"@/assets/builder.config\";\nimport { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { Browser } from \"@/assets/scripts/Browser\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class SavePageToDevice extends AppCommand {\n\n    /**\n     * The page's editor.\n     */\n    private _editor: PageEditor;\n\n\n    /**\n     * Saves a page to the user's file system.\n     * @param context\n     *  The application context.\n     * @param id\n     *  The id of the page.\n     */\n    constructor(context: ApplicationStore, id: string) {\n        super(context);\n        let editor = context.pages.get(id);\n        if(!editor) {\n            throw new Error(`Page '${ id }' not found.`);\n        } else {\n            this._editor = editor;\n        }\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        Browser.downloadTextFile(\n            this._editor.page.props.toString(),\n            this._editor.toFile(),\n            Configuration.file_type_extension\n        );\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { Browser } from \"@/assets/scripts/Browser\";\nimport { PageImage } from \"@/assets/scripts/BlockDiagram/PageImage\";\nimport { PageEditor } from \"@/store/PageEditor\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class SaveSelectionImageToDevice extends AppCommand {\n\n    /**\n     * The page's editor.\n     */\n    private _editor: PageEditor;\n\n    /**\n     * The objects to capture. \n     */\n    private _objects: DiagramObjectModel[]\n\n\n    /**\n     * Saves a page's selection as an image to the user's file system.\n     * @param context\n     *  The application context.\n     * @param id\n     *  The id of the page.\n     */\n    constructor(context: ApplicationStore, id: string) {\n        super(context);\n        let editor = context.pages.get(id);\n        if(!editor) {\n            throw new Error(`Page '${ id }' not found.`);\n        } else {\n            this._editor = editor;\n        }\n        this._objects = [...editor.page.getSubtree(o => o.isSelected())];\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        let d = this._context.settings.view.diagram;         \n        let e = this._context.settings.file.image_export;\n        let image = new PageImage(\n            this._editor.page,\n            e.padding,\n            d.display_grid,\n            d.display_shadows,\n            d.display_debug_mode\n        );\n        Browser.downloadImageFile(\n            this._editor.page.props.toString(),\n            image.capture(this._objects)\n        );\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class SetEditorPointerLocation extends AppCommand {\n\n    /**\n     * The editor.\n     */\n    private _editor: PageEditor;\n\n    /**\n     * The pointer's x location.\n     */\n    private _x: number;\n\n    /**\n     * The pointer's y location.\n     */\n    private _y: number; \n\n\n    /**\n     * Sets a page editor's pointer location.\n     * @param context\n     *  The application context.\n     * @param id\n     *  The id of the page.\n     * @param x\n     *  The pointer's x location.\n     * @param y\n     *  The pointer's y location.\n     */\n    constructor(context: ApplicationStore, id: string, x: number, y: number) {\n        super(context);\n        let editor = context.pages.get(id);\n        if(!editor) {\n            throw new Error(`Page '${ id }' not found.`);\n        } else {\n            this._editor = editor;\n        }\n        this._x = x;\n        this._y = y;\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        this._editor.pointer.value = { x: this._x, y: this._y };\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { EditorViewParameters, PageEditor } from \"@/store/PageEditor\";\n\nexport class SetEditorViewParams extends AppCommand {\n\n    /**\n     * The editor.\n     */\n    private _editor: PageEditor;\n\n    /**\n     * The new front-end view parameters.\n     */\n    private _params: EditorViewParameters;\n\n\n    /**\n     * Sets a page editor's front-end view parameters.\n     * @param context\n     *  The application context.\n     * @param id\n     *  The id of the page.\n     * @param params\n     *  The new front-end view parameters.\n     */\n    constructor(context: ApplicationStore, id: string, params: EditorViewParameters) {\n        super(context);\n        let editor = context.pages.get(id);\n        if(!editor) {\n            throw new Error(`Page '${ id }' not found.`);\n        } else {\n            this._editor = editor;\n        }\n        this._params = params;\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        this._editor.view = this._params;\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\n\nexport class SetRenderQuality extends AppCommand {\n\n    /**\n     * If the render quality should be high (true) or low (false).\n     */\n    private _highQuality: boolean;\n\n\n    /**\n     * Sets the diagram's render quality.\n     * @param context\n     *  The application context.\n     * @param highQuality\n     *  If the render quality should be high (true) or low (false).\n     */\n    constructor(context: ApplicationStore, highQuality: boolean) {\n        super(context);\n        this._highQuality = highQuality;\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        let { diagram } = this._context.settings.view;\n        diagram.render_high_quality = this._highQuality;\n    }\n\n}\n","import { ApplicationStore } from \"@/store/StoreTypes\";\nimport { AppCommand } from \"../AppCommand\";\n\nexport class SwitchToFullscreen extends AppCommand {\n\n    /**\n     * Switches the application to fullscreen mode.\n     * @param context\n     *  The application context.\n     */\n    constructor(context: ApplicationStore) {\n        super(context);\n    }\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        let cast = document.body as any;\n        if (cast.requestFullscreen) {\n            cast.requestFullscreen();\n        } else if (cast.webkitRequestFullscreen) {\n            // Safari\n            cast.webkitRequestFullscreen();\n        } else if (cast.msRequestFullscreen) {\n            // IE11\n            cast.msRequestFullscreen();\n        }\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\n\nexport class ToggleDebugDisplay extends AppCommand {\n\n    /**\n     * Toggles the diagram's debug display.\n     * @param context\n     *  The application context.\n     */\n    constructor(context: ApplicationStore) {\n        super(context);\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        let { diagram } = this._context.settings.view;\n        diagram.display_debug_mode = !diagram.display_debug_mode;\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\n\nexport class ToggleGridDisplay extends AppCommand {\n\n    /**\n     * Toggle's the diagram's grid display.\n     * @param context\n     *  The application context.\n     */\n    constructor(context: ApplicationStore) {\n        super(context);\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        let { diagram } = this._context.settings.view;\n        diagram.display_grid = !diagram.display_grid;\n    }\n\n}\n","import { AppCommand } from \"../AppCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\n\nexport class ToggleShadowDisplay extends AppCommand {\n\n    /**\n     * Toggle's the diagram's shadow display.\n     * @param context\n     *  The application context.\n     */\n    constructor(context: ApplicationStore) {\n        super(context);\n    }\n\n\n    /**\n     * Executes the command.\n     */\n    public execute(): void {\n        let { diagram } = this._context.settings.view;\n        diagram.display_shadows = !diagram.display_shadows;\n    }\n\n}\n","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-dc3b1a94\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"logo\" }, \"AFB\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_TitleBar = _resolveComponent(\"TitleBar\")!\n\n  return (_openBlock(), _createBlock(_component_TitleBar, {\n    class: \"app-title-bar-element\",\n    menus: _ctx.menus,\n    onSelect: _ctx.onItemSelect\n  }, {\n    icon: _withCtx(() => [\n      _hoisted_1\n    ]),\n    _: 1\n  }, 8, [\"menus\", \"onSelect\"]))\n}","import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withModifiers as _withModifiers, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-63eba18e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"icon\" }\nconst _hoisted_2 = [\"onMouseenter\", \"onClick\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenuListing = _resolveComponent(\"ContextMenuListing\")!\n  const _component_FocusBox = _resolveComponent(\"FocusBox\")!\n\n  return (_openBlock(), _createBlock(_component_FocusBox, {\n    class: \"title-bar-control\",\n    onUnfocus: _ctx.menuClose\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"li\", _hoisted_1, [\n        _renderSlot(_ctx.$slots, \"icon\", {}, undefined, true)\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.menus, (menu) => {\n        return (_openBlock(), _createElementBlock(\"li\", {\n          key: menu.text,\n          class: _normalizeClass({ focused: menu.text === _ctx.focusedMenu }),\n          onMouseenter: ($event: any) => (_ctx.menuEnter(menu.text)),\n          onClick: ($event: any) => (_ctx.menuOpen(menu.text))\n        }, [\n          _createElementVNode(\"p\", null, _toDisplayString(menu.text), 1),\n          (menu.text === _ctx.focusedMenu)\n            ? (_openBlock(), _createBlock(_component_ContextMenuListing, {\n                key: 0,\n                class: \"menu-listing\",\n                sections: menu.sections,\n                onSelect: _ctx.menuSelect,\n                onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"]))\n              }, null, 8, [\"sections\", \"onSelect\"]))\n            : _createCommentVNode(\"\", true)\n        ], 42, _hoisted_2))\n      }), 128))\n    ]),\n    _: 3\n  }, 8, [\"onUnfocus\"]))\n}","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, vShow as _vShow, withDirectives as _withDirectives, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-03d00514\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = [\"onMouseenter\"]\nconst _hoisted_2 = { class: \"item\" }\nconst _hoisted_3 = { class: \"text\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"more-arrow\" }, null, -1))\nconst _hoisted_5 = {\n  key: 0,\n  class: \"submenu\"\n}\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = [\"href\"]\nconst _hoisted_8 = { class: \"check\" }\nconst _hoisted_9 = { class: \"text\" }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"shortcut\"\n}\nconst _hoisted_11 = {\n  key: 0,\n  class: \"section-divider\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenuListing = _resolveComponent(\"ContextMenuListing\", true)!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"context-menu-listing-control\",\n    style: _normalizeStyle(_ctx.offset),\n    onContextmenu: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"]))\n  }, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.sections, (section, i) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        class: \"section\",\n        key: section.id\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(section.items, (item) => {\n          return (_openBlock(), _createElementBlock(_Fragment, {\n            key: item.text\n          }, [\n            (item.type === _ctx.MenuType.Submenu)\n              ? (_openBlock(), _createElementBlock(\"li\", {\n                  key: 0,\n                  class: _normalizeClass({ disabled: item.disabled }),\n                  onMouseenter: ($event: any) => (_ctx.submenuEnter(item)),\n                  onMouseleave: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.submenuLeave && _ctx.submenuLeave(...args)))\n                }, [\n                  _createElementVNode(\"a\", _hoisted_2, [\n                    _createElementVNode(\"span\", _hoisted_3, _toDisplayString(item.text), 1),\n                    _hoisted_4\n                  ]),\n                  (item.text === _ctx.focusedSubMenu)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                        _createVNode(_component_ContextMenuListing, {\n                          sections: item.sections,\n                          onSelect: _ctx.onChildItemSelect\n                        }, null, 8, [\"sections\", \"onSelect\"])\n                      ]))\n                    : _createCommentVNode(\"\", true)\n                ], 42, _hoisted_1))\n              : (_openBlock(), _createElementBlock(\"li\", {\n                  key: 1,\n                  class: _normalizeClass({ disabled: item.disabled }),\n                  onClick: ($event: any) => (_ctx.onItemClick(item))\n                }, [\n                  _createElementVNode(\"a\", {\n                    class: \"item\",\n                    href: item.disabled ? null : item.link,\n                    target: \"_blank\"\n                  }, [\n                    _withDirectives(_createElementVNode(\"span\", _hoisted_8, \"✓\", 512), [\n                      [_vShow, item.value]\n                    ]),\n                    _createElementVNode(\"span\", _hoisted_9, _toDisplayString(item.text), 1),\n                    (item.shortcut)\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, _toDisplayString(_ctx.formatShortcut(item.shortcut)), 1))\n                      : _createCommentVNode(\"\", true)\n                  ], 8, _hoisted_7)\n                ], 10, _hoisted_6))\n          ], 64))\n        }), 128)),\n        (i < _ctx.sections.length - 1)\n          ? (_openBlock(), _createElementBlock(\"a\", _hoisted_11))\n          : _createCommentVNode(\"\", true)\n      ]))\n    }), 128))\n  ], 36))\n}","///////////////////////////////////////////////////////////////////////////////\n//  1. Context Menu  //////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport enum MenuType {\n    Item    = 0,\n    Toggle  = 1,\n    Submenu = 2\n}\n\nexport type ContextMenu\n    = ContextMenuItem\n    | ContextMenuToggleItem\n    | ContextMenuSubmenu;\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Generic Context Menu  //////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\ninterface ContextMenuBase<T> {\n    type: T\n    text: string\n    disabled?: boolean\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. Context Menu Section  //////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport interface ContextMenuSection {\n    id: string,\n    items: ContextMenu[]\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  4. Context Menu Types  ////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport interface ContextMenuItem extends ContextMenuBase<MenuType.Item> {\n    data: any\n    shortcut?: string,\n    keepMenuOpenOnSelect?: boolean\n}\n\nexport interface ContextMenuToggleItem extends ContextMenuBase<MenuType.Toggle> {\n    data: any\n    value: boolean,\n    shortcut?: string,\n    keepMenuOpenOnSelect?: boolean\n}\n\nexport interface ContextMenuSubmenu extends ContextMenuBase<MenuType.Submenu> {\n    sections : ContextMenuSection[]\n}\n","\nimport { defineComponent, PropType } from 'vue';\nimport { ContextMenu, ContextMenuItem, ContextMenuSection, MenuType } from \"@/assets/scripts/ContextMenuTypes\";\n\nconst KeyToText: { [key: string]: string } = {\n  Control    : \"Ctrl\",\n  Escape     : \"Esc\",\n  ArrowLeft  : \"←\",\n  ArrowUp    : \"↑\",\n  ArrowRight : \"→\",\n  ArrowDown  : \"↓\",\n  Delete     : \"Del\"\n}\n\nexport default defineComponent({\n  name: 'ContextMenuListing',\n  props: {\n    sections: {\n      type: Array as PropType<ContextMenuSection[]>,\n      required: true\n    },\n    forceInsideWindow: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      xOffset: 0,\n      yOffset: 0,\n      leaveTimeout: 500,\n      leaveTimeoutId: 0,\n      focusedSubMenu: null as string | null,\n      MenuType\n    }\n  },\n  computed: {\n\n    /**\n     * Returns the ContextMenuListing's offset styling.\n     * @returns\n     *  The ContextMenuListing's offset styling.\n     */\n    offset(): { marginTop: string, marginLeft: string } {\n      return {\n        marginTop: `${ this.yOffset }px`,\n        marginLeft: `${ this.xOffset }px`\n      }\n    }\n\n  },\n  methods: {\n    \n    /**\n     * Submenu mouse enter behavior.\n     * @param item\n     *  The hovered submenu item.\n     */\n    submenuEnter(item: ContextMenu) {\n      clearTimeout(this.leaveTimeoutId);\n      if(!item.disabled) {\n        this.focusedSubMenu = item.text;\n      }\n    },\n\n    /**\n     * Submenu mouse leave behavior.\n     */\n    submenuLeave() {\n      this.leaveTimeoutId = setTimeout(() => {\n        this.focusedSubMenu = null;\n      }, this.leaveTimeout)\n    },\n\n    /**\n     * Menu item selection behavior.\n     * @param item\n     *  The selected menu item.\n     */\n    onItemClick(item: ContextMenuItem) {\n      if(item.disabled)\n        return;\n      this.$emit(\"select\", item.data, !item.keepMenuOpenOnSelect);\n    },\n\n    /**\n     * Submenu item selection behavior.\n     * @param data\n     *  The menu item's data.\n     * @param closeSubmenu\n     *  If the active submenu should close.\n     */\n    onChildItemSelect(data: any, closeSubmenu: boolean) {\n      this.$emit(\"select\", data, closeSubmenu);\n      if(closeSubmenu) {\n        this.focusedSubMenu = null;\n      }\n    },\n\n    /**\n     * Formats a keyboard shortcut.\n     * @param shortcut\n     *  The keyboard shortcut to format.\n     * @returns\n     *  The formatted keyboard shortcut.\n     */\n    formatShortcut(shortcut?: string): string | undefined {\n      if(!shortcut) {\n        return shortcut;\n      } else {\n        return shortcut\n          .split(\"+\")\n          .map(c => c in KeyToText ? KeyToText[c] : c)\n          .join(\"+\");\n      }\n    }\n\n  },\n  emits: [\"select\"],\n  mounted() {\n    if(!this.forceInsideWindow) return;\n    // Offset submenu if outside of viewport\n    let viewWidth  = window.innerWidth;\n    let viewHeight = window.innerHeight;\n    let { top, left, bottom, right } = this.$el.getBoundingClientRect();\n    this.xOffset = right > viewWidth ? -Math.min(left, right - viewWidth) : 0;\n    this.yOffset = bottom > viewHeight ? -Math.min(top, bottom - viewHeight) : 0;\n  }\n});\n","import { render } from \"./ContextMenuListing.vue?vue&type=template&id=03d00514&scoped=true&ts=true\"\nimport script from \"./ContextMenuListing.vue?vue&type=script&lang=ts\"\nexport * from \"./ContextMenuListing.vue?vue&type=script&lang=ts\"\n\nimport \"./ContextMenuListing.vue?vue&type=style&index=0&id=03d00514&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-03d00514\"]])\n\nexport default __exports__","\n// Dependencies\nimport { defineComponent, PropType } from 'vue';\nimport { ContextMenu } from \"@/assets/scripts/ContextMenuTypes\";\n// Components\nimport FocusBox from \"@/components/Containers/FocusBox.vue\";\nimport ContextMenuListing from \"./ContextMenuListing.vue\";\n\nexport default defineComponent({\n  name: 'TitleBar',\n  props: {\n    menus: {\n      type: Array as PropType<ContextMenu[]>,\n      default: []\n    }\n  },\n  data() {\n    return {\n      focusedMenu: null as string | null\n    }\n  },\n  emits: [\"select\"],\n  methods: {\n    \n    /**\n     * Menu selection behavior.\n     * @param id\n     *  The id of the selected menu.\n     */\n    menuOpen(id: string) {\n      this.focusedMenu = id;\n    },\n\n    /**\n     * Menu mouse enter behavior.\n     * @param id\n     *  The id of the hovered menu.\n     */\n    menuEnter(id: string) {\n      if(this.focusedMenu === null)\n        return;\n      this.focusedMenu = id;\n    },\n\n    /**\n     * Menu close behavior.\n     */\n    menuClose() {\n      this.focusedMenu = null;\n    },\n\n    /**\n     * Menu item selection behavior.\n     * @param data\n     *  The menu item's data.\n     * @param closeSubmenu\n     *  If the active menu should close.\n\n     */\n    menuSelect(data: any, closeMenu: boolean) {\n      this.$emit(\"select\", data);\n      if(closeMenu) this.focusedMenu = null;\n    }\n\n  },\n  components: { FocusBox, ContextMenuListing }\n});\n","import { render } from \"./TitleBar.vue?vue&type=template&id=63eba18e&scoped=true&ts=true\"\nimport script from \"./TitleBar.vue?vue&type=script&lang=ts\"\nexport * from \"./TitleBar.vue?vue&type=script&lang=ts\"\n\nimport \"./TitleBar.vue?vue&type=style&index=0&id=63eba18e&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-63eba18e\"]])\n\nexport default __exports__","\n// Dependencies\nimport { ContextMenu } from \"@/assets/scripts/ContextMenuTypes\";\nimport { CommandEmitter } from \"@/store/Commands/Command\";\nimport { defineComponent } from \"vue\";\nimport { mapGetters, mapMutations } from \"vuex\";\n// Components\nimport TitleBar from \"@/components/Controls/TitleBar.vue\";\n\nexport default defineComponent({\n  name: \"AppTitleBar\",\n  computed: {\n\n    /**\n     * Context Menu Store data\n     */\n    ...mapGetters(\"ContextMenuStore\", [\n      \"fileMenu\",\n      \"editMenu\",\n      \"layoutMenu\",\n      \"viewMenu\",\n      \"helpMenu\"\n    ]),\n    \n    /**\n     * Returns the application's menus.\n     * @returns\n     *  The application's menus.\n     */\n    menus(): ContextMenu[] {\n      return [\n        this.fileMenu, \n        this.editMenu,\n        this.layoutMenu,\n        this.viewMenu,\n        this.helpMenu\n      ]\n    }\n\n  },\n  methods: {\n\n    /**\n     * Application Store actions\n     */\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\n\n    /**\n     * Menu item selection behavior.\n     * @param emitter\n     *  Menu item's command emitter.\n     */\n    async onItemSelect(emitter: CommandEmitter) {\n      try {\n        let cmd = emitter();\n        if(cmd instanceof Promise) {\n          this.execute(await cmd);\n        } else {\n          this.execute(cmd);\n        }\n      } catch(ex: any) {\n        console.error(ex);\n      }\n    }\n\n  },\n  components: { TitleBar }\n});\n","import { render } from \"./AppTitleBar.vue?vue&type=template&id=dc3b1a94&scoped=true&ts=true\"\nimport script from \"./AppTitleBar.vue?vue&type=script&lang=ts\"\nexport * from \"./AppTitleBar.vue?vue&type=script&lang=ts\"\n\nimport \"./AppTitleBar.vue?vue&type=style&index=0&id=dc3b1a94&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-dc3b1a94\"]])\n\nexport default __exports__","import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_HotkeyBox = _resolveComponent(\"HotkeyBox\")!\n\n  return (_openBlock(), _createBlock(_component_HotkeyBox, {\n    class: \"app-hotkey-box-element\",\n    hotkeys: _ctx.hotkeys,\n    global: true,\n    onFire: _ctx.onHotkeyFired\n  }, {\n    default: _withCtx(() => [\n      _renderSlot(_ctx.$slots, \"default\")\n    ]),\n    _: 3\n  }, 8, [\"hotkeys\", \"onFire\"]))\n}","import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5e99f3da\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  class: \"hotkey-box-container\",\n  tabindex: \"0\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n  ]))\n}","///////////////////////////////////////////////////////////////////////////////\n//  1. HotkeyObserver  ////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport class HotkeyObserver<T> {\n\n    /**\n     * The advance key state function, bound to the current object.\n     */\n    private _boundAdvanceKeyState: (e: KeyboardEvent) => void;\n\n     /**\n      * The reverse key state function, bound to the current object.\n      */\n    private _boundReverseKeyState: (e: KeyboardEvent) => void;\n\n    /**\n     * The function to call when a hotkey sequence is matched.\n     */\n    private _callback: (command: T) => void;\n\n    /**\n     * The DOM element the hotkey observer is watching.\n     */\n    private _container: HTMLElement | null;\n\n    /**\n     * The hotkey observer's hotkey-id-to-item map.\n     */\n    private _hotkeyIdMap: Map<string, Hotkey<T>>;\n\n    /**\n     * The current key state.\n     */\n    private _keyState: string;\n\n\n    /**\n     * Creates a new {@link HotkeyObserver}.\n     * @param callback\n     *  The function to call once a hotkey sequence is triggered.\n     * @param recognitionDelay\n     *  The time to wait (in milliseconds) before firing the hotkey callback.\n     */\n    constructor(callback: (command: T) => void, recognitionDelay: number) {\n        this._boundAdvanceKeyState = this.advanceKeyState.bind(this);\n        this._boundReverseKeyState = this.reverseKeyState.bind(this);\n        this._callback = callback;\n        this._container = null;\n        this._hotkeyIdMap = new Map();\n        this._keyState = \".\";\n    }\n\n\n    /**\n     * Binds the HotkeyObserver to an HTML element.\n     * @param container\n     *  The HTML element to bind to.\n     */\n    public observe(container: HTMLElement) {\n        this._container = container;\n        this._container.addEventListener(\"keydown\", this._boundAdvanceKeyState);\n        this._container.addEventListener(\"keyup\", this._boundReverseKeyState);\n    }\n\n    /**\n     * Unbinds the HotkeyObserver from the HTML element.\n     */\n    public disconnect() {\n        this._container?.removeEventListener(\"keydown\", this._boundAdvanceKeyState);\n        this._container?.removeEventListener(\"keyup\", this._boundReverseKeyState);\n    }\n\n    /**\n     * Configures the hotkeys to listen for.\n     * @param keyMap\n     *  An array of hotkeys.\n     * @throws { OverlappingHotkeysError }\n     *  If any hotkey sequences overlap with each other.\n     */\n    public setHotkeys(keyMap: Hotkey<T>[]) {\n        this._hotkeyIdMap = new Map<string, Hotkey<T>>();\n        for (let item of keyMap) {\n            if (item.shortcut === \"\") continue;\n            // Derive hotkey id\n            let hotkeyId = this.keySequenceToHotKeyId(item.shortcut);\n            // Ensure hotkey id doesn't overlap with others \n            for (let id of this._hotkeyIdMap.keys()) {\n                if (id.startsWith(hotkeyId) || hotkeyId.startsWith(id)) {\n                    throw new OverlappingHotkeysError(\n                        `Overlapping key sequences ('${\n                            id\n                        }' and '${\n                            hotkeyId\n                        }') are not allowed.`\n                    );\n                }\n            }\n            // Add hotkey\n            this._hotkeyIdMap.set(hotkeyId, item);\n        }\n    }\n\n    /**\n     * Tests if a hotkey sequence is active.\n     * @param sequence\n     *  The hotkey sequence.\n     * @param strict\n     *  [true]\n     *   The active keys must match the provided hotkey sequence exactly.\n     *  [false]\n     *   The active keys only need to contain the provided hotkey sequence.\n     *  (Default: true)\n     * @returns\n     *  True if the provided hotkey sequence is active, false otherwise.\n     */\n    public isHotkeyActive(sequence: string, strict: boolean = true): boolean {\n        let id = this.keySequenceToHotKeyId(sequence);\n        return strict ? this._keyState === id : this._keyState.includes(id);\n    }\n\n    /**\n     * Adds a key event to the current key state.\n     * @param e\n     *  The keydown event.\n     */\n    private advanceKeyState(e: KeyboardEvent) {\n        let key = e.key.toLocaleLowerCase();\n        \n        // If inside input field, ignore hotkeys\n        if((e.target as any).tagName === \"INPUT\") {\n            return;\n        }\n\n        // Advanced current key state\n        let isRepeat = this._keyState.endsWith(`.${ key }.`);\n        if(!isRepeat) {\n            this._keyState += `${ key }.`\n        }\n        \n        // Check key state\n        if (this._hotkeyIdMap.has(this._keyState)) {\n            let hotkey = this._hotkeyIdMap.get(this._keyState)!;\n            // If in repeat state and hotkey is not repeatable:\n            if(isRepeat && !hotkey.repeatable) {\n                // Prevent all browser behavior\n                e.preventDefault();\n                // Bail\n                return;    \n            }\n            // Disable browser default behavior if not requested\n            if (!hotkey.allowBrowserBehavior) {\n                e.preventDefault();\n            }\n            // Execute shortcut\n            this._callback(hotkey.data!);\n        } else {\n            // If no key matched, block browser behavior by default\n            e.preventDefault();\n        }\n\n    }\n\n    /**\n     * Removes a key event from the current key state. \n     * @param e\n     *  The keyup event.\n     */\n    private reverseKeyState(e: KeyboardEvent) {\n        let key = e.key.toLocaleLowerCase();\n        this._keyState = this._keyState.replace(`.${ key }.`, \".\");\n    }\n\n    /**\n     * Converts a key sequence to its hotkey id.\n     * @param sequence\n     *  The sequence to evaluate.\n     * @returns\n     *  The sequence's hotkey id.\n     */\n    private keySequenceToHotKeyId(sequence: string): string {\n        let hotkeyId = sequence\n            .toLocaleLowerCase()\n            .replace(/\\s+/g, '')\n            .split(\"+\")\n            .join(\".\");\n        return `.${hotkeyId}.`\n    }\n\n}\n\nexport class OverlappingHotkeysError extends Error {\n\n    /**\n     * Creates a new OverlappingHotkeysError.\n     * @param message\n     *  The error message.\n     */\n    constructor(message: string) {\n        super(message);\n    }\n\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. Hotkey  ////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport interface Hotkey<T> {\n\n    /**\n     * The hotkey's shortcut.\n     */\n    shortcut: string\n\n    /**\n     * The hotkey's data.\n     */\n    data?: T\n\n    /**\n     * If the hotkey is repeatable.\n     */\n    repeatable: boolean\n\n    /**\n     * If the hotkey is disabled.\n     */\n    disabled?: boolean\n\n    /**\n     * If the browser's default behavior should be permitted.\n     */\n    allowBrowserBehavior?: boolean\n\n}\n","\nimport { Hotkey, HotkeyObserver } from \"@/assets/scripts/HotkeyObserver\";\nimport { defineComponent, markRaw, PropType } from \"vue\";\n\nexport default defineComponent({\n  name: \"HotkeyBox\",\n  provide() {\n    return {\n\n      /**\n       * Tests if a hotkey sequence is active.\n       * @param sequence\n       *  The hotkey sequence.\n       * @param strict\n       *  [true]\n       *   The active keys must match the provided hotkey sequence exactly.\n       *  [false]\n       *   The active keys only need to contain the provided hotkey sequence.\n       *  (Default: true)\n       * @returns\n       *  True if the provided hotkey sequence is active, false otherwise.\n       */\n      isHotkeyActive: (sequence: string, strict: boolean = true): boolean => {\n        return this.observer.isHotkeyActive(sequence, strict)\n      }\n\n    }\n  },\n  props: {\n    hotkeys: {\n      type: Array as PropType<Hotkey<any>[]>,\n      default: [],\n    },\n    global: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      observer: markRaw(new HotkeyObserver(\n        (id: string, data?: any) => this.$emit(\"fire\", id, data)\n      , 0))\n    };\n  },\n  emits: [\"fire\"],\n  watch: {\n    // On hotkeys change\n    hotkeys() {\n      this.observer.setHotkeys(this.hotkeys);\n    },\n  },\n  mounted() {\n    this.observer.observe(this.global ? document.body : this.$el);\n    this.observer.setHotkeys(this.hotkeys);\n  },\n  unmounted() {\n    this.observer.disconnect();\n  }\n});\n","import { render } from \"./HotkeyBox.vue?vue&type=template&id=5e99f3da&scoped=true&ts=true\"\nimport script from \"./HotkeyBox.vue?vue&type=script&lang=ts\"\nexport * from \"./HotkeyBox.vue?vue&type=script&lang=ts\"\n\nimport \"./HotkeyBox.vue?vue&type=style&index=0&id=5e99f3da&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5e99f3da\"]])\n\nexport default __exports__","\n// Dependencies\nimport { Hotkey } from \"@/assets/scripts/HotkeyObserver\";\nimport { defineComponent } from \"vue\";\nimport { Command, CommandEmitter } from \"@/store/Commands/Command\";\nimport { mapGetters, mapMutations } from \"vuex\";\n// Components\nimport HotkeyBox from \"@/components/Containers/HotkeyBox.vue\";\n\nexport default defineComponent({\n  name: \"AppHotkeyBox\",\n  computed: {\n\n    /**\n     * Hotkey Store data\n     */\n    ...mapGetters(\"HotkeyStore\", [\n      \"nativeHotkeys\",\n      \"fileHotkeys\",\n      \"editHotKeys\",\n      \"layoutHotkeys\",\n      \"viewHotkeys\"\n    ]),\n    \n    /**\n     * Returns the application's hotkeys.\n     * @returns\n     *  The application's hotkeys.\n     */\n    hotkeys(): Hotkey<() => Command>[] {\n      return [\n        ...this.nativeHotkeys, \n        ...this.fileHotkeys,\n        ...this.editHotKeys,\n        ...this.layoutHotkeys,\n        ...this.viewHotkeys\n      ]\n    }\n\n  },\n  methods: {\n\n    /**\n     * Application Store mutations\n     */\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\n\n    /**\n     * Hotkey fired behavior.\n     * @param emitter\n     *  The hotkey's command emitter.\n     */\n    async onHotkeyFired(emitter: CommandEmitter) {\n      try {\n        let cmd = emitter();\n        if(cmd instanceof Promise) {\n          let test = await cmd;\n          this.execute(test);\n        } else {\n          this.execute(cmd);\n        }\n      } catch(ex: any) {\n        console.error(ex);\n      }\n    }\n\n  },\n  components: { HotkeyBox }\n});\n","import { render } from \"./AppHotkeyBox.vue?vue&type=template&id=ce1df532&ts=true\"\nimport script from \"./AppHotkeyBox.vue?vue&type=script&lang=ts\"\nexport * from \"./AppHotkeyBox.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { PageCommand } from \"../PageCommand\";\nimport {\n    DiagramObjectModel,\n    DiagramObjectModelError\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class ReorderObject extends PageCommand {\n\n    /**\n     * The object to reorder.\n     */\n    private _object: DiagramObjectModel;\n\n    /**\n     * The object's parent.\n     */\n    private _parent: DiagramObjectModel;\n\n    /**\n     * The object's previous location in its parent.\n     */\n    private _prevIndex: number;\n\n    /**\n     * The object's next location in its parent.\n     */\n    private _nextIndex: number;\n\n\n    /**\n     * Reorders an object's position in its parent.\n     * @param object\n     *  The object to reorder.\n     * @param order\n     *  The object's new ordering.\n     */\n    constructor(object: DiagramObjectModel, order: Order) {\n        if(!object.parent) {\n            throw new DiagramObjectModelError(\n                \"Object must have a parent.\", object\n            );\n        }\n        super(object.root.id);\n        this._object = object;\n        this._parent = object.parent;\n        this._prevIndex = object.getIndexInParent();\n        switch(order) {\n            case Order.Top:\n                this._nextIndex = object.children.length;\n                break;\n            case Order.OneAbove:\n                this._nextIndex = this._prevIndex + 1;\n                break;\n            case Order.OneBelow:\n                this._nextIndex = this._prevIndex - 1;\n                break;\n            case Order.Bottom:\n                this._nextIndex = 0;\n                break;\n        }\n    }\n\n    \n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._parent.reorderChild(this._object.id, this._nextIndex);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._parent.reorderChild(this._object.id, this._prevIndex);\n    }\n    \n}\n\nexport enum Order {\n    Top      = 0,\n    OneAbove = 2,\n    OneBelow = 3,\n    Bottom   = 4,\n}\n","import { resolveComponent as _resolveComponent, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenu = _resolveComponent(\"ContextMenu\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: \"block-diagram-element\",\n    style: _normalizeStyle(_ctx.cursorStyle)\n  }, [\n    (_ctx.menu.show)\n      ? (_openBlock(), _createBlock(_component_ContextMenu, {\n          key: 0,\n          class: \"block-diagram-menu\",\n          style: _normalizeStyle(_ctx.menuStyle),\n          sections: _ctx.menuOptions,\n          onSelect: _ctx.onItemSelect,\n          onUnfocus: _ctx.closeContextMenu\n        }, null, 8, [\"style\", \"sections\", \"onSelect\", \"onUnfocus\"]))\n      : _createCommentVNode(\"\", true)\n  ], 4))\n}","export abstract class PageCommand  {\n\n    /**\n     * The null page's id.\n     */\n    public static NullPage = \"$__null_page\"\n\n    /**\n     * The page the command is operating on.\n     */\n    public page: string;\n\n    /**\n     * Creates a new {@link PageCommand}.\n     * @param page\n     *  The page the command is operating on.\n     */\n    public constructor(page: string) {\n        this.page = page;\n    }\n\n    /**\n     * Executes a page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public abstract execute(): boolean;\n\n    /**\n     * Undoes the page command.\n     */\n    public abstract undo(): void;\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport {\n    DiagramAnchorModel,\n    DiagramLineModel,\n    DiagramObjectModel,\n    Hover, Select\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class AddLineObject extends PageCommand {\n\n    /**\n     * The line object to add.\n     */\n    private _object: DiagramLineModel;\n\n    /**\n     * The parent object.\n     */\n    private _parent: DiagramObjectModel;\n\n    /**\n     * The line's source anchor.\n     */\n    private _source: DiagramAnchorModel;\n\n    /**\n     * The line's target anchor.\n     */\n    private _target: DiagramAnchorModel | undefined;\n\n\n    /**\n     * Adds a line object to a parent object.\n     * @param object\n     *  The line object to add.\n     * @param parent\n     *  The parent object.\n     * @param source\n     *  The line's source anchor.\n     * @param target\n     *  The line's target anchor.\n     */\n    constructor(\n        object: DiagramLineModel,\n        parent: DiagramObjectModel,\n        source: DiagramAnchorModel,\n        target?: DiagramAnchorModel\n    ) {\n        super(parent.root.id);\n        this._object = object;\n        this._parent = parent;\n        this._source = source;\n        this._target = target;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        // Add line\n        this._parent.addChild(this._object);\n        // Connect source\n        let { xMid, yMid } = this._source.boundingBox;\n        this._object.srcEnding.moveTo(xMid, yMid);\n        this._source.addChild(this._object.srcEnding);\n        // Connect target\n        if(this._target) {\n            let { xMid, yMid } = this._target.boundingBox;\n            this._object.trgEnding.moveTo(xMid, yMid);\n            this._target.addChild(this._object.trgEnding);\n        }\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._object.setHover(Hover.Off);\n        this._object.setSelect(Select.False);\n        // Disconnect source\n        this._source.removeChild(this._object.srcEnding);\n        // Disconnect target\n        if(this._target) {\n            this._target.removeChild(this._object.trgEnding);\n        }\n        // Remove line\n        this._parent.removeChild(this._object);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel, Hover, Select } from \"@/assets/scripts/BlockDiagram\";\n\nexport class AddObject extends PageCommand {\n\n    /**\n     * The object to add.\n     */\n    private _object: DiagramObjectModel;\n\n    /**\n     * The parent object.\n     */\n    private _parent: DiagramObjectModel;\n\n    \n    /**\n     * Adds an object to a parent object.\n     * @param object\n     *  The object to add.\n     * @param parent\n     *  The parent object.\n     */\n    constructor(object: DiagramObjectModel, parent: DiagramObjectModel) {\n        super(parent.root.id);\n        this._object = object;\n        this._parent = parent;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._parent.addChild(this._object);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._object.setHover(Hover.Off);\n        this._object.setSelect(Select.False);\n        // Skip check for external attachments. If object entered the diagram\n        // with external attachments it should leave with them too.\n        this._parent.removeChild(this._object, true, false);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport {\n    DiagramAnchorableModel,\n    DiagramAnchorModel,\n    DiagramObjectModelError\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class AttachObject extends PageCommand {\n    \n    /**\n     * The object's anchor.\n     */\n    private _anchor: DiagramAnchorModel;\n    \n    /**\n     * The object.\n     */\n    private _object: DiagramAnchorableModel;\n\n    \n    /**\n     * Attaches an object to an anchor.\n     * @param anchor\n     *  The object's anchor.\n     * @param object\n     *  The object.\n     */\n    constructor(anchor: DiagramAnchorModel, object: DiagramAnchorableModel) {\n        if(anchor.root.id !== object.root.id) {\n            throw new DiagramObjectModelError(\n                `Objects must originate from the same root.`\n            );\n        }\n        super(anchor.root.id);\n        this._object = object;\n        this._anchor = anchor;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._anchor.addChild(this._object);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._anchor.removeChild(this._object);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { ListProperty, Property } from \"@/assets/scripts/BlockDiagram\";\n\nexport class CreateSubproperty extends PageCommand {\n\n    /**\n     * The property to modify.\n     */\n    private _property: ListProperty;\n\n    /**\n     * The subproperty's id.\n     */\n    private _id: string | null;\n\n    /**\n     * The subproperty.\n     */\n    private _subproperty: Property;\n\n    \n    /**\n     * Creates a new subproperty and adds it to a {@link ListProperty}.\n     * @param property\n     *  The {@link ListProperty}.\n     */\n    constructor(property: ListProperty) {\n        let root = property.root;\n        if(!root) {\n            throw new Error(\"Property does not have a root.\")\n        }\n        super(root.object.root.id);\n        this._id = null;\n        this._property = property;\n        this._subproperty = Property.create(property, property.descriptor.form);\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._id = this._property.addProperty(this._subproperty);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        if(this._id) {\n            this._property.removeProperty(this._id);\n        }\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModelError } from \"@/assets/scripts/BlockDiagram\";\n\nexport class GroupCommand extends PageCommand {\n\n    /**\n     * The list of commands in order of application.\n     */\n    private _commands: PageCommand[];\n    \n\n    /**\n     * Executes a series of page commands.\n     */\n    constructor() {\n        super(PageCommand.NullPage);\n        this._commands = [];\n    }\n    \n\n    /**\n     * Adds a command to the group.\n     * @param command\n     *  The command.\n     */\n    public add(command: PageCommand) {\n        if(this.page !== PageCommand.NullPage && this.page !== command.page) {\n            throw new DiagramObjectModelError(\n                `Commands must operate on the same page.`\n            );\n        }\n        this.page = command.page;\n        this._commands.push(command);\n    }\n\n    /**\n     * Applies the set of commands.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        let i = 0;\n        let l = this._commands.length;\n        let record = false;\n        try {\n            for(; i < l; i++) {\n                let r = this._commands[i].execute();;\n                record ||= r;\n            }\n        } catch (ex) {\n            // Rollback on failure\n            for(i--; 0 <= i; i--) {\n                this._commands[i].undo();\n            }\n            throw ex;\n        }\n        return record;\n    }\n\n    /**\n     * Reverts the set of commands.\n     */\n    public undo() {\n        let l = this._commands.length - 1;\n        for(let i = l; 0 <= i; i--) {\n            this._commands[i].undo();\n        }\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { \n    DiagramAnchorableModel,\n    DiagramAnchorModel,\n    DiagramObjectModel,\n    DiagramObjectModelError\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class RemoveObjects extends PageCommand {\n    \n    /**\n     * The set of objects to remove.\n     */\n    private _items: {\n        index: number,\n        parent: DiagramObjectModel,\n        object: DiagramObjectModel\n    }[];\n\n    /**\n     * The set of external attachments.\n     */\n    private _links: { \n        index: number,\n        anchor: DiagramAnchorModel,\n        object: DiagramAnchorableModel\n    }[]; \n\n\n    /**\n     * Removes one or more objects from their parent object.\n     * \n     * NOTE:\n     * Do NOT perform more than one `RemoveObjects` in a single transaction.\n     * If removals are broken into separate requests, their mutual dependencies\n     * can't be determined. This may cause `undo()` and  `redo()` to break as\n     * they can no longer reconstruct the objects and dependencies correctly.\n     * \n     * @param objects\n     *  The objects to remove from their parents.\n     */\n    constructor(objects: DiagramObjectModel[]) {\n        let page = objects[0].root.id;\n        for(let i = 1; i < objects.length; i++) {\n            if(page === objects[i].root.id)\n                continue;\n            throw new DiagramObjectModelError(\n                `Objects must originate from the same root.`\n            );\n        }\n        super(page);\n        // Compile objects\n        this._links = [];\n        this._items = [];\n        for(let o of objects) {\n            if(!o.parent) {\n                throw new DiagramObjectModelError(\n                    \"Object must have a parent.\", o\n                );\n            }\n            this._items.push({\n                index: o.getIndexInParent(),\n                parent: o.parent,\n                object: o\n            });\n        }\n        // Compile list of anchors and anchor-ables\n        let map = new Map<string, DiagramObjectModel>();\n        for(let item of this._items) {\n            for(let c of item.object.getSubtree()) {\n                if(\n                    c instanceof DiagramAnchorModel ||\n                    c instanceof DiagramAnchorableModel\n                ) {\n                    map.set(c.id, c);\n                }\n            }\n        }\n        // Save any dependencies that can't be found in the list\n        for(let obj of map.values()) {\n            if(obj instanceof DiagramAnchorableModel) {\n                if(obj.isAttached() && !map.has(obj.anchor!.id)) {\n                    this._links.push({ \n                        index: obj.getIndexInAnchor(),\n                        anchor: obj.anchor!,\n                        object: obj,\n                    })\n                }\n            } else if(obj instanceof DiagramAnchorModel) {\n                for(let child of obj.children) {\n                    if(!map.has(child.id)) {\n                        this._links.push({ \n                            index: child.getIndexInAnchor(),\n                            anchor: obj,\n                            object: child, \n                        })\n                    }\n                }\n            }\n        }\n    }\n\n\n    /**\n     * Executes the command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        // Detach external attachments\n        for(let link of this._links) {\n            link.anchor.removeChild(link.object);\n        }\n        // Remove objects from parents\n        for(let item of this._items) {\n            item.parent.removeChild(item.object, true, false);\n        }\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        // Add objects to parents\n        for(let item of this._items) {\n            item.parent.addChild(item.object, item.index);\n        } \n        // Attach external attachments\n        for(let link of this._links) {\n            link.anchor.addChild(link.object, link.index);\n        }\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel, Hover } from \"@/assets/scripts/BlockDiagram\";\n\nexport class UnhoverObject extends PageCommand {\n\n    /**\n     * The object to un-hover.\n     */\n    private _object: DiagramObjectModel;\n\n\n    /**\n     * Un-hovers an object.\n     * @param object\n     *  The object to un-hover.\n     */\n    constructor(object: DiagramObjectModel) {\n        super(object.root.id);\n        this._object = object;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        let p: DiagramObjectModel | undefined = this._object;\n        while(p) {\n            p.setHover(Hover.Off);\n            p = p.parent;\n        }\n        return false;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {}\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel, Select } from \"@/assets/scripts/BlockDiagram\";\n\nexport class UnselectObject extends PageCommand {\n\n    /**\n     * The object to unselect.\n     */\n    private _object: DiagramObjectModel;\n\n\n    /**\n     * Unselects an object.\n     * @param object\n     *  The object to unselect.\n     */\n    constructor(object: DiagramObjectModel) {\n        super(object.root.id);\n        this._object = object;\n    }\n    \n\n    /**\n     * Executes the command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._object.setSelect(Select.False);\n        return false;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {}\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { RemoveObjects } from \"./RemoveObjects\";\nimport { UnhoverObject } from \"./UnhoverObject\";\nimport { UnselectObject } from \"./UnselectObject\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class RemoveSelectedChildren extends GroupCommand {\n\n    /**\n     * Removes an object's selected children.\n     * @param object\n     *  The object.\n     */\n    constructor(object: DiagramObjectModel) {\n        super();\n        let objects = object.children.filter(c => c.isSelected());\n        for(let obj of objects) {\n            // Unhover children\n            if(obj.isHovered()) {\n                this.add(new UnhoverObject(obj))\n            }\n            // Unselect children\n            this.add(new UnselectObject(obj));\n        }\n        // Remove children\n        this.add(new RemoveObjects(objects));\n    }\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\nimport { RemoveSelectedChildren } from \"./RemoveSelectedChildren\";\n\nexport class CutSelectedChildren extends GroupCommand {\n\n    /**\n     * The application context.\n     */\n    private _context: ApplicationStore\n\n    /**\n     * The objects to add to the clipboard.\n     */\n    private _objects: DiagramObjectModel[];\n\n\n    /**\n     * Cuts an object's selected children to the application's clipboard.\n     * @param context\n     *  The application context.\n     * @param object\n     *  The object.\n     */\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\n        super();\n        this._context = context;\n        // Get selected children\n        let objects = object.children.filter(c => c.isSelected());\n        // Clone selection\n        this._objects = object.factory.cloneObjects(...objects);\n        // Remove selected children\n        this.add(new RemoveSelectedChildren(object));\n    }\n\n    \n    /**\n     * Executes the command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public override execute(): boolean {\n        // Set the clipboard\n        this._context.clipboard = this._objects;\n        // Remove the selected children\n        return super.execute();\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { ListProperty, Property } from \"@/assets/scripts/BlockDiagram\";\n\nexport class DeleteSubproperty extends PageCommand {\n\n    /**\n     * The property to modify.\n     */\n    private _property: ListProperty;\n\n    /**\n     * The subproperty's id.\n     */\n    private _id: string;\n\n    /**\n     * The subproperty.\n     */\n    private _subproperty: Property;\n\n    /**\n     * The subproperty's location in the collection.\n     */\n    private _index: number;\n\n\n    /**\n     * Deletes a subproperty from a {@link ListProperty}.\n     * @param property\n     *  The {@link ListProperty}.\n     * @param id\n     *  The subproperty's id.\n     */\n    constructor(property: ListProperty, id: string) {\n        let root = property.root;\n        if(!root) {\n            throw new Error(\"Property does not have a root.\")\n        }\n        let subproperty = property.value.get(id);\n        if(!subproperty) {\n            throw new Error(`Subproperty '${ id }' does not exist.`);\n        }\n        super(root.object.root.id);\n        this._id = id;\n        this._index = property.indexOf(id);\n        this._property = property;\n        this._subproperty = subproperty;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._property.removeProperty(this._id);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._property.addProperty(this._subproperty, this._id, this._index);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport {\n    DiagramAnchorableModel,\n    DiagramAnchorModel,\n    DiagramObjectModelError\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class DetachObject extends PageCommand {\n    \n    /**\n     * The object's anchor.\n     */\n    private _anchor: DiagramAnchorModel;\n\n    /**\n     * The object.\n     */\n    private _object: DiagramAnchorableModel;\n\n    /**\n     * The object's location in its anchor.\n     */\n    private _index: number;\n\n    \n    /**\n     * Detaches an object from its anchor.\n     * @param object\n     *  The object.\n     */\n    constructor(object: DiagramAnchorableModel) {\n        if(!object.isAttached()) {\n            throw new DiagramObjectModelError(\n                \"Object must be attached to an anchor.\", object\n            );\n        }\n        super(object.root.id);\n        this._object = object;\n        this._anchor = object.anchor!;\n        this._index = object.getIndexInAnchor();\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._anchor.removeChild(this._object);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._anchor.addChild(this._object, this._index);\n    }\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { AddObject } from \"./AddObject\";\nimport { UnselectObject } from \"./UnselectObject\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { DiagramObjectModel, Select } from \"@/assets/scripts/BlockDiagram\";\n\nexport class DuplicateSelectedChildren extends GroupCommand {\n\n    /**\n     * Duplicates an object's selected children.\n     * @param context\n     *  The application context.\n     * @param object\n     *  The object.\n     */\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\n        super();\n        // Unselect children\n        let objects = object.children.filter(c => c.isSelected());\n        for(let obj of objects) {\n            this.add(new UnselectObject(obj));\n        }\n        // Duplicate selection\n        let o = context.settings.edit.clone_offset;\n        let clones = object.factory.cloneObjects(...objects);\n        // Add clones to object and select them\n        for(let obj of clones) {\n            obj.moveBy(o[0], o[1]);\n            obj.setSelect(Select.True);\n            this.add(new AddObject(obj, object));\n        }\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel, Hover } from \"@/assets/scripts/BlockDiagram\";\n\nexport class HoverObject extends PageCommand {\n\n    /**\n     * The object to hover.\n     */\n    private _object: DiagramObjectModel;\n\n\n    /**\n     * Hovers an object.\n     * @param object\n     *  The object to hover.\n     */\n    constructor(object: DiagramObjectModel) {\n        super(object.root.id);\n        this._object = object;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        // Directly hover object\n        this._object.setHover(Hover.Direct);\n        // Indirectly hover object's parents\n        let p = this._object.parent;\n        while(p) {\n            p.setHover(Hover.Indirect);\n            p = p.parent;\n        }\n        return false;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {}\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel, Select } from \"@/assets/scripts/BlockDiagram\";\n\nexport class SelectObject extends PageCommand {\n\n    /**\n     * The object to select.\n     */\n    private _object: DiagramObjectModel;\n\n\n    /**\n     * Selects an object.\n     * @param object\n     *  The object to select.\n     */\n    constructor(object: DiagramObjectModel) {\n        super(object.root.id);\n        this._object = object;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._object.setSelect(Select.True)\n        return false;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {}\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { UnselectObject } from \"./UnselectObject\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class UnselectDescendants extends GroupCommand {\n\n    /**\n     * Unselects an object's descendants.\n     * @param object\n     *  The object.\n     */\n    constructor(object: DiagramObjectModel) {\n        super();\n        for(let obj of object.getSubtree(o => o.isSelected())) {\n            this.add(new UnselectObject(obj));\n        }\n    }\n\n}\n\n","import { PageCommand } from \"../PageCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { PageEditor } from \"@/store/PageEditor\";\nimport {\n    CameraLocation,\n    DiagramObjectModel,\n    DiagramObjectModelError\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class MoveCameraToObjects extends PageCommand {\n\n    /**\n     * The editor.\n     */\n    private _editor: PageEditor;\n\n    /**\n     * The camera's new location.\n     */\n    private _location: CameraLocation;\n\n\n    /**\n     * Focuses the camera on a set of objects.\n     * @param context\n     *  The application context.\n     * @param objects\n     *  The objects.\n     */\n    constructor(context: ApplicationStore, objects: DiagramObjectModel[]) {\n        let page = objects[0].root;\n        for(let i = 1; i < objects.length; i++) {\n            if(page.id === objects[i].root.id)\n                continue;\n            throw new DiagramObjectModelError(\n                `Objects must originate from the same root.`\n            );\n        }\n        let editor = context.pages.get(page.id);\n        if(!editor) {\n            throw new Error(\n                `Objects must be managed by an editor.`\n            );\n        }\n        super(page.id);\n        this._editor = editor;\n        // Calculate bounding box\n        let xMin = Infinity;\n        let yMin = Infinity;\n        let xMax = -Infinity;\n        let yMax = -Infinity;\n        for(let obj of objects) {\n            xMin = Math.min(xMin, obj.boundingBox.xMin);\n            yMin = Math.min(yMin, obj.boundingBox.yMin);\n            xMax = Math.max(xMax, obj.boundingBox.xMax);\n            yMax = Math.max(yMax, obj.boundingBox.yMax);\n        }\n        // Calculate camera position\n        let regionW = xMax - xMin;\n        let regionH = yMax - yMin;\n        let x = Math.round((xMin + xMax) / 2);\n        let y = Math.round((yMin + yMax) / 2);\n        let w = regionW / editor.view.w;\n        let h = regionH / editor.view.h;\n        let r = Math.max(w, h);\n        let k = Math.min(.9 / r, 1.5);\n        this._location = { x, y, k };\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._editor.location.value = this._location;\n        return false;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {}\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { SelectObject } from \"./SelectObject\";\nimport { UnselectDescendants } from \"./UnselectDescendants\";\nimport { MoveCameraToObjects } from \"./MoveCameraToObjects\";\nimport {\n    DiagramLineModel,\n    DiagramObjectModel,\n    SemanticAnalyzer\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class MoveCameraToChildren extends GroupCommand {\n\n    /**\n     * Interprets an object's selected children as a graph and focuses the\n     * camera on their (graph-wise) children.\n     * @param context\n     *  The application context.\n     * @param object\n     *  The object.\n     */\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\n        super();\n        let objects = object.children.filter(c => c.isSelected());\n        if(!objects.length) {\n            return;\n        }\n        // Get (graph-wise) children\n        let children = new Set<DiagramObjectModel>;\n        for(let obj of objects) {\n            for(let n of this.getNextBlocks(obj)) {\n                children.add(n);\n            }\n        }\n        // Unselect objects\n        this.add(new UnselectDescendants(object));\n        // Select children\n        for(let child of children) {\n            this.add(new SelectObject(child));\n        }\n        // Move camera to children\n        if(children.size) {\n            this.add(new MoveCameraToObjects(context, [...children]));\n        }\n    }\n\n    /**\n     * Resolve next graph-wise blocks.\n     * @param obj\n     *  The source object.\n     */\n    private getNextBlocks(obj: DiagramObjectModel): Set<DiagramObjectModel> {\n        let set = new Set<DiagramObjectModel>();\n        let next = SemanticAnalyzer.getNextGraphLinks(obj);\n        for(let n of next) {\n            if(n instanceof DiagramLineModel) {\n                set = new Set([...set, ...this.getNextBlocks(n)])\n            } else {\n                set.add(n);\n            }\n        }\n        return set;\n    }\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { SelectObject } from \"./SelectObject\";\nimport { UnselectDescendants } from \"./UnselectDescendants\";\nimport { MoveCameraToObjects } from \"./MoveCameraToObjects\";\nimport {\n    DiagramLineModel,\n    DiagramObjectModel,\n    SemanticAnalyzer\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class MoveCameraToParents extends GroupCommand {\n\n    /**\n     * Interprets an object's selected children as a graph and focuses the\n     * camera on their (graph-wise) parents.\n     * @param context\n     *  The application context.\n     * @param object\n     *  The object.\n     */\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\n        super();\n        let objects = object.children.filter(c => c.isSelected());\n        if(!objects.length) {\n            return;\n        }\n        // Get (graph-wise) parents\n        let parents = new Set<DiagramObjectModel>;\n        for(let obj of objects) {\n            for(let n of this.getPrevBlocks(obj)) {\n                parents.add(n);\n            }\n        }\n        // Unselect objects\n        this.add(new UnselectDescendants(object));\n        // Select parents\n        for(let child of parents) {\n            this.add(new SelectObject(child));\n        }\n        // Move camera to parents\n        if(parents.size) {\n            this.add(new MoveCameraToObjects(context, [...parents]));\n        }\n    }\n\n    /**\n     * Resolve prev graph-wise blocks.\n     * @param obj\n     *  The source object.\n     */\n    private getPrevBlocks(obj: DiagramObjectModel): Set<DiagramObjectModel> {\n        let set = new Set<DiagramObjectModel>();\n        let prev = SemanticAnalyzer.getPrevGraphLinks(obj);\n        for(let p of prev) {\n            if(p instanceof DiagramLineModel) {\n                set = new Set([...set, ...this.getPrevBlocks(p)])\n            } else {\n                set.add(p);\n            }\n        }\n        return set;\n    }\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { MoveCameraToObjects } from \"./MoveCameraToObjects\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class MoveCameraToSelection extends GroupCommand {\n\n    /**\n     * Focuses the camera on an object's selected children.\n     * @param context\n     *  The application context.\n     * @param object\n     *  The object.\n     */\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\n        super();\n        let objects = object.children.filter(c => c.isSelected());\n        if(!objects.length) {\n            return;\n        }\n        // Move camera to selected children\n        this.add(new MoveCameraToObjects(context, objects));\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class MoveObjectBy extends PageCommand {\n    \n    /**\n     * The object.\n     */\n    private _object: DiagramObjectModel;\n    \n    /**\n     * The object's change in x.\n     */\n    private _dx: number;\n\n    /**\n     * The object's change in y.\n     */\n    private _dy: number;\n\n\n    /**\n     * Moves an object relative to its current position.\n     * @param object\n     *  The object.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     */\n    constructor(object: DiagramObjectModel, dx: number, dy: number) {\n        super(object.root.id);\n        this._object = object;\n        this._dx = dx;\n        this._dy = dy;\n    }\n\n    \n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._object.moveBy(this._dx, this._dy);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._object.moveBy(-this._dx, -this._dy);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class MoveObjectTo extends PageCommand {\n    \n    /**\n     * The object.\n     */\n    private _object: DiagramObjectModel;\n    \n    /**\n     * The object's last x coordinate.\n     */\n    private _lx: number;\n\n    /**\n     * The object's last y coordinate.\n     */\n    private _ly: number;\n\n    /**\n     * The object's next x coordinate. \n     */\n    private _nx: number;\n\n    /**\n     * The object's next y coordinate.\n     */\n    private _ny: number;\n\n\n    /**\n     * Moves an object to a specific coordinate.\n     * @param object\n     *  The object.\n     * @param x\n     *  The x coordinate.\n     * @param y\n     *  The y coordinate.\n     */\n    constructor(object: DiagramObjectModel, x: number, y: number) {\n        super(object.root.id);\n        this._object = object;\n        this._lx = object.boundingBox.xMid;\n        this._ly = object.boundingBox.yMid;\n        this._nx = x;\n        this._ny = y;\n    }\n\n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._object.moveTo(this._nx, this._ny);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._object.moveTo(this._lx, this._ly);\n    }\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { AddObject } from \"./AddObject\";\nimport { UnselectDescendants } from \"./UnselectDescendants\";\nimport { DiagramObjectModel, Select } from \"@/assets/scripts/BlockDiagram\";\n\nexport class PasteToObject extends GroupCommand {\n\n    /**\n     * The application context.\n     */\n    private _context: ApplicationStore;\n\n\n    /**\n     * Pastes the application's clipboard to an object.\n     * @param context\n     *  The application context.\n     * @param object\n     *  The object.\n     */\n    constructor(context: ApplicationStore, object: DiagramObjectModel) {\n        super();\n        this._context = context;\n        // Clear the object's current selection\n        this.add(new UnselectDescendants(object));\n        // Copy the clipboard\n        let clones = object.factory.cloneObjects(...context.clipboard);\n        // Select clones and add them to object\n        for(let clone of clones) {\n            clone.setSelect(Select.True);\n            this.add(new AddObject(clone, object));\n            \n        }\n    }\n\n\n    /**\n     * Executes the command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public override execute(): boolean {\n        // Offset the clipboard\n        let o = this._context.settings.edit.clone_offset;\n        for(let obj of this._context.clipboard) {\n            obj.moveBy(o[0], o[1]);\n        }\n        // Paste the clipboard\n        return super.execute();\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class RedoPageCommand extends PageCommand {\n\n    /**\n     * The page to apply the redo operation to.\n     */\n    private _editor: PageEditor;\n\n\n    /**\n     * Redoes the last undone page command.\n     * @param context\n     *  The application context.\n     * @param page\n     *  The id of the page to apply the redo operation to.\n     */\n    constructor(context: ApplicationStore, page: string) {\n        super(page);\n        let editor = context.pages.get(page);\n        if(editor) {\n            this._editor = editor;\n        } else {\n            throw new Error(`'${ page }' is not a page.`);\n        }\n    }\n\n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._editor.redo();\n        return false;\n    }\n    \n    /**\n     * Undoes the page command.\n     */\n    public undo(): void {}\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { Order, ReorderObject } from \"./ReorderObject\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class RelayerSelection extends GroupCommand {\n\n    /**\n     * Reorders an object's selected children.\n     * @param object\n     *  The object.\n     * @param order\n     *  The new ordering.\n     */\n    constructor(object: DiagramObjectModel, order: Order) {\n        super();\n        let select = object.children.filter(c => c.isSelected());\n        switch(order) {\n            case Order.Top:\n            case Order.OneAbove:\n                for(let i = select.length - 1; 0 <= i; i--) {\n                    this.add(new ReorderObject(select[i], order));\n                }\n                break;\n            case Order.Bottom:\n            case Order.OneBelow:\n                for(let i = 0; i < select.length; i++) {\n                    this.add(new ReorderObject(select[i], order));\n                }\n                break;\n        }\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { PageModel } from \"@/assets/scripts/BlockDiagram\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class ResetCamera extends PageCommand {\n\n    /**\n     * The editor.\n     */\n    private _editor: PageEditor;\n\n\n    /**\n     * Resets a page editor's camera.\n     * @param context\n     *  The application context.\n     * @param page\n     *  The page.\n     */\n    constructor(context: ApplicationStore, page: PageModel) {\n        super(page.id);\n        let editor = context.pages.get(page.id);\n        if(!editor) {\n            throw new Error(\n                `Page '${ page.id }' does not have an editor.`\n            );\n        }\n        this._editor = editor;\n    }\n    \n    \n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._editor.location.value = { x: 0, y: 0, k: 1 };\n        return false;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {}\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { SelectObject } from \"./SelectObject\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\n\nexport class SelectChildren extends GroupCommand {\n\n    /**\n     * Selects an object's children.\n     * @param object\n     *  The object.\n     */\n    constructor(object: DiagramObjectModel) {\n        super();\n        for(let obj of object.children) {\n            this.add(new SelectObject(obj));\n        }\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { DateProperty } from \"@/assets/scripts/BlockDiagram\";\n\nexport class SetDateProperty extends PageCommand {\n\n    /**\n     * The property to modify.\n     */\n    private _property: DateProperty;\n\n    /**\n     * The property's current value.\n     */\n    private _lastValue: Date | null;\n\n    /**\n     * The property's new value.\n     */\n    private _nextValue: Date | null;\n\n\n    /**\n     * Sets a date property's value.\n     * @param property\n     *  The date property.\n     * @param value\n     *  The property's new value.\n     */\n    constructor(property: DateProperty, value: Date | null) {\n        let lv = property.toRawValue();\n        let root = property.root;\n        if(!root) {\n            throw new Error(\"Property does not have a root.\")\n        }\n        super(root.object.root.id);\n        this._property = property;\n        this._lastValue = lv !== null ? new Date(lv) : lv;\n        this._nextValue = value;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._property.setValue(this._nextValue);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._property.setValue(this._lastValue);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { EnumProperty } from \"@/assets/scripts/BlockDiagram\";\n\nexport class SetEnumProperty extends PageCommand {\n\n    /**\n     * The property to modify.\n     */\n    private _property: EnumProperty;\n\n    /**\n     * The property's current value.\n     */\n    private _lastValue: string | null;\n\n    /**\n     * The property's new value.\n     */\n    private _nextValue: string | null;\n\n\n    /**\n     * Sets a enum property's value.\n     * @param property\n     *  The enum property.\n     * @param value\n     *  The property's new value.\n     */\n    constructor(property: EnumProperty, value: string) {\n        let root = property.root;\n        if(!root) {\n            throw new Error(\"Property does not have a root.\")\n        }\n        super(root.object.root.id);\n        this._property = property;\n        this._lastValue = property.toRawValue();\n        this._nextValue = value;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._property.setValue(this._nextValue);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._property.setValue(this._lastValue);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { NumberProperty } from \"@/assets/scripts/BlockDiagram\";\n\nexport class SetNumberProperty extends PageCommand {\n\n    /**\n     * The property to modify.\n     */\n    private _property: NumberProperty;\n\n    /**\n     * The property's current value.\n     */\n    private _lastValue: number | null;\n\n    /**\n     * The property's new value.\n     */\n    private _nextValue: number | null;\n\n\n    /**\n     * Sets a number property's value.\n     * @param property\n     *  The number property.\n     * @param value\n     *  The property's new value.\n     */\n    constructor(property: NumberProperty, value: number | null) {\n        let root = property.root;\n        if(!root) {\n            throw new Error(\"Property does not have a root.\")\n        }\n        super(root.object.root.id);\n        this._property = property;\n        this._lastValue = property.toRawValue();\n        this._nextValue = value;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._property.setValue(this._nextValue);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._property.setValue(this._lastValue);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { StringProperty } from \"@/assets/scripts/BlockDiagram\";\n\nexport class SetStringProperty extends PageCommand {\n\n    /**\n     * The property to modify.\n     */\n    private _property: StringProperty;\n\n    /**\n     * The property's current value.\n     */\n    private _lastValue: string | null;\n\n    /**\n     * The property's new value.\n     */\n    private _nextValue: string | null;\n\n\n    /**\n     * Sets a string property's value.\n     * @param property\n     *  The string property.\n     * @param value\n     *  The property's new value.\n     */\n    constructor(property: StringProperty, value: string) {\n        let root = property.root;\n        if(!root) {\n            throw new Error(\"Property does not have a root.\")\n        }\n        super(root.object.root.id);\n        this._property = property;\n        this._lastValue = property.toRawValue();\n        this._nextValue = value;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._property.setValue(this._nextValue);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._property.setValue(this._lastValue);\n    }\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { AddObject } from \"./AddObject\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport {\n    Alignment,\n    DiagramObjectModel,\n    round\n} from \"@/assets/scripts/BlockDiagram\";\n\nexport class SpawnObject extends GroupCommand {\n\n    /**\n     * Spawns a new object.\n     * @param context\n     *  The application context.\n     * @param parent\n     *  The parent object.\n     * @param template\n     *  The object's template.\n     */\n    constructor(\n        context: ApplicationStore,\n        parent: DiagramObjectModel,\n        template: string\n    );\n\n    /**\n     * Spawns a new object.\n     * @param context\n     *  The application context.\n     * @param parent\n     *  The parent object.\n     * @param template\n     *  The object's template.\n     * @param x\n     *  The object's x-coordinate relative to the viewport.\n     * @param y\n     *  The object's y-coordinate relative to the viewport.\n     */\n    constructor(\n        context: ApplicationStore,\n        parent: DiagramObjectModel,\n        template: string,\n        x: number,\n        y: number\n    );\n    constructor(\n        context: ApplicationStore,\n        parent: DiagramObjectModel,\n        template: string,\n        x?: number,\n        y?: number\n    ) {\n        super();\n        let editor = context.pages.get(parent.root.id);\n        if(!editor) {\n            throw new Error(\n                `'${ parent.id }' must belong to an existing editor.`\n            );\n        }\n        // Create object\n        let object = parent.factory.createObject(template);\n        // Move object\n        let view = editor.view;\n        if(x === undefined) {\n            // Position in center of screen\n            x = Math.round(((view.w / 2) - view.x) / view.k);\n        } else {\n            // Position left-side of object at x \n            let { xMid, xMin } = object.boundingBox;\n            x = ((x - view.x) / view.k) + xMid - xMin;\n        }\n        if(y === undefined) {\n            // Position in middle of screen\n            y = Math.round(((view.h / 2) - view.y) / view.k);\n        } else {\n            // Position top-side of object at y \n            let { yMid, yMin } = object.boundingBox;\n            y = ((y - view.y) / view.k) + yMid - yMin;\n        }\n        if(object.getAlignment() === Alignment.Grid) {\n            // If aligned to grid, snap x and y\n            x = round(x, editor.page.grid[0]);\n            y = round(y, editor.page.grid[1]);\n        }\n        object.moveTo(x, y);\n        // Add object\n        this.add(new AddObject(object, parent));\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class UndoPageCommand extends PageCommand {\n\n    /**\n     * The page to apply the undo operation to.\n     */\n    private _editor: PageEditor;\n\n\n    /**\n     * Undoes the last page command.\n     * @param context\n     *  The application context.\n     * @param page\n     *  The id of the page to apply the undo operation to.\n     */\n    constructor(context: ApplicationStore, page: string) {\n        super(page);\n        let editor = context.pages.get(page);\n        if(editor) {\n            this._editor = editor;\n        } else {\n            throw new Error(`'${ page }' is not a page.`);\n        }\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._editor.undo();\n        return false;\n    }\n    \n    /**\n     * Undoes the page command.\n     */\n    public undo(): void {}\n\n}\n","import { GroupCommand } from \"./GroupCommand\";\nimport { UnhoverObject } from \"./UnhoverObject\";\nimport { DiagramObjectModel, Hover, HoverMask } from \"@/assets/scripts/BlockDiagram\";\n\nexport class UnhoverDescendants extends GroupCommand {\n\n    /**\n     * Unhover an object's descendants.\n     * @param object\n     *  The object.\n     */\n    constructor(object: DiagramObjectModel) {\n        super();\n        for(let obj of object.getSubtree(this.isDirectlyHovered)) {\n            this.add(new UnhoverObject(obj));\n        }\n    }\n\n\n    /**\n     * Tests if an object is directly hovered.\n     * @param obj\n     *  The object.\n     * @returns\n     *  True if the object is directly hovered, false otherwise.\n     */\n    private isDirectlyHovered(obj: DiagramObjectModel): boolean {\n        return (obj.attrs & HoverMask) === Hover.Direct\n    }\n\n}\n\n","import { PageCommand } from \"../PageCommand\";\nimport { DiagramObjectModel, PositionSetByUser } from \"@/assets/scripts/BlockDiagram\";\n\nexport class UserSetObjectPosition extends PageCommand {\n\n    /**\n     * The object.\n     */\n    private _object: DiagramObjectModel;\n\n\n    /**\n     * Declares that an object's position was set by the user.\n     * @param object\n     *  The object.\n     */\n    constructor(object: DiagramObjectModel) {\n        super(object.root.id);\n        this._object = object;\n    }\n    \n\n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._object.setPositionSetByUser(PositionSetByUser.True);\n        return true;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {\n        this._object.setPositionSetByUser(PositionSetByUser.False);\n    }\n\n}\n","import { PageCommand } from \"../PageCommand\";\nimport { ApplicationStore } from \"@/store/StoreTypes\";\nimport { CameraLocation, PageModel } from \"@/assets/scripts/BlockDiagram\";\nimport { PageEditor } from \"@/store/PageEditor\";\n\nexport class ZoomCamera extends PageCommand {\n\n    /**\n     * The editor.\n     */\n    private _editor: PageEditor;\n\n    /**\n     * The camera's new location.\n     */\n    private _location: CameraLocation;\n\n\n    /**\n     * Zooms a page editor's camera in or out.\n     * @param context\n     *  The application context.\n     * @param page\n     *  The page.\n     * @param delta\n     *  The camera's change in zoom.\n     */\n    constructor(context: ApplicationStore, page: PageModel, delta: number) {\n        super(page.id);\n        let editor = context.pages.get(page.id);\n        if(!editor) {\n            throw new Error(\n                `Page '${ page.id }' does not have an editor.`\n            );\n        }\n        this._editor = editor;\n        let k = editor.view.k\n        let x = ((editor.view.w / 2) - editor.view.x) / k;\n        let y = ((editor.view.h / 2) - editor.view.y) / k;\n        this._location = { x, y, k: k + delta };\n    }\n    \n    \n    /**\n     * Executes the page command.\n     * @returns\n     *  True if the command should be recorded, false otherwise.\n     */\n    public execute(): boolean {\n        this._editor.location.value = this._location;\n        return false;\n    }\n\n    /**\n     * Undoes the page command.\n     */\n    public undo() {}\n\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ContextMenuListing = _resolveComponent(\"ContextMenuListing\")!\n  const _component_FocusBox = _resolveComponent(\"FocusBox\")!\n\n  return (_openBlock(), _createBlock(_component_FocusBox, {\n    style: _normalizeStyle(_ctx.offset),\n    class: \"context-menu-control\",\n    onUnfocus: _cache[1] || (_cache[1] = ($event: any) => (_ctx.$emit('unfocus'))),\n    onContextmenu: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"]))\n  }, {\n    default: _withCtx(() => [\n      _createVNode(_component_ContextMenuListing, {\n        sections: _ctx.sections,\n        onSelect: _cache[0] || (_cache[0] = data => _ctx.$emit('select', data)),\n        forceInsideWindow: false\n      }, null, 8, [\"sections\"])\n    ]),\n    _: 1\n  }, 8, [\"style\"]))\n}","\n// Dependencies\nimport { defineComponent, PropType } from 'vue';\nimport { ContextMenuSection } from \"@/assets/scripts/ContextMenuTypes\";\n// Components\nimport FocusBox from \"@/components/Containers/FocusBox.vue\";\nimport ContextMenuListing from \"./ContextMenuListing.vue\";\n\nexport default defineComponent({\n  name: 'ContextMenu',\n  props: {\n    sections: {\n      type: Array as PropType<ContextMenuSection[]>,\n      required: true\n    }\n  },\n  data() {\n    return {\n      xOffset: 0,\n      yOffset: 0,\n    }\n  },\n  computed: {\n\n    /**\n     * Returns the ContextMenu's offset styling.\n     * @returns\n     *  The ContextMenu's offset styling.\n     */\n    offset(): { marginTop: string, marginLeft: string } {\n      return {\n        marginTop: `${ this.yOffset }px`,\n        marginLeft: `${ this.xOffset }px`\n      }\n    }\n\n  },\n  emits: [\"select\", \"unfocus\"],\n  mounted() {\n    // Offset menu if outside of viewport\n    let viewWidth  = window.innerWidth;\n    let viewHeight = window.innerHeight;\n    let { bottom, right } = this.$el.getBoundingClientRect();\n    // -1 ensures cursor is over menu and not the element beneath it\n    this.xOffset = right > viewWidth ? -(this.$el.clientWidth - 1) : 0;\n    this.yOffset = bottom > viewHeight ? -(this.$el.clientHeight - 1) : 0;\n  },\n  components: { FocusBox, ContextMenuListing }\n});\n","import { render } from \"./ContextMenu.vue?vue&type=template&id=6a0233c2&scoped=true&ts=true\"\nimport script from \"./ContextMenu.vue?vue&type=script&lang=ts\"\nexport * from \"./ContextMenu.vue?vue&type=script&lang=ts\"\n\nimport \"./ContextMenu.vue?vue&type=style&index=0&id=6a0233c2&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6a0233c2\"]])\n\nexport default __exports__","\nimport * as App from \"@/store/Commands/AppCommands\";\nimport * as Page from \"@/store/Commands/PageCommands\";\nimport * as Store from \"@/store/StoreTypes\";\n// Dependencies\nimport { CommandEmitter } from \"@/store/Commands/Command\";\nimport { defineComponent, inject, markRaw } from 'vue';\nimport { mapGetters, mapMutations, mapState } from \"vuex\";\nimport {\n  ContextMenu as Menu,\n  ContextMenuSection,\n  ContextMenuSubmenu,\n  MenuType\n} from \"@/assets/scripts/ContextMenuTypes\";\nimport { \n  BlockDiagram,CameraLocation,Cursor,\n  CursorCssName,\n  DiagramAnchorableModel,\n  DiagramAnchorModel,\n  DiagramLineModel,\n  DiagramObjectModel,\n  MouseClick,\n  Namespace,\n  titleCase\n} from \"@/assets/scripts/BlockDiagram\";\n// Components\nimport ContextMenu from \"@/components/Controls/ContextMenu.vue\";\n\nexport default defineComponent({\n  name: 'BlockDiagram',\n  setup() {\n    return {\n      isHotkeyActive: inject(\"isHotkeyActive\") as \n        (sequence: string, strict?: boolean) => boolean\n    }\n  },\n  data() {\n    return {\n      cursor: Cursor.Default,\n      diagram: markRaw(new BlockDiagram()),\n      menu: {\n        x: 0,\n        y: 0,\n        show: false,\n      },\n      view: { \n        x: 0, y: 0, k: 1,\n        w: 0, h: 0\n      }\n    }\n  },\n  computed: {\n\n    /**\n     * Application Store data\n     */\n    ...mapState(\"ApplicationStore\", {\n      ctx(state: Store.ApplicationStore): Store.ApplicationStore {\n        return state;\n      },\n      editor(state: Store.ApplicationStore): Store.PageEditor {\n        return state.activePage;\n      },\n      camera(state: Store.ApplicationStore): CameraLocation {\n        return state.activePage.location.value;\n      },\n      pageUpdate(state: Store.ApplicationStore): number {\n        return state.activePage.trigger.value;\n      },\n      displayGrid(state: Store.ApplicationStore): boolean {\n        return state.settings.view.diagram.display_grid;\n      },\n      displayShadows(state: Store.ApplicationStore): boolean {\n        return state.settings.view.diagram.display_shadows;\n      },\n      displayDebugMode(state: Store.ApplicationStore): boolean {\n        return state.settings.view.diagram.display_debug_mode;\n      },\n      renderHighQuality(state: Store.ApplicationStore): boolean {\n        return state.settings.view.diagram.render_high_quality;\n      },\n      disableShadowsAt(state: Store.ApplicationStore): number {\n        return state.settings.view.diagram.disable_shadows_at;\n      },\n      multiselectHotkey(state: Store.ApplicationStore): string {\n        return state.settings.hotkeys.select.many;\n      }\n    }),\n\n    ...mapGetters(\"ApplicationStore\", [\"hasSelection\"]),\n\n    /**\n     * Context Menu Store data\n     */\n    ...mapGetters(\"ContextMenuStore\", [\n      \"deleteMenu\",\n      \"clipboardMenu\",\n      \"duplicateMenu\",\n      \"layeringMenu\",\n      \"jumpMenu\",\n      \"undoRedoMenu\",\n      \"createAtMenu\",\n      \"selectAllMenu\",\n      \"zoomMenu\",\n      \"diagramViewMenu\"\n    ]),\n\n    /**\n     * Returns the current cursor style.\n     * @returns\n     *  The current cursor style.\n     */\n    cursorStyle(): { cursor: string } {\n      return { cursor: CursorCssName[this.cursor] }\n    },\n\n    /**\n     * Returns the context menu's style.\n     * @returns\n     *  The context menu's style.\n     */\n    menuStyle(): { top: string; left: string } {\n      return {\n        top: `${this.menu.y}px`,\n        left: `${this.menu.x}px`,\n      };\n    },\n\n    /**\n     * Returns the context menu options.\n     * @returns\n     *  The context menu options.\n     */\n    menuOptions(): ContextMenuSection[] {\n      if(this.hasSelection) {\n        return [\n          this.deleteMenu,\n          this.clipboardMenu,\n          this.duplicateMenu,\n          this.layeringMenu,\n          this.jumpMenu\n        ];\n      } else {\n        return [\n          this.undoRedoMenu,\n          this.createAtMenu,\n          this.selectAllMenu,\n          this.zoomMenu,\n          this.diagramViewMenu\n        ];\n      }\n    }\n\n  },\n  methods: {\n\n    /**\n     * Application Store mutations\n     */\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\n\n    /**\n     * Menu item selection behavior.\n     * @param emitter\n     *  Menu item's command emitter.\n     */\n    async onItemSelect(emitter: CommandEmitter) {\n      try {\n        let cmd = emitter();\n        if(cmd instanceof Promise) {\n          this.execute(await cmd);\n        } else {\n          this.execute(cmd);\n        }\n      } catch(ex: any) {\n        console.error(ex);\n      }\n      this.closeContextMenu();\n    },\n\n    /**\n     * Opens the context menu.\n     * @param x\n     *  The menu's x coordinate (relative to the container).\n     * @param y\n     *  The menu's y coordinate (relative to the container).\n     */\n    openContextMenu(x: number, y: number) {\n      // Allow unfocus event to run first (if context\n      // menu is already present) then show context menu.\n      requestAnimationFrame(() => {\n        this.menu.show = true;\n        this.menu.x = x;\n        this.menu.y = y;\n      })\n    },\n\n    /**\n     * Closes the context menu.\n     */\n    closeContextMenu() {\n      this.menu.show = false;\n    },\n\n\n    /**\n     * Object hover behavior.\n     * @param o\n     *  The hovered object. `undefined` if nothing is hovered.\n     * @param c\n     *  The cursor to use.\n     */\n    onObjectHover(o: DiagramObjectModel | undefined, c: number) {\n      this.cursor = c;\n      this.execute(new Page.UnhoverDescendants(this.editor.page));\n      if(o) {\n        this.execute(new Page.HoverObject(o));\n      }\n    },\n\n    /**\n     * Object click behavior.\n     * @param e\n     *  The click event.\n     * @param o\n     *  The clicked object.\n     * @param x\n     *  The clicked x-coordinate, relative to the container.\n     * @param y\n     *  The clicked y-coordinate, relative to the container.\n     */\n    onObjectClick(e: PointerEvent, o: DiagramObjectModel, x: number, y: number) {\n      // Unselect items, if needed\n      let isMultiselect = this.isHotkeyActive(this.multiselectHotkey);\n      if(!isMultiselect && !o.isSelected()) {\n        this.execute(new Page.UnselectDescendants(this.editor.page));\n      }\n      // Select item\n      this.execute(new Page.SelectObject(o));\n      // Open context menu, if needed\n      if (e.button === MouseClick.Right) {\n        this.openContextMenu(x, y);\n      }\n    },\n\n    /**\n     * Canvas click behavior.\n     * @param e\n     *  The click event.\n     * @param x\n     *  The clicked x-coordinate, relative to the container.\n     * @param y\n     *  The clicked y-coordinate, relative to the container.\n     */\n    onCanvasClick(e: PointerEvent, x: number, y: number) {\n      this.execute(new Page.UnselectDescendants(this.editor.page));\n      this.execute(new App.SetEditorPointerLocation(this.ctx, this.editor.id, x, y));\n      if (e.button === MouseClick.Right) {\n        this.openContextMenu(x, y);\n      }\n    },\n    \n    /**\n     * Object move behavior.\n     * @param o\n     *  The moved objects.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     */\n    onObjectMove(o: DiagramObjectModel[], dx: number, dy:number) {\n      let cmd = new Page.GroupCommand();\n      for(let obj of o) {\n        if(!obj.hasUserSetPosition()) {\n            cmd.add(new Page.UserSetObjectPosition(obj));\n        }\n        cmd.add(new Page.MoveObjectBy(obj, dx, dy));\n      }\n      this.execute(cmd);\n    },\n\n    /**\n     * Object attach behavior.\n     * @param o\n     *  The object.\n     * @param a\n     *  The object's anchor.\n     */\n    onObjectAttach(o: DiagramAnchorableModel, a: DiagramAnchorModel) {\n      let { xMid, yMid } = a.boundingBox;\n      let cmd = new Page.GroupCommand();\n      if(o.isAttached()) {\n        cmd.add(new Page.DetachObject(o));  \n      }\n      cmd.add(new Page.MoveObjectTo(o, xMid, yMid));\n      cmd.add(new Page.AttachObject(a, o));\n      this.execute(cmd);\n    },\n\n    /**\n     * Object detach behavior.\n     * @param o\n     *  The object to detach.\n     * @param dx\n     *  The change in x.\n     * @param dy\n     *  The change in y.\n     */\n    onObjectDetach(o: DiagramAnchorableModel, dx: number, dy: number) {\n      let cmd = new Page.GroupCommand();\n      cmd.add(new Page.DetachObject(o));\n      cmd.add(new Page.MoveObjectBy(o, dx, dy));\n      this.execute(cmd);\n    },\n\n    /**\n     * Line create behavior.\n     * @param o\n     *  The line object.\n     * @param p\n     *  The parent object.\n     * @param s\n     *  The line source's anchor.\n     * @param t\n     *  The line target's anchor. `undefined` if there wasn't one.\n     */\n    onLineCreate(\n      o: DiagramLineModel,\n      p: DiagramObjectModel,\n      s: DiagramAnchorModel,\n      t?: DiagramAnchorModel\n    ) {\n      this.execute(new Page.AddLineObject(o, p, s, t));\n      this.execute(new Page.UnselectDescendants(this.editor.page));\n      this.execute(new Page.SelectObject(o));\n    },\n\n    /**\n     * View transform behavior.\n     * @param x\n     *  The view's left x-coordinate.\n     * @param y\n     *  The view's top y-coordinate.\n     * @param k\n     *  The view's scale.\n     * @param w\n     *  The view's width.\n     * @param h\n     *  The view's height.\n     */\n    onViewTransform(x: number, y: number, k: number, w: number, h: number) {\n      this.view = { x, y, k, w, h };\n      this.execute(\n        new App.SetEditorViewParams(\n          this.ctx, this.editor.id, { ...this.view }\n        )\n      );\n    }\n\n  },\n  watch: {\n    // On page change\n    editor() {\n      // Set page\n      this.diagram.setPage(markRaw(this.editor.page));\n      // Update view\n      this.diagram.updateView();\n      this.diagram.setCameraLocation(this.camera, 0);\n      // Configure view parameters\n      this.execute(\n        new App.SetEditorViewParams(\n          this.ctx, this.editor.id, { ...this.view }\n        )\n      );\n    },\n    // On camera update\n    camera() {\n      this.diagram.setCameraLocation(this.camera);\n    },\n    // On page update\n    pageUpdate() {\n      this.diagram.updateView();\n      this.diagram.render();\n    },\n    // On display grid change\n    displayGrid() {\n      this.diagram.setGridDisplay(this.displayGrid);\n      this.diagram.render();\n    },\n    // On display shadows change\n    displayShadows() {\n      this.diagram.setShadowsDisplay(this.displayShadows);\n      this.diagram.render();\n    },\n    // On display debug change\n    displayDebugMode() {\n      this.diagram.setDebugDisplay(this.displayDebugMode);\n      this.diagram.render();\n    },\n    // On render quality change\n    renderHighQuality() {\n      this.diagram.setSsaaScale(this.renderHighQuality ? 2 : 1);\n      this.diagram.render();\n    },\n    // On 'disable shadows at' change\n    disableShadowsAt() {\n      this.diagram.setShadowsDisableAt(this.disableShadowsAt);\n      this.diagram.render();\n    }\n  },\n  mounted() {\n    \n    // Subscribe to diagram events\n    this.diagram.on(\"object-hover\", this.onObjectHover);\n    this.diagram.on(\"object-click\", this.onObjectClick);\n    this.diagram.on(\"canvas-click\", this.onCanvasClick);\n    this.diagram.on(\"object-move\", this.onObjectMove);\n    this.diagram.on(\"object-attach\", this.onObjectAttach);\n    this.diagram.on(\"object-detach\", this.onObjectDetach);\n    this.diagram.on(\"view-transform\", this.onViewTransform);\n    this.diagram.on(\"line-create\", this.onLineCreate);\n\n    // Configure the current page\n    this.diagram.setGridDisplay(this.displayGrid);\n    this.diagram.setShadowsDisplay(this.displayShadows);\n    this.diagram.setDebugDisplay(this.displayDebugMode);\n    this.diagram.setSsaaScale(this.renderHighQuality ? 2 : 1);\n    this.diagram.setShadowsDisableAt(this.disableShadowsAt);\n    this.diagram.setPage(markRaw(this.editor.page));\n    \n    // Inject the diagram\n    this.diagram.inject(this.$el);\n    this.diagram.updateView();\n    this.diagram.setCameraLocation(this.camera, 0);\n\n  },\n  unmounted() {\n    this.diagram.destroy();\n  },\n  components: { ContextMenu }\n});\n","import { render } from \"./BlockDiagram.vue?vue&type=template&id=52fd0e8e&scoped=true&ts=true\"\nimport script from \"./BlockDiagram.vue?vue&type=script&lang=ts\"\nexport * from \"./BlockDiagram.vue?vue&type=script&lang=ts\"\n\nimport \"./BlockDiagram.vue?vue&type=style&index=0&id=52fd0e8e&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-52fd0e8e\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-783f2534\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"app-footer-bar-element\" }\nconst _hoisted_2 = { class: \"info left\" }\nconst _hoisted_3 = { class: \"selected\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Selected:\", -1))\nconst _hoisted_5 = { class: \"info right\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"page-check valid\"\n}\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"✓\", -1))\nconst _hoisted_8 = {\n  key: 1,\n  class: \"page-check invalid\"\n}\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"⚠\", -1))\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"p\", _hoisted_3, [\n        _hoisted_4,\n        _createTextVNode(\" \" + _toDisplayString(_ctx.hasSelection), 1)\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      (_ctx.isValid)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n            _hoisted_7,\n            _createTextVNode(\" Valid \" + _toDisplayString(_ctx.fileName), 1)\n          ]))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n            _hoisted_9,\n            _createTextVNode(\" Invalid \" + _toDisplayString(_ctx.fileName), 1)\n          ]))\n    ])\n  ]))\n}","\nimport Configuration from \"@/assets/builder.config\";\nimport { defineComponent } from \"vue\";\nimport { mapGetters } from \"vuex\";\n\nexport default defineComponent({\n  name: \"AppFooterBar\",\n  data(){\n    return {\n      fileName: Configuration.file_type_name\n    }\n  },\n  computed: {\n\n    /**\n     * Application Store getters\n     */\n    ...mapGetters(\"ApplicationStore\", [\n        \"hasSelection\", \"isValid\"\n    ])\n    \n  }\n});\n","import { render } from \"./AppFooterBar.vue?vue&type=template&id=783f2534&scoped=true&ts=true\"\nimport script from \"./AppFooterBar.vue?vue&type=script&lang=ts\"\nexport * from \"./AppFooterBar.vue?vue&type=script&lang=ts\"\n\nimport \"./AppFooterBar.vue?vue&type=style&index=0&id=783f2534&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-783f2534\"]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_PropertyEditor = _resolveComponent(\"PropertyEditor\")!\n  const _component_AccordionPane = _resolveComponent(\"AccordionPane\")!\n  const _component_ValidatorProblems = _resolveComponent(\"ValidatorProblems\")!\n  const _component_AccordionBox = _resolveComponent(\"AccordionBox\")!\n\n  return (_openBlock(), _createBlock(_component_AccordionBox, { class: \"editor-tabs-element\" }, {\n    default: _withCtx(() => [\n      _createVNode(_component_AccordionPane, {\n        name: \"Properties\",\n        units: 3\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_PropertyEditor, {\n            class: \"properties-pane\",\n            property: _ctx.selected\n          }, {\n            \"no-props\": _withCtx(() => [\n              _createTextVNode(\" The selected object has no properties. \")\n            ]),\n            \"no-prop\": _withCtx(() => [\n              _createTextVNode(\" Select a single object to edit its properties. \")\n            ]),\n            _: 1\n          }, 8, [\"property\"])\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_AccordionPane, {\n        name: \"Problems\",\n        units: 1\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_ValidatorProblems, { class: \"validator-problems-pane\" })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\n// Dependencies\nimport { PointerTracker } from \"@/assets/scripts/PointerTracker\";\nimport { defineComponent, h, markRaw } from \"vue\";\n// Components\nimport CollapseArrow from \"@/components/Icons/CollapseArrow.vue\";\n\nexport default defineComponent({\n  name: \"AccordionBox\",\n  data() {\n    return {\n      track: markRaw(new PointerTracker()),\n      panes: [] as AccordionPaneHeight[],\n      activePane: 0,\n      onResizeObserver: null as ResizeObserver | null,\n    }\n  },\n  props: {\n    collapseHeight: {\n      type: Number,\n      default: 30,\n    }\n  },\n  computed: {\n\n    /**\n     * Returns the accordion box's style.\n     * @returns\n     *  The accordion box's style.\n     */\n    boxStyle() {\n      let gridTemplateRows = this.panes.map(\n        o => `${ o.activeHeight + this.collapseHeight }px`\n      ).join(\" \");\n      return { gridTemplateRows }\n    }\n\n  },\n  \n  methods: {\n\n    /**\n     * Pane collapse behavior.\n     * @param event\n     *  The pointer event.\n     * @param i\n     *  The index of the pane.\n     */\n    onCollapse(event: PointerEvent, i: number) {\n      if(this.panes[i].collapsed) {\n        this.uncollapsePane(i);\n      } else {\n        this.collapsePane(i);\n      }\n    },\n\n    /**\n     * Collapses a pane.\n     * @param i\n     *  The index of the pane.\n     */\n    collapsePane(i: number) {\n      let p = this.panes;\n\n      // Cache heights\n      this.cacheHeights();\n\n      // Calculate next height\n      let currentHeight = p.reduce((a,o) => a + o.cachedHeight, 0);\n      let elementHeight = this.getAvailableHeight(); \n      let nextHeight = currentHeight - p[i].cachedHeight;\n      \n      // Collapse window\n      p[i].collapsed = true;\n      p[i].activeHeight = 0;\n      p[i].uncollapsedHeight = p[i].cachedHeight;\n\n      // Return collapsed height if room available.\n      if(nextHeight < elementHeight) {\n        let available = elementHeight - nextHeight;\n        let availableDelta = Math.min(available, p[i].cachedHeight);\n        for(let j = p.length - 1; 0 <= j; j--) {\n          if(p[j].collapsed) {\n            continue;\n          }\n          p[j].activeHeight += availableDelta;\n          break;\n        }\n      }\n\n      // Cache heights\n      this.cacheHeights();\n\n    },\n\n    /**\n     * Uncollapses a pane.\n     * @param i\n     *  The index of the pane.\n     */\n    uncollapsePane(i: number) {\n      let p = this.panes;\n      let neededHeight = p[i].uncollapsedHeight;\n      \n      // Cache heights\n      this.cacheHeights();\n\n      // Take collapsed height from element if available\n      let currentHeight = p.reduce((a,o) => a + o.cachedHeight, 0);\n      let elementHeight = this.getAvailableHeight();\n      if(currentHeight === 0) {\n        p[i].activeHeight += elementHeight;\n        neededHeight -= Math.min(neededHeight, elementHeight);\n      }\n\n      // Take collapsed height from panes if available\n      for(let j = p.length - 1; 0 <= j; j--) {\n        if(p[j].collapsed) {\n          continue;\n        }\n        let available = p[j].cachedHeight - p[j].minHeight;\n        let availableDelta = Math.min(available, neededHeight);\n        p[j].activeHeight -= availableDelta;\n        p[i].activeHeight += availableDelta;\n        neededHeight -= availableDelta;\n      }\n\n      // Snap to minimum height if needed\n      p[i].activeHeight = Math.max(p[i].activeHeight, p[i].minHeight);\n      p[i].collapsed = false;\n\n      // Cache heights\n      this.cacheHeights();\n\n    },\n\n    /**\n     * Header drag start behavior.\n     * @param event\n     *  The pointer event.\n     * @param i\n     *  The index of the header.\n     */\n    startDrag(event: PointerEvent, i: number) {\n      // Cache heights\n      this.cacheHeights();\n      // Set active pane\n      this.activePane = i;\n      // Capture pointer\n      this.track.capture(event, this.onDrag);\n      // Configure stop drag\n      document.addEventListener(\"pointerup\", this.stopDrag, { once: true });\n    },\n\n    /**\n     * Header drag behavior.\n     * @param event\n     *  The pointer event.\n     * @param track\n     *  The mouse tracker.\n     */\n    onDrag(_: PointerEvent, track: PointerTracker) {\n      let p = this.panes;\n\n      // Ignore no movement\n      if(track.movementY === 0)\n        return;\n      \n      // Reset panes\n      p.forEach(o => o.activeHeight = o.cachedHeight);\n      \n      // Drag above origin\n      if(track.deltaY < 0) {\n        // Select grow pane\n        let growPane = -1;\n        for(let i = this.activePane!; i < p.length; i++) {\n          if(!p[i].collapsed) {\n            growPane = i;\n            break;\n          }\n        }\n        if(growPane === -1) {\n          return;\n        }\n        // Resize grow pane\n        let remainingDelta = Math.abs(track.deltaY);\n        for(let i = this.activePane! - 1; 0 <= i; i--) {\n          if(p[i].collapsed) {\n            continue;\n          }\n          let available = p[i].cachedHeight - p[i].minHeight;\n          let availableDelta = Math.min(available, remainingDelta);\n          p[i].activeHeight = p[i].cachedHeight - availableDelta;\n          remainingDelta -= availableDelta;\n        }\n        let growAmount = Math.abs(track.deltaY) - remainingDelta;\n        p[growPane].activeHeight = p[growPane].cachedHeight + growAmount; \n      }\n\n      // Drag below origin\n      else {\n        // Select grow pane\n        let growPane = -1;\n        for(let i = this.activePane! - 1; 0 <= i; i--) {\n          if(!p[i].collapsed) {\n            growPane = i;\n            break;\n          }\n        }\n        if(growPane === -1) {\n          return;\n        }\n        // Resize grow pane\n        let remainingDelta = track.deltaY;\n        for(let i = this.activePane!; i < p.length; i++) {\n          if(p[i].collapsed) {\n            continue;\n          }\n          let available = p[i].cachedHeight - p[i].minHeight;\n          let availableDelta = Math.min(available, remainingDelta);\n          p[i].activeHeight = p[i].cachedHeight - availableDelta;\n          remainingDelta -= availableDelta;\n        }\n        let growAmount = track.deltaY - remainingDelta;\n        p[growPane].activeHeight = p[growPane].cachedHeight + growAmount;\n      }\n      \n    },\n\n    /**\n     * Header drag stop behavior.\n     * @param event\n     *  The pointer event.\n     */\n    stopDrag(event: PointerEvent) {\n      // Release pointer\n      this.track.release(event);\n      // Cache heights\n      this.cacheHeights();\n    },\n\n    /**\n     * Refits the panes inside the container.\n     */\n    refit() {\n      let p = this.panes;\n      let currentHeight = p.reduce((a,o) => a + o.cachedHeight, 0);\n      let elementHeight = this.getAvailableHeight();\n      \n      // If no height, bail\n      if(currentHeight === 0) {\n        return;\n      }\n\n      // Grow\n      else if(currentHeight <= elementHeight) {\n        let proportions = p.map(o => o.cachedHeight / currentHeight);\n        for(let i = 0; i < p.length; i++) {\n          p[i].activeHeight = elementHeight * proportions[i];\n        }\n      }\n\n      // Shrink\n      else {\n        let minElementHeight = p.reduce((a,o) => a + (o.collapsed ? 0 : o.minHeight), 0);\n        let n = currentHeight - Math.max(minElementHeight, elementHeight);\n        let d = currentHeight - minElementHeight;\n        let percentToMinimum = d !== 0 ? n / d : 1;\n        for(let i = 0; i < p.length; i++) {\n          if(p[i].collapsed) {\n            continue;\n          }\n          let delta = (p[i].cachedHeight - p[i].minHeight) * percentToMinimum;\n          p[i].activeHeight = p[i].cachedHeight - delta;\n        }\n      }\n\n    },\n\n    /**\n     * Resets the panes inside the container.\n     */\n    reset() {\n      if(!this.$slots.default)\n        return;\n\n      // Setup panes and heights\n      let panes: AccordionPaneHeight[] = [];\n      let units: number[] = [];\n      for(let slot of this.$slots.default()) {\n        units.push(slot.props?.units ?? 1);\n        panes.push({\n          minHeight: slot.props?.minHeight ?? 100,\n          activeHeight: 0,\n          cachedHeight: 0,\n          uncollapsedHeight: 0,\n          collapsed: slot.props?.collapsed ?? false\n        });\n      }\n      let totalHeight = this.getAvailableHeight();\n\n      // Configure base height\n      let totalUnits = units.reduce((a,b) => a+b);\n      for(let i = 0; i < panes.length; i++) {\n        let p = panes[i];\n        let height = totalHeight * (units[i] / totalUnits)\n        p.cachedHeight = Math.max(p.minHeight, height);\n      }\n      this.panes = panes;\n\n      // Fit to container\n      this.refit();\n\n      // Apply collapse state\n      for(let i = 0; i < this.panes.length; i++) {\n        if(this.panes[i].collapsed)\n          this.collapsePane(i);\n      }\n\n    },\n\n    /**\n     * Returns the amount of useable space available from the container.\n     */\n    getAvailableHeight() {\n      let height = this.$el.clientHeight;\n      if(!this.$slots.default) {\n        return height;\n      } else {\n        let totalPanes = this.$slots.default().length;\n        return height - (totalPanes * this.collapseHeight);\n      }\n    },\n\n    /**\n     * Caches the height of each pane.\n     */\n    cacheHeights() {\n      for(let pane of this.panes) {\n        pane.cachedHeight = pane.activeHeight;\n      }\n    }\n\n  },\n  mounted() {\n    // Configure resize observer\n    this.onResizeObserver = new ResizeObserver(() => this.refit());\n    this.onResizeObserver.observe(this.$el);\n    // Reset boxes\n    this.reset();\n  },\n  unmounted() {\n    this.onResizeObserver!.disconnect();\n  },\n  render() {\n    let children = [];\n    if(this.$slots.default) {\n      let _slots = this.$slots.default();\n      // Generate accordion boxes\n      for(let i = 0; i < _slots.length; i++) {\n        let slot = _slots[i];\n        // Generate handle\n        let handle = h(\n          \"div\",\n          {\n            class: \"accordion-box-handle\",\n            onPointerup: (e: PointerEvent) => this.stopDrag(e),\n            onPointerdown: (e: PointerEvent) => this.startDrag(e, i)\n          }\n        );\n        // Generate head\n        let head = h(\n          \"div\",\n          {\n            class: \"accordion-box-head\",\n            style: { height: `${ this.$props.collapseHeight }px` },\n            onClick: (e: PointerEvent) => this.onCollapse(e, i)\n          },\n          [\n            h(\n              CollapseArrow,\n              { \n                class: \"collapse-arrow\",\n                collapsed: this.panes[i]?.collapsed\n              }\n            ),\n            h(\"p\", slot.props?.name.toLocaleUpperCase())\n          ]\n        );\n        // Generate body\n        let body = h(\"div\", { class: \"accordion-box-body\" }, slot);\n        // Generate box\n        let box = h(\n          \"div\",\n          { \n            class: [\n              \"accordion-box\",\n              { collapsed: this.panes[i]?.collapsed }\n            ]\n          },\n          [handle, head, body]\n        );\n        // Add box\n        children.push(box);\n      }\n    }\n    // Return accordion box container\n    return h(\n      \"div\",\n      { \n        class: \"accordion-box-container\",\n        style: this.boxStyle,\n      },\n      children\n    )\n  },\n});\n\ntype AccordionPaneHeight = {\n  minHeight: number,\n  activeHeight: number,\n  cachedHeight: number,\n  uncollapsedHeight: number,\n  collapsed: boolean\n}\n\n","import script from \"./AccordionBox.vue?vue&type=script&lang=ts\"\nexport * from \"./AccordionBox.vue?vue&type=script&lang=ts\"\n\nimport \"./AccordionBox.vue?vue&type=style&index=0&id=39ee0bdf&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-39ee0bdf\"]])\n\nexport default __exports__","import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-22255fa2\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"accordion-pane-container\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n  ]))\n}","\nimport { defineComponent } from \"vue\";\n\nexport default defineComponent({\n  name: \"AccordionPane\",\n  props: {\n    name: {\n      type: String,\n      required: true \n    },\n    units: {\n      type: Number,\n      default: 1\n    },\n    minHeight: {\n      type: Number,\n      default: 100\n    },\n    collapsed: {\n      type: Boolean,\n      default: false\n    }\n  }\n});\n","import { render } from \"./AccordionPane.vue?vue&type=template&id=22255fa2&scoped=true&ts=true\"\nimport script from \"./AccordionPane.vue?vue&type=script&lang=ts\"\nexport * from \"./AccordionPane.vue?vue&type=script&lang=ts\"\n\nimport \"./AccordionPane.vue?vue&type=style&index=0&id=22255fa2&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-22255fa2\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderSlot as _renderSlot, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5d47093b\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"object-editor-element\" }\nconst _hoisted_2 = {\n  key: 1,\n  class: \"no-prop\"\n}\nconst _hoisted_3 = {\n  key: 1,\n  class: \"no-prop\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_DictionaryFieldContents = _resolveComponent(\"DictionaryFieldContents\")!\n  const _component_ScrollBox = _resolveComponent(\"ScrollBox\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_ctx.property)\n      ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n          (_ctx.hasEditableProperties)\n            ? (_openBlock(), _createBlock(_component_ScrollBox, {\n                key: 0,\n                alwaysShowScrollBar: true,\n                scrollColor: \"#1f1f1f\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_DictionaryFieldContents, {\n                    class: \"contents\",\n                    property: _ctx.property,\n                    onChange: _ctx.onChange,\n                    onCreate: _ctx.onCreate,\n                    onDelete: _ctx.onDelete\n                  }, null, 8, [\"property\", \"onChange\", \"onCreate\", \"onDelete\"])\n                ]),\n                _: 1\n              }))\n            : (_openBlock(), _createElementBlock(\"p\", _hoisted_2, [\n                _renderSlot(_ctx.$slots, \"no-props\", {}, undefined, true)\n              ]))\n        ], 64))\n      : (_openBlock(), _createElementBlock(\"p\", _hoisted_3, [\n          _renderSlot(_ctx.$slots, \"no-prop\", {}, undefined, true)\n        ]))\n  ]))\n}","\nimport * as Page from \"@/store/Commands/PageCommands\";\n// Dependencies\nimport { mapMutations } from \"vuex\";\nimport { defineComponent, PropType } from \"vue\";\nimport { \n  DateProperty,\n  DictionaryProperty,\n  EnumProperty,\n  ListProperty,\n  NumberProperty,\n  Property,\n  PropertyType,\n  StringProperty\n} from \"@/assets/scripts/BlockDiagram\";\n// Components\nimport ScrollBox from \"@/components/Containers/ScrollBox.vue\";\nimport DictionaryFieldContents from \"@/components/Controls/Fields/DictionaryFieldContents.vue\";\n\nexport default defineComponent({\n  name: \"PropertyEditor\",\n  props: {\n    property: {\n      type: Object as PropType<DictionaryProperty>,\n      default: undefined\n    }\n  },\n  computed: {\n\n    /**\n     * Tests if the property has editable subproperties.\n     * @returns\n     *  True if the property has editable subproperties, false otherwise.\n     */\n    hasEditableProperties(): boolean {\n      if(!this.property) {\n        return false;\n      }\n      for(let value of this.property.value.values()) {\n        if(value.descriptor.is_visible ?? true)\n          return true;\n      }\n      return false;\n    }\n\n  },\n  methods: {\n\n    /**\n     * Application Store actions\n     */\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\n\n    /**\n     * Field change behavior.\n     * @param property\n     *  The field's property.\n     * @param value\n     *  The field's new value.\n     */\n    onChange(property: Property, value: any) {\n      switch(property.type) {\n        case PropertyType.Int:\n        case PropertyType.Float:\n          if(property instanceof NumberProperty) {\n            this.execute(new Page.SetNumberProperty(property, value));\n          }\n          break;\n        case PropertyType.String:\n          if(property instanceof StringProperty) {\n            this.execute(new Page.SetStringProperty(property, value));\n          }\n          break;\n        case PropertyType.Date:\n          if(property instanceof DateProperty) {\n            this.execute(new Page.SetDateProperty(property, value));\n          }\n          break;\n        case PropertyType.Enum:\n          if(property instanceof EnumProperty) {\n            this.execute(new Page.SetEnumProperty(property, value));\n          }\n          break;\n      }\n    },\n\n    /**\n     * Field create subproperty behavior.\n     * @param property\n     *  The field's property.\n     */\n    onCreate(property: Property) {\n      switch(property.type) {\n        case PropertyType.List:\n          if(property instanceof ListProperty) {\n            this.execute(new Page.CreateSubproperty(property));\n          }\n          break;\n      }\n    },\n\n    /**\n     * Field delete subproperty behavior.\n     * @param property\n     *  The field's property.\n     * @param id\n     *  The subproperty's id.\n     */\n    onDelete(property: Property, id: string) {\n      switch(property.type) {\n        case PropertyType.List:\n          if(property instanceof ListProperty) {\n            this.execute(new Page.DeleteSubproperty(property, id));\n          }\n          break;\n      }\n    }\n\n  },\n  components: { ScrollBox, DictionaryFieldContents }\n});\n","import { render } from \"./PropertyEditor.vue?vue&type=template&id=5d47093b&scoped=true&ts=true\"\nimport script from \"./PropertyEditor.vue?vue&type=script&lang=ts\"\nexport * from \"./PropertyEditor.vue?vue&type=script&lang=ts\"\n\nimport \"./PropertyEditor.vue?vue&type=style&index=0&id=5d47093b&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5d47093b\"]])\n\nexport default __exports__","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-28e3dbca\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"validator-problems-element\" }\nconst _hoisted_2 = { class: \"content\" }\nconst _hoisted_3 = [\"onClick\"]\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"icon\" }, \"\", -1))\nconst _hoisted_5 = { class: \"message\" }\nconst _hoisted_6 = [\"onClick\"]\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"icon\" }, \"\", -1))\nconst _hoisted_8 = { class: \"message\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ScrollBox = _resolveComponent(\"ScrollBox\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (0 < _ctx.getValidationErrors.length || 0 < _ctx.getValidationWarnings.length)\n      ? (_openBlock(), _createBlock(_component_ScrollBox, {\n          key: 0,\n          class: \"scrollbox\",\n          alwaysShowScrollBar: true,\n          scrollColor: \"#1f1f1f\"\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_2, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getValidationErrors, (error) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  class: \"validation-result error\",\n                  key: error,\n                  onClick: ($event: any) => (_ctx.focus(error.object))\n                }, [\n                  _hoisted_4,\n                  _createElementVNode(\"p\", _hoisted_5, _toDisplayString(error.reason), 1)\n                ], 8, _hoisted_3))\n              }), 128)),\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.getValidationWarnings, (warning) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  class: \"validation-result warning\",\n                  key: warning,\n                  onClick: ($event: any) => (_ctx.focus(warning.object))\n                }, [\n                  _hoisted_7,\n                  _createElementVNode(\"p\", _hoisted_8, _toDisplayString(warning.reason), 1)\n                ], 8, _hoisted_6))\n              }), 128))\n            ])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true)\n  ]))\n}","\nimport * as Page from \"@/store/Commands/PageCommands\";\nimport * as Store from \"@/store/StoreTypes\";\n// Dependencies\nimport { defineComponent } from \"vue\";\nimport { mapGetters, mapMutations, mapState } from \"vuex\";\n// Components\nimport ScrollBox from \"@/components/Containers/ScrollBox.vue\";\n\nexport default defineComponent({\n  name: \"ValidatorProblems\",\n  computed: {\n\n    /**\n     * Application Store data\n     */\n    ...mapState(\"ApplicationStore\", {\n      ctx(state: Store.ApplicationStore): Store.ApplicationStore {\n        return state;\n      },\n      editor(state: Store.ApplicationStore): Store.PageEditor {\n        return state.activePage;\n      }\n    }),\n\n    ...mapGetters(\"ApplicationStore\", [\n        \"getValidationErrors\", \"getValidationWarnings\"\n    ])\n  \n  },\n  methods: {\n\n    /**\n     * Application Store actions\n     */\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\n\n    /**\n     * Focuses the camera on an object.\n     * @param id\n     *  The id of the object.\n     */\n    focus(id: string) {\n      let obj = this.editor.page.lookup(id);\n      if(obj === this.editor.page) {\n        this.execute(new Page.UnselectDescendants(this.editor.page));\n      } else if(obj) {\n        this.execute(new Page.UnselectDescendants(this.editor.page));\n        this.execute(new Page.SelectObject(obj));\n        this.execute(new Page.MoveCameraToSelection(this.ctx, this.editor.page))\n      }\n    }\n\n  },\n  components: { ScrollBox }\n});\n","import { render } from \"./ValidatorProblems.vue?vue&type=template&id=28e3dbca&scoped=true&ts=true\"\nimport script from \"./ValidatorProblems.vue?vue&type=script&lang=ts\"\nexport * from \"./ValidatorProblems.vue?vue&type=script&lang=ts\"\n\nimport \"./ValidatorProblems.vue?vue&type=style&index=0&id=28e3dbca&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-28e3dbca\"]])\n\nexport default __exports__","\nimport * as Store from \"@/store/StoreTypes\";\n// Dependencies\nimport { defineComponent } from \"vue\";\nimport { mapGetters, mapState } from \"vuex\";\nimport { DictionaryProperty, PageModel } from \"@/assets/scripts/BlockDiagram\";\n// Components\nimport AccordionBox from \"@/components/Containers/AccordionBox.vue\";\nimport AccordionPane from \"@/components/Containers/AccordionPane.vue\";\nimport PropertyEditor from \"@/components/Elements/PropertyEditor.vue\";\nimport ValidatorProblems from \"@/components/Elements/ValidatorProblems.vue\";\n\nexport default defineComponent({\n  name: \"EditorSidebar\",\n  computed: {\n\n    /**\n     * Application Store data\n     */\n    ...mapState(\"ApplicationStore\", {\n      page(state: Store.ApplicationStore): PageModel {\n        return state.activePage.page;\n      },\n    }),\n\n    ...mapGetters(\"ApplicationStore\", [\n      \"hasSelection\", \"getSelection\"\n    ]),\n\n    /**\n     * Returns the currently selected object's properties.\n     * @returns\n     *  The currently selected object's properties.\n     */\n    selected(): DictionaryProperty | undefined {\n      if(this.hasSelection === 0) {\n        return this.page.props;\n      } else if(this.hasSelection === 1) {\n        return this.getSelection[0].props;\n      }\n      return undefined;\n    }\n\n  },\n  components: { \n    AccordionBox,\n    AccordionPane,\n    PropertyEditor,\n    ValidatorProblems\n  }\n});\n","import { render } from \"./EditorSidebar.vue?vue&type=template&id=09fcd1e8&scoped=true&ts=true\"\nimport script from \"./EditorSidebar.vue?vue&type=script&lang=ts\"\nexport * from \"./EditorSidebar.vue?vue&type=script&lang=ts\"\n\nimport \"./EditorSidebar.vue?vue&type=style&index=0&id=09fcd1e8&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-09fcd1e8\"]])\n\nexport default __exports__","\nimport * as Store from \"@/store/StoreTypes\";\nimport Configuration from \"@/assets/builder.config\"\n// Dependencies\nimport { clamp } from \"./assets/scripts/BlockDiagram\";\nimport { PointerTracker } from \"./assets/scripts/PointerTracker\";\nimport { mapMutations, mapState } from 'vuex';\nimport { LoadFile, LoadSettings } from './store/Commands/AppCommands';\nimport { defineComponent, markRaw, ref } from 'vue';\n// Components\nimport AppTitleBar from \"@/components/Elements/AppTitleBar.vue\";\nimport AppHotkeyBox from \"@/components/Elements/AppHotkeyBox.vue\";\nimport BlockDiagram from \"@/components/Elements/BlockDiagram.vue\";\nimport AppFooterBar from \"@/components/Elements/AppFooterBar.vue\";\nimport EditorSidebar from \"@/components/Elements/EditorSidebar.vue\";\n\nconst Handle = {\n  None   : 0,\n  Right  : 1\n}\n\nexport default defineComponent({\n  name: 'App',\n  setup() {\n    return { body: ref<HTMLElement | null>(null) };\n  },\n  data() {\n    return {\n      Handle,\n      bodyWidth: -1,\n      bodyHeight: -1,\n      frameSize: {\n        [Handle.Right]: 350\n      },\n      minFrameSize: {\n        [Handle.Right]: 310\n      },\n      drag: {\n        handle: Handle.None,\n        track: markRaw(new PointerTracker())\n      },\n      onResizeObserver: null as ResizeObserver | null\n    }\n  },\n  computed: {\n\n    /**\n     * Application Store data\n     */\n    ...mapState(\"ApplicationStore\", {\n      context(state: Store.ApplicationStore): Store.ApplicationStore {\n        return state;\n      }\n    }),\n\n    /**\n     * Returns the current grid layout.\n     * @returns\n     *  The current grid layout.\n     */\n    gridLayout(): { gridTemplateColumns: string } {\n      let r = this.frameSize[Handle.Right];\n      return {\n        gridTemplateColumns: `minmax(0, 1fr) ${ r }px`\n      }\n    }\n\n  },\n  methods: {\n    \n    /**\n     * Application Store mutations\n     */\n    ...mapMutations(\"ApplicationStore\", [\"execute\"]),\n\n    /**\n     * Resize handle drag start behavior.\n     * @param event\n     *  The pointer event.\n     * @param handle\n     *  The id of the handle being dragged.\n     */\n    startResize(event: PointerEvent, handle: number) {\n      let origin = this.frameSize[handle];\n      this.drag.handle = handle;\n      this.drag.track.capture(event, (_, track) => {\n        this.onResize(origin, track);\n      });\n      document.addEventListener(\"pointerup\", this.stopResize, { once: true });\n    },\n\n    /**\n     * Resize handle drag behavior.\n     * @param origin\n     *  The frame's origin.\n     * @param track\n     *  The mouse tracker.\n     */\n    onResize(origin: number, track: PointerTracker) {\n      switch (this.drag.handle) {\n        default:\n        case Handle.None:\n          break;\n        case Handle.Right:\n          this.setRightFrameSize(origin - track.deltaX);\n          break;\n      }\n    },\n\n    /**\n     * Resize handle drag stop behavior.\n     * @param event\n     *  The pointer event.\n     */\n    stopResize(event: PointerEvent) {\n      this.drag.handle = Handle.None;\n      this.drag.track.release(event);\n    },\n\n    /**\n     * Sets the size of the right frame.\n     * @param size\n     *  The new size of the right frame.\n     */\n    setRightFrameSize(size: number) {\n      let max = this.bodyWidth;\n      let min = this.minFrameSize[Handle.Right];\n      this.frameSize[Handle.Right] = clamp(size, min, max);\n    }\n\n  },\n  async created() {\n    // Import settings\n    let settings;\n    if(Configuration.is_web_hosted) {\n        settings = await (await fetch(\"./settings.json\")).json();\n    } else {\n        settings = require(\"../public/settings.json\");\n    }\n    // Load settings\n    this.execute(new LoadSettings(this.context, settings));\n    // Load empty file\n    this.execute(await LoadFile.fromNew(this.context));\n    // Load file from query parameters, if possible\n    let params = new URLSearchParams(window.location.search);\n    let src = params.get(\"src\");\n    if(src) {\n      try {\n        // TODO: Incorporate loading dialog\n        this.execute(await LoadFile.fromUrl(this.context, src));\n      } catch(ex) {\n        console.error(`Failed to load file from url: '${ src }'`);\n        console.error(ex);\n      }\n    }\n  },\n  mounted() {\n    this.bodyWidth = this.body!.clientWidth;\n    this.bodyHeight = this.body!.clientHeight;\n    this.onResizeObserver = new ResizeObserver(() => {\n      // Update current body size\n      this.bodyWidth = this.body!.clientWidth;\n      this.bodyHeight = this.body!.clientHeight;\n      // Restrict bottom and right frames\n      this.setRightFrameSize(this.frameSize[Handle.Right]);\n    });\n    this.onResizeObserver.observe(this.body!);\n    \n  },\n  unmounted() {\n    this.onResizeObserver?.disconnect();\n  },\n  components: {\n    AppHotkeyBox,\n    AppTitleBar,\n    BlockDiagram,\n    AppFooterBar,\n    EditorSidebar\n  },\n});\n","import { render } from \"./App.vue?vue&type=template&id=9c6e20ea&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=9c6e20ea&lang=css\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { PageEditor } from \"@/store/PageEditor\"\nimport { DiagramValidator } from \"@/assets/scripts/DiagramValidator/DiagramValidator\"\nimport { DiagramPublisher } from \"@/assets/scripts/DiagramPublisher/DiagramPublisher\"\nimport { BlockDiagramSchema } from \"@/assets/scripts/BlockDiagram/DiagramFactory\"\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\"\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  1. Stores  ////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Central Module Store\n */\nexport type ModuleStore = {\n    ApplicationStore: ApplicationStore,\n    ContextMenuStore: ContextMenuStore,\n    HotkeyStore: HotkeyStore\n}\n\n\n/**\n * Application Store\n */\nexport type ApplicationStore = {\n    settings: AppSettings,\n    clipboard: DiagramObjectModel[],\n    publisher: DiagramPublisher | undefined,\n    pages: Map<string, PageEditor>,\n    activePage: PageEditor\n}\n\n/**\n * Context Menu Store\n */\nexport type ContextMenuStore = {}\n\n/**\n * Hotkey Store\n */\nexport type HotkeyStore = {}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  2. App Settings  //////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Base App Settings\n */\nexport const BaseAppSettings: AppSettings = {\n    file: {\n        image_export: {\n            padding: 0,\n        }\n    },\n    edit: {\n        clone_offset: [0, 0]\n    },\n    view: {\n        diagram: {\n            display_grid: true,\n            display_shadows: true,\n            display_debug_mode: false,\n            render_high_quality: true,\n            disable_shadows_at: 0\n        }\n    },\n    hotkeys: {\n        file: { \n            new_file: \"\",\n            open_file: \"\",\n            save_file: \"\",\n            save_image: \"\",\n            save_select_image: \"\",\n            publish_file: \"\",\n            open_library: \"\",\n            save_library: \"\"\n        },\n        edit: {\n            undo: \"\",\n            redo: \"\",\n            cut: \"\",\n            copy: \"\",\n            paste: \"\",\n            delete: \"\",\n            duplicate: \"\",\n            select_all: \"\"\n        },\n        layout: {\n            selection_to_front: \"\",\n            selection_to_back: \"\",\n            bring_selection_forward: \"\",\n            send_selection_backward: \"\",\n            align_left: \"\",\n            align_center: \"\",\n            align_right: \"\",\n            align_top: \"\",\n            align_middle: \"\",\n            align_bottom: \"\",\n            group: \"\",\n            ungroup: \"\",\n            open_group: \"\",\n            close_group: \"\"\n        },\n        view: {\n            toggle_grid: \"\",\n            toggle_shadows: \"\",\n            reset_view: \"\",\n            zoom_in: \"\",\n            zoom_out: \"\",\n            fullscreen: \"\",\n            jump_to_selection: \"\",\n            jump_to_parents: \"\",\n            jump_to_children: \"\",\n            toggle_debug_view: \"\",\n        },\n        select: {\n            many: \"\"\n        }\n    }\n}\n\n/**\n * App Settings File\n */\nexport type AppSettings = {\n    file: {\n        image_export: {\n            padding: number\n        }\n    },\n    edit: {\n        clone_offset: [number, number]\n    },\n    view: {\n        diagram: DiagramDisplaySettings\n    },\n    hotkeys: {\n        file: FileHotkeys,\n        edit: EditHotkeys,\n        layout: LayoutHotkeys,\n        view: ViewHotkeys,\n        select: SelectHotkeys\n    }\n}\n\n/**\n * Diagram display settings\n */\nexport type DiagramDisplaySettings = {\n    display_grid: boolean,\n    display_shadows: boolean,\n    display_debug_mode: boolean,\n    render_high_quality: boolean,\n    disable_shadows_at: number\n}\n\n/**\n * File hotkeys\n */\nexport type FileHotkeys = { \n    new_file: string,\n    open_file: string,\n    save_file: string,\n    save_image: string,\n    save_select_image: string,\n    publish_file: string,\n    open_library: string,\n    save_library: string\n}\n\n/**\n * Edit hotkeys\n */\nexport type EditHotkeys = {\n    undo: string,\n    redo: string,\n    cut: string,\n    copy: string,\n    paste: string,\n    delete: string,\n    duplicate: string,\n    select_all: string\n}\n\n/**\n * Layout hotkeys\n */\nexport type LayoutHotkeys = {\n    selection_to_front: string,\n    selection_to_back: string,\n    bring_selection_forward: string,\n    send_selection_backward: string,\n    align_left: string,\n    align_center: string,\n    align_right: string,\n    align_top: string,\n    align_middle: string,\n    align_bottom: string,\n    group: string,\n    ungroup: string,\n    open_group: string,\n    close_group: string\n}\n\n/**\n * View hotkeys\n */\nexport type ViewHotkeys = {\n    toggle_grid: string,\n    toggle_shadows: string,\n    reset_view: string,\n    zoom_in: string,\n    zoom_out: string,\n    jump_to_selection: string,\n    jump_to_parents: string,\n    jump_to_children: string,\n    fullscreen: string,\n    toggle_debug_view: string\n}\n\n/**\n * Select hotkeys\n */\nexport type SelectHotkeys = {\n    many: string\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  3. App Configuration  /////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * App Configuration File\n */\nexport type AppConfiguration = {\n    is_web_hosted: boolean,\n    file_type_name: string,\n    file_type_extension: string,\n    schema: BlockDiagramSchema,\n    menus: {\n        help_menu: {\n            help_links: { text: string, url: string }[]\n        }\n    },\n    validator?: typeof DiagramValidator,\n    publisher?: typeof DiagramPublisher\n}\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  4. Type Helpers  //////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * Returns all keys of object type `T` whose value matches type `V`.\n * \n * Typescript Reference: \n *  - {@link https://www.typescriptlang.org/docs/handbook/2/mapped-types.html#mapping-modifiers Mapped Type Modifiers}\n *  - {@link https://www.typescriptlang.org/docs/handbook/2/conditional-types.html Conditional Types}\n *  - {@link https://www.typescriptlang.org/docs/handbook/2/indexed-access-types.html Index Access Types} \n */\nexport type ObjectKeysOfType<T, V> = { [K in keyof T]-?: T[K] extends V ? K : never }[keyof T];\n\n\n/**\n * Returns all valid key/value pairs from type `T`.\n */\nexport type KeyValuePairs<T> = {\n    [K in keyof T] : {\n        key: K,\n        value: T[K]\n    }\n}[keyof T];\n\n\n///////////////////////////////////////////////////////////////////////////////\n//  5. Page Editor  ///////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n\nexport * from \"./PageEditor\";\n","import Configuration from \"@/assets/builder.config\";\nimport { Module } from \"vuex\"\nimport { PageEditor } from \"@/store/PageEditor\";\nimport { AppCommand } from \"@/store/Commands/AppCommand\";\nimport { PageCommand } from \"@/store/Commands/PageCommand\";\nimport { DiagramObjectModel } from \"@/assets/scripts/BlockDiagram\";\nimport { ValidationErrorResult, ValidationWarningResult } from \"@/assets/scripts/DiagramValidator\";\nimport { ModuleStore, ApplicationStore, BaseAppSettings } from \"@/store/StoreTypes\"\n\nconst Publisher = Configuration.publisher ? \n    new Configuration.publisher() : undefined;\n\nconst DummyPage = PageEditor.createDummy();\n\nexport default {\n    namespaced: true,\n    state: {\n        settings: BaseAppSettings,\n        clipboard: [],\n        publisher: Publisher,\n        pages: new Map([[ DummyPage.id, DummyPage ]]),\n        activePage: DummyPage\n    },\n    getters: {\n\n        /**\n         * Tests if the clipboard has contents.\n         * @param state\n         *  The Vuex state.\n         * @returns\n         *  True if the clipboard has contents, false otherwise.\n         */\n        hasClipboardContents(state): boolean {\n            return 0 < state.clipboard.length;\n        },\n\n        /**\n         * Tests if the active page has a selection.\n         * @param state\n         *  The Vuex state.\n         * @returns\n         *  The number of items selected.\n         */\n        hasSelection(state): number {\n            let s = [...state.activePage.page.getSubtree(o => o.isSelected())];\n            // Use trigger to trip the reactivity system\n            return (state.activePage.trigger.value ? s : s).length;\n        },\n\n        /**\n         * Returns the active page's selection.\n         * @param state\n         *  The Vuex state.\n         * @returns\n         *  The selected objects.\n         */\n        getSelection(state): DiagramObjectModel[] {\n            let s = [...state.activePage.page.getSubtree(o => o.isSelected())];\n            // Use trigger to trip the reactivity system\n            return state.activePage.trigger.value ? s : s;\n        },\n\n        /**\n         * Tests if the last command on the active page can be undone.\n         * @returns\n         *  True if the last command can be undone, false otherwise.\n         */\n        canUndo(state): boolean {\n            let p = state.activePage;\n            // Use trigger to trip the reactivity system\n            return (state.activePage.trigger.value ? p : p).canUndo();\n        },\n\n        /**\n         * Tests if the last undone command on the active page can be redone.\n         * @returns\n         *  True if the last undone command can be redone, false otherwise.\n         */\n        canRedo(state): boolean {\n            let p = state.activePage;\n            // Use trigger to trip the reactivity system\n            return (state.activePage.trigger.value ? p : p).canRedo();\n        },\n\n        /**\n         * Tests if the active page represents a valid diagram per the\n         * configured validator. If the application is not configured with a\n         * validator, true is returned by default.\n         * @param state\n         *  The Vuex state.\n         * @returns\n         *  True if the page is valid, false otherwise.\n         */\n        isValid(state): boolean {\n            let p = state.activePage;\n            // Use trigger to trip the reactivity system\n            return (state.activePage.trigger.value ? p : p).isValid();\n        },\n\n        /**\n         * Returns the active page's validation errors. If the application is\n         * not configured with a validator, an empty array is returned.\n         * @param state\n         *  The Vuex state.\n         * @returns\n         *  The active page's validation errors.\n         */\n        getValidationErrors(state): ValidationErrorResult[] {\n            let p = state.activePage;\n            // Use trigger to trip the reactivity system\n            return (state.activePage.trigger.value ? p : p).getValidationErrors(); \n        },\n\n        /**\n         * Returns the active page's validation warnings. If the application is\n         * not configured with a validator, an empty array is returned.\n         * @param state\n         *  The Vuex state.\n         * @returns\n         *  The active page's validation warnings.\n         */\n        getValidationWarnings(state): ValidationWarningResult[] {\n            let p = state.activePage;\n            // Use trigger to trip the reactivity system\n            return (state.activePage.trigger.value ? p : p).getValidationWarnings();\n        }\n\n    },\n    mutations: {\n\n        /**\n         * Executes an application command.\n         * @param state\n         *  The Vuex state. \n         * @param command\n         *  The application command.\n         */\n        execute(state, command: AppCommand | PageCommand) {\n            if(command instanceof PageCommand) {\n                // Ignore null page\n                if(command.page === PageCommand.NullPage)\n                    return;\n                // Execute command\n                let editor = state.pages.get(command.page);\n                if(editor) {\n                    editor.execute(command);\n                } else {\n                    throw new Error(\n                        `'${ command.page }' is not a page.`\n                    );\n                }\n            } else {\n                command.execute();\n            }\n        }\n\n    }\n} as Module<ApplicationStore, ModuleStore>\n","import Configuration from \"@/assets/builder.config\";\nimport * as App from \"@/store/Commands/AppCommands\";\nimport * as Page from \"@/store/Commands/PageCommands\";\nimport { Module } from \"vuex\";\nimport { ContextMenuStore, ModuleStore } from \"../StoreTypes\";\nimport { ContextMenu, ContextMenuSection, ContextMenuSubmenu, MenuType } from \"@/assets/scripts/ContextMenuTypes\";\nimport { Namespace, titleCase } from \"@/assets/scripts/BlockDiagram\";\nimport { SpawnObject } from \"@/store/Commands/PageCommands\";\n\nexport default {\n    namespaced: true,\n    getters: {\n\n\n        ///////////////////////////////////////////////////////////////////////\n        //  1. File Menu  /////////////////////////////////////////////////////\n        ///////////////////////////////////////////////////////////////////////\n\n\n        /**\n         * Returns the file menu.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param getters\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The file menu.\n         */\n        fileMenu(_s, getters, rootState): ContextMenu {\n            let ctx = rootState.ApplicationStore;\n            // Sections\n            let sections: ContextMenuSection[] = [\n                getters.openFileMenu,\n                getters.saveFileMenu,\n                ctx.publisher ? getters.publishFileMenu : null\n            ].filter(Boolean);\n            // Menu\n            return { text: \"File\", type: MenuType.Submenu, sections };\n        },\n\n        /**\n         * Returns the 'open file' menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The 'open file' menu section.\n         */\n        openFileMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let file = ctx.settings.hotkeys.file;\n            return {\n                id: \"open_file_options\",\n                items: [\n                    {\n                        text: \"New File\",\n                        type: MenuType.Item,\n                        data: () => App.LoadFile.fromNew(ctx),\n                        shortcut: file.new_file,\n                    },\n                    {\n                        text: `Open File...`,\n                        type: MenuType.Item,\n                        data: () => App.LoadFile.fromFileSystem(ctx),\n                        shortcut: file.open_file,\n                    }\n                ],\n            }\n        },\n        \n        /**\n         * Returns the 'save file' menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The 'save file' menu section.\n         */\n        saveFileMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let file = ctx.settings.hotkeys.file;\n            let page = ctx.activePage.page;\n            return {\n                id: \"save_file_options\",\n                items: [\n                    {\n                        text: \"Save\",\n                        type: MenuType.Item,\n                        data: () => new App.SavePageToDevice(ctx, page.id),\n                        shortcut: file.save_file\n                    },\n                    {\n                        text: \"Save as Image\",\n                        type: MenuType.Item,\n                        data: () => new App.SavePageImageToDevice(ctx, page.id),\n                        shortcut: file.save_image\n                    },\n                    {\n                        text: \"Save Selection as Image\",\n                        type: MenuType.Item,\n                        data: () => new App.SaveSelectionImageToDevice(ctx, page.id),\n                        shortcut: file.save_select_image,\n                        disabled: !rootGetters[\"ApplicationStore/hasSelection\"],\n                    }\n                ]\n            }\n        },\n\n        /**\n         * Returns the 'publish file' menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The 'publish file' menu section.\n         */\n        publishFileMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let file = ctx.settings.hotkeys.file;\n            let page = ctx.activePage.page;\n            return {\n                id: \"publish_options\",\n                items: [\n                    {\n                        text: `Publish ${ Configuration.file_type_name }`,\n                        type: MenuType.Item,\n                        data: () => new App.PublishPageToDevice(ctx, page.id),\n                        shortcut: file.publish_file,\n                        disabled: !rootGetters[\"ApplicationStore/isValid\"]\n                    }\n                ]\n            }\n        },\n\n\n        ///////////////////////////////////////////////////////////////////////\n        //  2. Edit Menus  ////////////////////////////////////////////////////\n        ///////////////////////////////////////////////////////////////////////\n\n\n        /**\n         * Returns the edit menu.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param getters\n         *  The Vuex getters.\n         * @returns\n         *  The edit menu.\n         */\n        editMenu(_s, getters): ContextMenu {\n            return {\n                text: \"Edit\",\n                type: MenuType.Submenu,\n                sections: [\n                    getters.undoRedoMenu,\n                    getters.clipboardMenu,\n                    getters.deleteMenu,\n                    getters.duplicateMenu,\n                    getters.createMenu,\n                    getters.selectAllMenu\n                ]\n            }\n        },\n\n        /**\n         * Returns the undo/redo menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The undo/redo menu section.\n         */\n        undoRedoMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let edit = ctx.settings.hotkeys.edit;\n            let canUndo = rootGetters[\"ApplicationStore/canUndo\"];\n            let canRedo = rootGetters[\"ApplicationStore/canRedo\"];\n            return {\n                id: \"undo_redo_options\",\n                items: [\n                    {\n                        text: \"Undo\",\n                        type: MenuType.Item,\n                        data: () => new Page.UndoPageCommand(ctx, page.id),\n                        shortcut: edit.undo,\n                        disabled: !canUndo\n                    },\n                    {\n                        text: \"Redo\",\n                        type: MenuType.Item,\n                        data: () => new Page.RedoPageCommand(ctx, page.id),\n                        shortcut: edit.redo,\n                        disabled: !canRedo\n                    }\n                ],\n            }\n        },\n\n        /**\n         * Returns the clipboard menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The clipboard menu section.\n         */\n        clipboardMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let edit = ctx.settings.hotkeys.edit;\n            let canPaste = ctx.clipboard.length;\n            let hasSelection = rootGetters[\"ApplicationStore/hasSelection\"];\n            return {\n                id: \"clipboard_options\",\n                items: [\n                    {\n                        text: \"Cut\",\n                        type: MenuType.Item,\n                        data: () => new Page.CutSelectedChildren(ctx, page),\n                        shortcut: edit.cut,\n                        disabled: !hasSelection\n                    },\n                    {\n                        text: \"Copy\",\n                        type: MenuType.Item,\n                        data: () => new App.CopySelectedChildren(ctx, page),\n                        shortcut: edit.copy,\n                        disabled: !hasSelection\n                    },\n                    {\n                        text: \"Paste\",\n                        type: MenuType.Item,\n                        data: () => new Page.PasteToObject(ctx, page),\n                        shortcut: edit.paste,\n                        disabled: !canPaste\n                    }\n                ],\n            }\n        },\n\n        /**\n         * Returns the delete menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The delete menu section.\n         */\n        deleteMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let edit = ctx.settings.hotkeys.edit;\n            let hasSelection = rootGetters[\"ApplicationStore/hasSelection\"];\n            return {\n                id: \"delete_options\",\n                items: [\n                    {\n                        text: \"Delete\",\n                        type: MenuType.Item,\n                        data: () => new Page.RemoveSelectedChildren(page),\n                        shortcut: edit.delete,\n                        disabled: !hasSelection\n                    }\n                ]\n            };\n        },\n\n        /**\n         * Returns the duplicate menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The duplicate menu section.\n         */\n        duplicateMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let edit = ctx.settings.hotkeys.edit;\n            let hasSelection = rootGetters[\"ApplicationStore/hasSelection\"];\n            return {\n                id: \"duplicate_options\",\n                items: [\n                    {\n                        text: \"Duplicate\",\n                        type: MenuType.Item,\n                        data: () => new Page.DuplicateSelectedChildren(ctx, page),\n                        shortcut: edit.duplicate,\n                        disabled: !hasSelection\n                    }\n                ]\n            };\n        },\n\n        /**\n         * Returns the 'select all' menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The 'select all' menu section.\n         */\n        selectAllMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let edit = ctx.settings.hotkeys.edit;\n            return {\n                id: \"select_options\",\n                items: [\n                    {\n                        text: \"Select All\",\n                        type: MenuType.Item,\n                        data: () => new Page.SelectChildren(page),\n                        shortcut: edit.select_all,\n                    }\n                ],\n            };\n        },\n\n        /**\n         * Returns the create menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The create menu section.\n         */\n        createMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            \n            // Build menu\n            let root = page.factory.getNamespace().get(\"@\")! as Namespace;\n            let menu = generateCreateMenu(\n                \"@\", root, (id) => new Page.SpawnObject(ctx, page, id)\n            );\n            \n            // Return menu\n            return {\n                id: \"create_options\",\n                items: [\n                    {\n                        text: \"Create\",\n                        type: MenuType.Submenu,\n                        sections: menu.sections\n                    }\n                ]\n            };\n\n        },\n\n        /**\n         * Returns the create at menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The create at menu section.\n         */\n        createAtMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let x = ctx.activePage.pointer.value.x;\n            let y = ctx.activePage.pointer.value.y;\n            \n            // Build menu\n            let root = page.factory.getNamespace().get(\"@\")! as Namespace;\n            let menu = generateCreateMenu(\n                \"@\", root, (id) => new Page.SpawnObject(ctx, page, id, x, y)\n            );\n            \n            // Return menu\n            return {\n                id: \"create_options\",\n                items: [\n                    {\n                        text: \"Create\",\n                        type: MenuType.Submenu,\n                        sections: menu.sections\n                    }\n                ]\n            };\n            \n        },\n\n\n        ///////////////////////////////////////////////////////////////////////\n        //  3. Layout Menus  //////////////////////////////////////////////////\n        ///////////////////////////////////////////////////////////////////////\n\n\n        /**\n         * Returns the time menu.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param getters\n         *  The Vuex getters.\n         * @returns\n         *  The time menu.\n         */\n        layoutMenu(_s, getters): ContextMenu {\n            return {\n                text: \"Layout\",\n                type: MenuType.Submenu,\n                sections: [\n                    getters.layeringMenu\n                ]\n            };\n        },\n\n\n        /**\n         * Returns the layering menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The layering menu section.\n         */\n        layeringMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let layout = ctx.settings.hotkeys.layout;\n            return {\n                id: \"layering_options\",\n                items: [\n                    {\n                        text: \"To Front\",\n                        type: MenuType.Item,\n                        data: () => new Page.RelayerSelection(page, Page.Order.Top),\n                        shortcut: layout.selection_to_front,\n                    },\n                    {\n                        text: \"To Back\",\n                        type: MenuType.Item,\n                        data: () => new Page.RelayerSelection(page, Page.Order.Bottom),\n                        shortcut: layout.selection_to_back,\n                    },\n                    {\n                        text: \"Bring Forward\",\n                        type: MenuType.Item,\n                        data: () => new Page.RelayerSelection(page, Page.Order.OneAbove),\n                        shortcut: layout.bring_selection_forward,\n                    },\n                    {\n                        text: \"Send Backward\",\n                        type: MenuType.Item,\n                        data: () => new Page.RelayerSelection(page, Page.Order.OneBelow),\n                        shortcut: layout.send_selection_backward,\n                    }\n                ],\n            }\n        },\n\n        \n        ///////////////////////////////////////////////////////////////////////\n        //  4. View Menus  ////////////////////////////////////////////////////\n        ///////////////////////////////////////////////////////////////////////\n\n\n        /**\n         * Returns the view menu.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param getters\n         *  The Vuex getters.\n         * @returns\n         *  The view menu.\n         */\n        viewMenu(_s, getters): ContextMenu {\n            return {\n                text: \"View\",\n                type: MenuType.Submenu,\n                sections: [\n                    getters.diagramViewMenu,\n                    getters.diagramRenderMenu,\n                    getters.zoomMenu,\n                    getters.jumpMenu,\n                    getters.fullscreenMenu,\n                    getters.developerViewMenu\n                ]\n            }\n        },\n\n\n        /**\n         * Returns the diagram view menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The diagram view menu section.\n         */\n        diagramViewMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let view = ctx.settings.hotkeys.view;\n            let { \n                display_grid,\n                display_shadows\n            } = ctx.settings.view.diagram;\n            return {\n                id: \"diagram_view_options\",\n                items: [\n                    {\n                        text: \"Grid\",\n                        type: MenuType.Toggle,\n                        data: () => new App.ToggleGridDisplay(ctx),\n                        shortcut: view.toggle_grid,\n                        value: display_grid,\n                        keepMenuOpenOnSelect: true\n                    },\n                    {\n                        text: \"Shadows\",\n                        type: MenuType.Toggle,\n                        data: () => new App.ToggleShadowDisplay(ctx),\n                        shortcut: view.toggle_shadows,\n                        value: display_shadows,\n                        keepMenuOpenOnSelect: true\n                    }\n                ]\n            }\n        },\n\n        /**\n         * Returns the diagram render menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The diagram render menu section.\n         */\n        diagramRenderMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let render_high_quality = ctx.settings.view.diagram.render_high_quality;\n            return {\n                id: \"diagram_render_quality\",\n                items: [\n                    {\n                        text: \"Rendering – High Quality\",\n                        type: MenuType.Toggle,\n                        data: () => new App.SetRenderQuality(ctx, true),\n                        value: render_high_quality,\n                        keepMenuOpenOnSelect: true\n                    },\n                    {\n                        text: \"Rendering – Fast\",\n                        type: MenuType.Toggle,\n                        data: () => new App.SetRenderQuality(ctx, false),\n                        value: !render_high_quality,\n                        keepMenuOpenOnSelect: true\n                    }\n                ]\n            }\n        },\n\n        /**\n         * Returns the zoom menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The zoom menu section.\n         */\n        zoomMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let view = ctx.settings.hotkeys.view;\n            return {\n                id: \"zoom_options\",\n                items: [\n                    {\n                        text: \"Reset View\",\n                        type: MenuType.Item,\n                        data: () => new Page.ResetCamera(ctx, page),\n                        shortcut: view.reset_view\n                    },\n                    {\n                        text: \"Zoom In\",\n                        type: MenuType.Item,\n                        data: () => new Page.ZoomCamera(ctx, page, 0.25),\n                        shortcut: view.zoom_in\n                    },\n                    {\n                        text: \"Zoom Out\",\n                        type: MenuType.Item,\n                        data: () => new Page.ZoomCamera(ctx, page, -0.25),\n                        shortcut: view.zoom_out\n                    },\n                ]\n            }\n        },\n\n        /**\n         * Returns the jump menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The jump menu section.\n         */\n        jumpMenu(_s, _g, rootState, rootGetters): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let view = ctx.settings.hotkeys.view;\n            let hasSelection = rootGetters[\"ApplicationStore/hasSelection\"];\n            return {\n                id: \"jump_options\",\n                items: [\n                    {\n                        text: \"Zoom to Selection\",\n                        type: MenuType.Item,\n                        data: () => new Page.MoveCameraToSelection(ctx, page),\n                        shortcut: view.jump_to_selection,\n                        disabled: !hasSelection\n                    },\n                    {\n                        text: \"Jump to Parents\",\n                        type: MenuType.Item,\n                        data: () => new Page.MoveCameraToParents(ctx, page),\n                        shortcut: view.jump_to_parents,\n                        disabled: !hasSelection\n                    },\n                    {\n                        text: \"Jump to Children\",\n                        type: MenuType.Item,\n                        data: () => new Page.MoveCameraToChildren(ctx, page),\n                        shortcut: view.jump_to_children,\n                        disabled: !hasSelection\n                    }\n                ]\n            }\n        },\n\n        /**\n         * Returns the fullscreen menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The fullscreen menu section.\n         */\n        fullscreenMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let view = ctx.settings.hotkeys.view;\n            return {\n                id: \"fullscreen_options\",\n                items: [\n                    {\n                        text: \"Fullscreen\",\n                        type: MenuType.Item,\n                        data: () => new App.SwitchToFullscreen(ctx),\n                        shortcut: view.fullscreen,\n                    }\n                ],\n            };\n        },\n\n        /**\n         * Returns the developer view menu section.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The developer view menu section.\n         */\n        developerViewMenu(_s, _g, rootState): ContextMenuSection {\n            let ctx = rootState.ApplicationStore;\n            let view = ctx.settings.hotkeys.view;\n            let { display_debug_mode } = ctx.settings.view.diagram;\n            return {\n                id: \"developer_view_options\",\n                items: [\n                    {\n                        text: \"Debug Mode\",\n                        type: MenuType.Toggle,\n                        data: () => new App.ToggleDebugDisplay(ctx),\n                        shortcut: view.toggle_debug_view,\n                        value: display_debug_mode,\n                        keepMenuOpenOnSelect: true\n                    }\n                ],\n            };\n        },\n\n        \n        ///////////////////////////////////////////////////////////////////////\n        //  5. Help Menu  /////////////////////////////////////////////////////\n        ///////////////////////////////////////////////////////////////////////\n\n\n        /**\n         * Returns the help menu.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The help menu.\n         */\n        helpMenu(_s, _g, rootState): ContextMenu {\n            let ctx = rootState.ApplicationStore;\n            let links = Configuration.menus.help_menu.help_links;\n            // Links\n            let items: ContextMenu[] = links.map(link => ({\n                text: link.text,\n                type: MenuType.Item,\n                data: () => new App.OpenHyperlink(ctx, link.url)\n            }));\n            // Menu\n            return {\n                text: \"Help\",\n                type: MenuType.Submenu,\n                sections: [{ id: \"help_links\", items }]\n            };\n        }\n\n    }\n\n} as Module<ContextMenuStore, ModuleStore>\n\n/**\n * Generates a create submenu from a namespace.\n * @param key\n *  The namespace's key.\n * @param value\n *  The namespace.\n * @param spawn\n *  A callback that produces a {@link SpawnObject} from a template id.\n * @returns\n *  The formatted submenu.\n */\nfunction generateCreateMenu(key: string, value: Namespace, spawn: (id: string) => SpawnObject): ContextMenuSubmenu {\n    let sm: ContextMenuSubmenu = {\n        text: titleCase(key),\n        type: MenuType.Submenu,\n        sections: [\n            { id: \"submenus\", items: [] },\n            { id: \"options\", items: [] }\n        ]\n    }\n    for (let [k, v] of value) {\n        if (typeof v !== \"string\") {\n            sm.sections[0].items.push(\n                generateCreateMenu(k, v, spawn)\n            );\n        } else {\n            sm.sections[1].items.push({\n                text: titleCase(k),\n                type: MenuType.Item,\n                data: () => spawn(v as string),\n            });\n        }\n    }\n    sm.sections = sm.sections.filter(s => 0 < s.items.length)\n    return sm;\n}\n","import * as App from \"@/store/Commands/AppCommands\";\nimport * as Page from \"@/store/Commands/PageCommands\";\nimport { Module } from \"vuex\"\nimport { Hotkey } from \"@/assets/scripts/HotkeyObserver\"\nimport { CommandEmitter } from \"../Commands/Command\";\nimport { HotkeyStore, ModuleStore } from \"../StoreTypes\";\n\nexport default {\n    namespaced: true,\n    getters: {\n\n        /**\n         * Returns the native hotkeys.\n         * @returns\n         *  The supported native hotkeys.\n         */\n        nativeHotkeys(): Hotkey<CommandEmitter>[] {\n            return [\n                {\n                    shortcut: \"Control+R\",\n                    repeatable: true,\n                    allowBrowserBehavior: true\n                },\n                {\n                    shortcut: \"Control+Shift+R\",\n                    repeatable: true,\n                    allowBrowserBehavior: true\n                }\n            ]\n        },\n\n        /**\n         * Returns the file hotkeys.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @param rootGetters\n         *  The Vuex root getters.\n         * @returns\n         *  The file hotkeys.\n         */\n        fileHotkeys(_s, _g, rootState, rootGetters): Hotkey<CommandEmitter>[] {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let file = ctx.settings.hotkeys.file;\n            let isValid = rootGetters[\"ApplicationStore/isValid\"];\n            return [\n                {\n                    data: () => App.LoadFile.fromNew(ctx),\n                    shortcut: file.new_file,\n                    repeatable: false\n                },\n                {\n                    data: () => App.LoadFile.fromFileSystem(ctx),\n                    shortcut: file.open_file,\n                    repeatable: false\n                },\n                {\n                    data: () => new App.SavePageToDevice(ctx, page.id),\n                    shortcut: file.save_file,\n                    repeatable: false\n                },\n                {\n                    data: () => new App.SavePageImageToDevice(ctx, page.id),\n                    shortcut: file.save_image,\n                    repeatable: false\n                },\n                {\n                    data: () => new App.SaveSelectionImageToDevice(ctx, page.id),\n                    shortcut: file.save_select_image,\n                    repeatable: false\n                },\n                {\n                    data: () => new App.PublishPageToDevice(ctx, page.id),\n                    shortcut: file.publish_file,\n                    repeatable: false,\n                    disabled: !ctx.publisher || !isValid\n                }\n            ];\n        },\n\n        /**\n         * Returns the edit hotkeys.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The edit hotkeys.\n         */\n        editHotKeys(_s, _g, rootState): Hotkey<CommandEmitter>[] {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let edit = ctx.settings.hotkeys.edit;\n            return [\n                {\n                    data: () => new Page.UndoPageCommand(ctx, page.id),\n                    shortcut: edit.undo,\n                    repeatable: true\n                },\n                {\n                    data: () => new Page.RedoPageCommand(ctx, page.id),\n                    shortcut: edit.redo,\n                    repeatable: true\n                },\n                {\n                    data: () => new Page.CutSelectedChildren(ctx, page),\n                    shortcut: edit.cut,\n                    repeatable: false\n                },\n                {\n                    data: () => new App.CopySelectedChildren(ctx, page),\n                    shortcut: edit.copy,\n                    repeatable: false,\n                    allowBrowserBehavior: true\n                },\n                {\n                    data: () => new Page.PasteToObject(ctx, page),\n                    shortcut: edit.paste,\n                    repeatable: false\n                },\n                {\n                    data: () => new Page.RemoveSelectedChildren(page),\n                    shortcut: edit.delete,\n                    repeatable: false\n                },\n                {\n                    data: () => new Page.DuplicateSelectedChildren(ctx, page),\n                    shortcut: edit.duplicate,\n                    repeatable: false\n                },\n                {\n                    data: () => new Page.SelectChildren(page),\n                    shortcut: edit.select_all,\n                    repeatable: false\n                }\n            ];\n        },\n\n        /**\n         * Returns the layout hotkeys.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The layout hotkeys.\n         */\n        layoutHotkeys(_s, _g, rootState): Hotkey<CommandEmitter>[] {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let layout = ctx.settings.hotkeys.layout;\n            return [\n                {\n                    data: () => new Page.RelayerSelection(page, Page.Order.Top),\n                    shortcut: layout.selection_to_front,\n                    repeatable: false\n                },\n                {\n                    data: () => new Page.RelayerSelection(page, Page.Order.OneBelow),\n                    shortcut: layout.selection_to_back,\n                    repeatable: false\n                },\n                {\n                    data: () => new Page.RelayerSelection(page, Page.Order.OneAbove),\n                    shortcut: layout.bring_selection_forward,\n                    repeatable: false\n                },\n                {\n                    data: () => new Page.RelayerSelection(page, Page.Order.Bottom),\n                    shortcut: layout.send_selection_backward,\n                    repeatable: false\n                }\n            ];\n        },\n\n        /**\n         * Returns the view hotkeys.\n         * @param _s\n         *  The Vuex state. (Unused)\n         * @param _g\n         *  The Vuex getters. (Unused)\n         * @param rootState\n         *  The Vuex root state.\n         * @returns\n         *  The view hotkeys.\n         */\n        viewHotkeys(_s, _g, rootState): Hotkey<CommandEmitter>[] {\n            let ctx = rootState.ApplicationStore;\n            let page = ctx.activePage.page;\n            let view = ctx.settings.hotkeys.view;\n            return  [\n                {\n                    data: () => new App.ToggleGridDisplay(ctx),\n                    shortcut: view.toggle_grid,\n                    repeatable: false\n                },\n                {\n                    data: () => new App.ToggleShadowDisplay(ctx),\n                    shortcut: view.toggle_shadows,\n                    repeatable: false\n                },\n                {\n                    data: () => new Page.ResetCamera(ctx, page),\n                    shortcut: view.reset_view,\n                    repeatable: false\n                },\n                {\n                    data: () => new Page.ZoomCamera(ctx, page, 0.25),\n                    shortcut: view.zoom_in,\n                    repeatable: false\n                },\n                {\n                    data: () => new Page.ZoomCamera(ctx, page, -0.25),\n                    shortcut: view.zoom_out,\n                    repeatable: false\n                },\n                {\n                    data: () => new Page.MoveCameraToSelection(ctx, page),\n                    shortcut: view.jump_to_selection,\n                    repeatable: false\n                },\n                {\n                    data: () => new Page.MoveCameraToParents(ctx, page),\n                    shortcut: view.jump_to_parents,\n                    repeatable: false\n                },\n                {\n                    data: () => new Page.MoveCameraToChildren(ctx, page),\n                    shortcut: view.jump_to_children,\n                    repeatable: false\n                },\n                {\n                    data: () => new App.SwitchToFullscreen(ctx),\n                    shortcut: view.fullscreen,\n                    repeatable: false\n                },\n                {\n                    data: () => new App.ToggleDebugDisplay(ctx),\n                    shortcut: view.toggle_debug_view,\n                    repeatable: false\n                }\n            ];\n        }\n\n    }\n\n} as Module<HotkeyStore, ModuleStore>\n","import { createStore } from 'vuex'\nimport { ModuleStore } from './StoreTypes'\nimport ApplicationStore from './Stores/ApplicationStore'\nimport ContextMenuStore from './Stores/ContextMenuStore'\nimport HotkeyStore from './Stores/HotkeyStore'\n\nexport default createStore<ModuleStore>({\n  modules: {\n    ApplicationStore,\n    ContextMenuStore,\n    HotkeyStore\n  }\n})\n","import App from './App.vue'\nimport store from './store'\nimport { createApp } from 'vue'\nimport \"@/assets/fonts/inter.css\"\nimport \"@/assets/fonts/roboto_mono.css\"\n\ncreateApp(App).use(store).mount('#app')\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./BlockDiagram.vue?vue&type=style&index=0&id=52fd0e8e&scoped=true&lang=css\"","import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    onPointerdown: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('focus'))),\n    class: \"focus-box-container\"\n  }, [\n    _renderSlot(_ctx.$slots, \"default\")\n  ], 32))\n}","\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'FocusBox',\n  data() {\n    return {\n      onFocusOut: (\n        function(this: any, event: MouseEvent) {\n          // If clicked item isn't this container or a child of it, emit\n          // unfocus.\n          if (this.$el != event.target && !this.$el.contains(event.target)) {\n            this.$emit(\"unfocus\");\n          }\n        }\n      ).bind(this)\n    }\n  },\n  emits: [\"focus\", \"unfocus\"],\n  mounted() {\n    // Exit current event chain before binding to the pointerdown event.\n    // Otherwise, any click event that triggered mounted() will bubble up to\n    // this bound document event and cause focus to be left immediately.\n    setTimeout(() => {\n        document.body.addEventListener(\"pointerdown\", this.onFocusOut)\n    }, 0);\n  },\n  unmounted() {\n    document.body.removeEventListener('pointerdown', this.onFocusOut)\n  },\n});\n","import { render } from \"./FocusBox.vue?vue&type=template&id=0145f1c3&ts=true\"\nimport script from \"./FocusBox.vue?vue&type=script&lang=ts\"\nexport * from \"./FocusBox.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/Users/sebastien.gautrias/Downloads/attack-flow-2.0.1/src/attack_flow_builder/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}